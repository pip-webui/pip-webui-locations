{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/translate.ts","src/location/location.ts","src/location_dialog/location_dialog.ts","src/location_edit/location_edit.ts","src/location_ip/location_ip.ts","src/location_map/location_map.ts","src/locations.ts","temp/pip-webui-locations-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","locations","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","thisModule","angular","filter","$injector","pipTranslate","has","get","key","translate","directive","restrict","scope","pipLocationName","pipLocationPos","pipLocationResize","pipShowLocationIcon","template","$element","$attrs","toBoolean","value","toString","toLowerCase","pipCollapse","String","controller","$scope","clearMap","$mapControl","remove","$mapContainer","hide","generateMap","location","showMap","coordinates","google","maps","LatLng","$","show","appendTo","mapOptions","center","zoom","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","disableDoubleClickZoom","scrollwheel","draggable","map","Map","Marker","position","$name","children","$up","find","$down","collapsable","click","event","stopPropagation","disabled","pipRebind","$watch","newValue","addClass","LocationDialogService","$mdDialog","_$mdDialog","$inject","prototype","params","successCallback","cancelCallback","controllerAs","templateUrl","locationName","locationPos","clickOutsideToClose","then","result","LocationEditDialogController","$rootScope","$timeout","_this","_map","_marker","onSetLocation","geolocation","getCurrentPosition","coords","latitude","longitude","createMarker","setCenter","setZoom","changeLocation","$apply","maximumAge","enableHighAccuracy","timeout","_$scope","type","supportSet","navigator","mapContainer","setTimeout","trigger","setMap","animation","Animation","DROP","thisMarker_1","addListener","getPosition","tid","lat","lng","geocoder","Geocoder","geocode","results","status","GeocoderStatus","OK","formatted_address","onAddPin","getCenter","onRemovePin","onZoomIn","getZoom","onZoomOut","onCancel","cancel","onApply","LocationDialogRun","setTranslations","LOCATION_ADD_LOCATION","LOCATION_SET_LOCATION","LOCATION_ADD_PIN","LOCATION_REMOVE_PIN","run","4","$parse","$http","pipLocationEditDialog","pipLocationHolder","ngDisabled","attr","$empty","defineCoordinates","address","geometry","_","debounce","pipChanged","focus","onMapClick","$event","onMapKeyPress","keyCode","oldValue","defineCoordinatesDebounced","5","pipIpaddress","pipExtraInfo","ipAddress","response","geoplugin_latitude","geoplugin_longitude","extraInfo","city","geoplugin_city","regionCode","geoplugin_regionCode","region","geoplugin_regionName","areaCode","geoplugin_areaCode","countryCode","geoplugin_countryCode","country","geoplugin_countryName","continentCode","geoplugin_continentCode","error","console","6","pipLocationPositions","pipIconPath","pipDraggable","pipStretch","loc","determineCoordinates","point","fill","stroke","points","checkLocation","push","forEach","bounds","LatLngBounds","icon","path","iconPath","fillColor","fillOpacity","scale","strokeColor","strokeWeight","extend","fitBounds","stretchMap","7","8","$templateCache","put"],"mappings":"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","file":"pip-webui-locations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipLocations.Translate', []);\n\n    thisModule.filter('translate', function ($injector) {\n        var pipTranslate = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return function (key) {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    });\n\n})();\n\n","/**\n * @file Location control\n * @copyright Digital Living Software Corp. 2014-2016\n * @todo\n * - Improve samples in sampler app\n */\n\n/* global angular, google */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipLocation\", []);\n\n    thisModule.directive('pipLocation', \n        function () {\n            return {\n                restrict: 'EA',\n                scope: {\n                    pipLocationName: '&',\n                    pipLocationPos: '&',\n                    pipLocationResize: '&',\n                    pipShowLocationIcon: '='\n                },\n                template: \n                    function($element, $attrs: any) {\n                        function toBoolean(value) {\n                            if (value == null) return false;\n                            if (!value) return false;\n                            value = value.toString().toLowerCase();\n                            return value == '1' || value == 'true';\n                        }\n\n                        if (toBoolean($attrs.pipCollapse)) {\n                            return String()\n                                + '<div class=\"pip-location-name location-collapse\" ng-click=\"pipLocationResize()\" ng-hide=\"!pipLocationName()\"'\n                                + 'ng-class=\"pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\">'\n                                + '<md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"pipShowLocationIcon\"></md-icon>'\n                                + '<span class=\"pip-location-text\">{{pipLocationName()}}</span> '\n                                + '</div>'\n                                + '<div class=\"pip-location-container\" ng-hide=\"!pipLocationPos()\"></div>';\n                        } else {\n                            return String()\n                                + '<md-button class=\"pip-location-name\" ng-click=\"pipLocationResize()\" '\n                                + 'ng-class=\"pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\">'\n                                + '<div class=\"layout-align-start-center layout-row w-stretch\">'\n                                + '<md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"pipShowLocationIcon\"></md-icon>'\n                                + '<span class=\"pip-location-text flex\">{{pipLocationName()}}</span>'\n                                + '<md-icon md-svg-icon=\"icons:triangle-down\" class=\"flex-fixed\" ng-if=\"!showMap\"></md-icon>'\n                                + '<md-icon md-svg-icon=\"icons:triangle-up\" class=\"flex-fixed\" ng-if=\"showMap\"></md-icon>'\n                                + '</div></md-button>'\n                                + '<div class=\"pip-location-container\"'\n                                + 'ng-class=\"pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"></div>';\n                        }\n                    },\n                controller: 'pipLocationController'\n            }\n        }\n    );\n\n    thisModule.controller('pipLocationController',\n        function ($scope, $element, $attrs) {\n\n            function toBoolean(value) {\n                if (value == null) return false;\n                if (!value) return false;\n                value = value.toString().toLowerCase();\n                return value == '1' || value == 'true';\n            }\n\n            var \n                $name = $element.children('.pip-location-name'),\n                $mapContainer = $element.children('.pip-location-container'),\n                $mapControl = null,\n                $up = $element.find('.icon-up'),\n                $down = $element.find('.icon-down'),\n                collapsable = toBoolean($attrs.pipCollapse);\n\n            function clearMap() {\n                // Remove map control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = null;\n                $mapContainer.hide();\n            };\n\n            function generateMap() {\n                var location = $scope.pipLocationPos();\n                \n                // Safeguard for bad coordinates\n                if ($scope.showMap == false || location == null\n                    || location.coordinates == null\n                    || location.coordinates.length < 0) {\n                    clearMap();\n                    return;\n                }\n\n                // Determine map coordinates\n                var coordinates = new google.maps.LatLng(\n                    location.coordinates[0],\n                    location.coordinates[1]\n                );\n\n                // Clean up the control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = $('<div></div>');\n                $mapContainer.show();\n                $mapControl.appendTo($mapContainer);\n\n                // Create the map with point marker\n                var \n                    mapOptions = {\n                        center: coordinates,\n                        zoom: 12,\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\n                        disableDefaultUI: true,\n                        disableDoubleClickZoom: true,\n                        scrollwheel: false,\n                        draggable: false\n                    },\n                    map = new google.maps.Map($mapControl[0], mapOptions);\n                    \n                new google.maps.Marker({\n                    position: coordinates,\n                    map: map\n                });\n            };\n\n            // Process user actions\n            if (!collapsable) {\n                $scope.showMap = false;\n                $up.hide();\n                $mapContainer.hide();\n\n                $name.click(function (event) {\n                    event.stopPropagation();\n                    if ($attrs.disabled) return;\n                    $scope.showMap = !$scope.showMap;\n                    $up[$scope.showMap ? 'show' : 'hide']();\n                    $down[!$scope.showMap ? 'show' : 'hide']();\n                    generateMap();\n                });\n            }\n\n            // Watch for location changes\n            if (toBoolean($attrs.pipRebind)) {\n                $scope.$watch($scope.pipLocationPos,\n                    function (newValue) {\n                        generateMap();\n                    }\n                );\n            }\n\n            // Add class\n            $element.addClass('pip-location');\n\n            // Visualize map\n            if ($scope.pipLocationPos()) generateMap();\n            else clearMap();\n        }    \n    );\n\n})();\n","/**\n * @file Location edit dialog\n * @copyright Digital Living Software Corp. 2014-2016\n * @todo\n * - Improve sample in sampler app\n */\n \n/* global angular, google */\n\nclass LocationDialogService {\n    private _$mdDialog: angular.material.IDialogService;\n\n    constructor($mdDialog: angular.material.IDialogService) {\n        this._$mdDialog = $mdDialog;\n    }\n\n    public show (params, successCallback, cancelCallback) {\n        this._$mdDialog.show({\n            controller: 'pipLocationEditDialogController',\n            controllerAs: '$ctrl',\n            templateUrl: 'location_dialog/location_dialog.html',\n            locals: {\n                locationName: params.locationName,\n                locationPos: params.locationPos\n            },\n            clickOutsideToClose: true\n        })\n        .then((result) => {\n            if (successCallback) {\n                successCallback(result);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n    }\n}\n\nclass LocationEditDialogController {\n    private _map = null;\n    private _marker = null;\n    private _$scope: ng.IScope;\n    private _$mdDialog: angular.material.IDialogService;\n\n    public theme: string;\n    public locationPos;\n    public locationName;\n    public supportSet: boolean;\n\n    constructor(\n        $scope: ng.IScope, \n        $rootScope: ng.IRootScopeService, \n        $timeout: angular.ITimeoutService, \n        $mdDialog: angular.material.IDialogService,\n        locationPos, \n        locationName) {\n\n        this._$mdDialog = $mdDialog;\n        this._$scope = $scope;\n        this.theme = $rootScope['$theme'];\n        this.locationPos = locationPos && locationPos.type == 'Point'\n                && locationPos.coordinates && locationPos.coordinates.length == 2\n                ? locationPos : null;\n        this.locationName = locationName;\n        this.supportSet = navigator.geolocation != null;\n\n         // Wait until dialog is initialized\n        $timeout(() => {\n            let mapContainer = $('.pip-location-edit-dialog .pip-location-container');\n            // Calculate coordinate of the center\n            let coordinates = this.locationPos ?\n                new google.maps.LatLng(\n                    this.locationPos.coordinates[0],\n                    this.locationPos.coordinates[1]\n                ) : null;\n\n                // Create the map with point marker\n            let mapOptions = {\n                center: new google.maps.LatLng(0, 0),\n                zoom: 1,\n                mapTypeId: google.maps.MapTypeId.ROADMAP,\n                disableDefaultUI: true\n            }\n            if (coordinates != null) {\n                mapOptions.center = coordinates;\n                mapOptions.zoom = 12;\n            }\n\n            this._map = new google.maps.Map(mapContainer[0], mapOptions);\n            this._marker = this.createMarker(coordinates);\n\n                // Fix resizing issue\n            setTimeout(() => {\n                google.maps.event.trigger(this._map, 'resize');\n            }, 1000);\n        }, 0);\n\n        $scope.$on('pipLayoutResized', () => {\n            if (this._map == null) return;\n            google.maps.event.trigger(this._map, 'resize');\n        });\n\n    }\n\n    public createMarker (coordinates) {\n        if (this._marker) this._marker.setMap(null);\n        if (coordinates) {\n            this._marker = new google.maps.Marker({ \n                position: coordinates, \n                map: this._map,\n                draggable: true,\n                animation: google.maps.Animation.DROP\n            });\n\n            let thisMarker = this._marker;\n            google.maps.event.addListener(thisMarker, 'dragend', () => {\n                let coordinates = thisMarker.getPosition(); \n                    this.changeLocation(coordinates, null);\n            });\n        } else {\n            this._marker = null;\n        }\n\n        return this._marker;\n    }\n\n    public changeLocation(coordinates, tid) {\n        this.locationPos = {\n            type: 'Point',\n            coordinates: [coordinates.lat(), coordinates.lng()]\n        };\n        this.locationName = null;\n\n        if (tid == null) {\n            // tid = $scope.transaction.begin();\n            if (tid == null) return;\n        }\n\n        // Read address\n        let geocoder = new google.maps.Geocoder();\n        geocoder.geocode({ location: coordinates }, (results, status) => {\n            // if ($scope.transaction.aborted(tid)) return;\n\n            // Process positive response\n            if (status == google.maps.GeocoderStatus.OK && results && results.length > 0) {\n                this.locationName = results[0].formatted_address;\n            }\n\n                    // $scope.transaction.end();\n            this._$scope.$apply();\n        })\n    }\n    public onAddPin() {\n        if (this._map == null) return;\n\n        let coordinates = this._map.getCenter();\n            this._marker = this.createMarker(coordinates);\n            this.changeLocation(coordinates, null);\n    }\n\n    public onRemovePin() {\n        if (this._map == null) return;\n        this._marker = this.createMarker(null);\n        this.locationPos = null;\n        this.locationName = null;\n    }\n\n    public onZoomIn() {\n        if (this._map == null) return;\n        let zoom = this._map.getZoom();\n        this._map.setZoom(zoom + 1);\n    }\n\n    public onZoomOut() {\n        if (this._map == null) return;\n        let zoom = this._map.getZoom();\n        this._map.setZoom(zoom > 1 ? zoom - 1 : zoom);\n    }\n\n    public onSetLocation = function () {\n        if (this._map == null) return;\n\n                // var tid = $scope.transaction.begin();\n                // if (tid == null) return;\n\n        navigator.geolocation.getCurrentPosition(\n            (position) => {\n                        // if ($scope.transaction.aborted(tid)) return;\n\n                let coordinates = new google.maps.LatLng(\n                    position.coords.latitude, position.coords.longitude);\n                this._marker = this.createMarker(coordinates);\n                this._map.setCenter(coordinates);\n                this._map.setZoom(12);\n                this.changeLocation(coordinates, null);\n            },\n            () => {\n                        // $scope.transaction.end();\n                this.$scope.$apply();\n            },\n        {\n            maximumAge: 0,\n            enableHighAccuracy: true,\n            timeout: 5000\n        });\n    }\n\n    public onCancel(): void {\n        this._$mdDialog.cancel();\n    }\n\n    public onApply(): void {\n        this._$mdDialog.hide({\n            location: this.locationPos,\n            locationPos: this.locationPos,\n            locationName: this.locationName   \n        })\n    }\n\n    \n\n}\n\n(() => {\n    'use strict';\n    function LocationDialogRun ($injector) {\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            pipTranslate.setTranslations('en', {\n                'LOCATION_ADD_LOCATION': 'Add location',\n                'LOCATION_SET_LOCATION': 'Set location',\n                'LOCATION_ADD_PIN': 'Add pin',\n                'LOCATION_REMOVE_PIN': 'Remove pin'\n            });\n            pipTranslate.setTranslations('ru', {\n                'LOCATION_ADD_LOCATION': 'Добавить местоположение',\n                'LOCATION_SET_LOCATION': 'Определить положение',\n                'LOCATION_ADD_PIN': 'Добавить точку',\n                'LOCATION_REMOVE_PIN': 'Убрать точку'\n            });\n        }\n    }\n\n\n    angular.module('pipLocationEditDialog', ['ngMaterial',  'pipLocations.Templates'])\n           .run(LocationDialogRun)\n           .service('pipLocationEditDialog', LocationDialogService)\n           .controller('pipLocationEditDialogController', LocationEditDialogController \n        /*function ($scope, $rootScope, $timeout, $mdDialog,  locationPos, locationName) {\n\n            $scope.theme = $rootScope.$theme;\n            $scope.locationPos = locationPos && locationPos.type == 'Point'\n                && locationPos.coordinates && locationPos.coordinates.length == 2\n                ? locationPos : null;\n            $scope.locationName = locationName;\n            $scope.supportSet = navigator.geolocation != null;\n\n            // $scope.transaction = pipTransaction('location_edit_dialog', $scope);\n\n            var map = null, marker = null;\n\n            function createMarker (coordinates) {\n                if (marker) marker.setMap(null);\n                \n                if (coordinates) {\n                    marker = new google.maps.Marker({ \n                        position: coordinates, \n                        map: map,\n                        draggable: true,\n                        animation: google.maps.Animation.DROP\n                    });\n\n                    var thisMarker = marker;\n                    google.maps.event.addListener(thisMarker, 'dragend', function() {\n                       var coordinates = thisMarker.getPosition(); \n                       changeLocation(coordinates, null);\n                    });\n                } else {\n                    marker = null;\n                }\n\n                return marker;\n            };\n\n            function changeLocation(coordinates, tid) {\n                $scope.locationPos = {\n                    type: 'Point',\n                    coordinates: [coordinates.lat(), coordinates.lng()]\n                };\n                $scope.locationName = null;\n\n                if (tid == null) {\n                    // tid = $scope.transaction.begin();\n                    if (tid == null) return;\n                }\n\n                // Read address\n                var geocoder = new google.maps.Geocoder();\n                geocoder.geocode({ location: coordinates }, function(results, status) {\n                    // if ($scope.transaction.aborted(tid)) return;\n\n                    // Process positive response\n                    if (status == google.maps.GeocoderStatus.OK\n                        && results && results.length > 0) {\n                        $scope.locationName = results[0].formatted_address;\n                    }\n\n                    // $scope.transaction.end();\n                    $scope.$apply();\n                });\n            };\n\n            // Wait until dialog is initialized\n            $timeout(function () {\n                var mapContainer = $('.pip-location-edit-dialog .pip-location-container');\n\n                // Calculate coordinate of the center\n                var coordinates = $scope.locationPos ?\n                    new google.maps.LatLng(\n                        $scope.locationPos.coordinates[0],\n                        $scope.locationPos.coordinates[1]\n                    ) : null;\n\n                // Create the map with point marker\n                var mapOptions = {\n                    center: new google.maps.LatLng(0, 0),\n                    zoom: 1,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true\n                };\n                if (coordinates != null) {\n                    mapOptions.center = coordinates;\n                    mapOptions.zoom = 12;\n                }\n\n                map = new google.maps.Map(mapContainer[0], mapOptions);\n                marker = createMarker(coordinates);\n\n                // Fix resizing issue\n                setTimeout(function () {\n                    google.maps.event.trigger(map, 'resize');\n                }, 1000);\n            }, 0);\n\n            $scope.$on('pipLayoutResized', function (event) {\n                if (map == null) return;\n                google.maps.event.trigger(map, 'resize');\n            });\n\n            $scope.onAddPin = function () {\n                if (map == null) return;\n\n                var coordinates = map.getCenter();\n                marker = createMarker(coordinates);\n                changeLocation(coordinates, null);\n            };\n\n            $scope.onRemovePin = function () {\n                if (map == null) return;\n                marker = createMarker(null);\n                $scope.locationPos = null;\n                $scope.locationName = null;\n            };\n\n            $scope.onZoomIn = function () {\n                if (map == null) return;\n                var zoom = map.getZoom();\n                map.setZoom(zoom + 1);\n            };\n\n            $scope.onZoomOut = function () {\n                if (map == null) return;\n                var zoom = map.getZoom();\n                map.setZoom(zoom > 1 ? zoom - 1 : zoom);\n            };\n\n            $scope.onSetLocation = function () {\n                if (map == null) return;\n\n                // var tid = $scope.transaction.begin();\n                // if (tid == null) return;\n\n                navigator.geolocation.getCurrentPosition(\n                    function (position) {\n                        // if ($scope.transaction.aborted(tid)) return;\n\n                        var coordinates = new google.maps.LatLng(\n                            position.coords.latitude, position.coords.longitude);\n\n                        marker = createMarker(coordinates);\n                        map.setCenter(coordinates);\n                        map.setZoom(12);\n\n                        changeLocation(coordinates, null);\n                    },\n                    function () {\n                        // $scope.transaction.end();\n                        $scope.$apply();\n                    },\n                    {\n                        maximumAge: 0,\n                        enableHighAccuracy: true,\n                        timeout: 5000\n                    }\n                );\n            };\n\n            $scope.onCancel = function () {\n                $mdDialog.cancel();\n            };\n\n            $scope.onApply = function () {\n                $mdDialog.hide({\n                    location: $scope.locationPos,\n                    locationPos: $scope.locationPos,\n                    locationName: $scope.locationName   \n                });\n            };\n        }*/\n    );\n})();\n","/**\n * @file Location edit control\n * @copyright Digital Living Software Corp. 2014-2016\n * @todo\n * - Improve samples in sampler app\n */\n \n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipLocationEdit\", ['pipLocationEditDialog']);\n\n    thisModule.directive('pipLocationEdit',\n        function ($parse, $http, pipLocationEditDialog) {\n            return {\n                restrict: 'EAC',\n                scope: {\n                    pipLocationName: '=',\n                    pipLocationPos: '=',\n                    pipLocationHolder: '=',\n                    ngDisabled: '&',\n                    pipChanged: '&'\n                },\n                template: String()\n                    + '<md-input-container class=\"md-block\">'\n                    + '<label>{{ \\'LOCATION\\' | translate }}</label>'\n                    + '<input ng-model=\"pipLocationName\"'\n                    + 'ng-disabled=\"ngDisabled()\"/></md-input-container>'\n                    + '<div class=\"pip-location-empty\" layout=\"column\" layout-align=\"center center\">'\n                    + '<md-button class=\"md-raised\" ng-disabled=\"ngDisabled()\" ng-click=\"onSetLocation()\"'\n                    + 'aria-label=\"LOCATION_ADD_LOCATION\">'\n                    + '<span class=\"icon-location\"></span> {{::\\'LOCATION_ADD_LOCATION\\' | translate }}'\n                    + '</md-button></div>'\n                    + '<div class=\"pip-location-container\" tabindex=\"{{ ngDisabled() ? -1 : 0 }}\"'\n                    + ' ng-click=\"onMapClick($event)\" ng-keypress=\"\"onMapKeyPress($event)\"></div>',\n                controller: function ($scope, $element) {\n                    $element.find('md-input-container').attr('md-no-float', !!$scope.pipLocationHolder);\n                },\n                link: function ($scope: any, $element) {\n\n                    var \n                        $empty = $element.children('.pip-location-empty'),\n                        $mapContainer = $element.children('.pip-location-container'),\n                        $mapControl = null;\n\n                    function clearMap() {\n                        // Remove map control\n                        if ($mapControl) $mapControl.remove();\n                        $mapControl = null;\n\n                        // Toggle control visibility\n                        $mapContainer.hide();\n                        $empty.show();\n                    };\n\n                    function generateMap() {\n                        // Safeguard for bad coordinates\n                        var location = $scope.pipLocationPos;\n                        if (location == null || location.coordinates == null || location.coordinates.length < 0) {\n                            clearMap();\n                            return;\n                        }\n\n                        // Determine map coordinates\n                        var coordinates = new google.maps.LatLng(\n                            location.coordinates[0],\n                            location.coordinates[1]\n                        );\n\n                        // Clean up the control\n                        if ($mapControl) $mapControl.remove();\n\n                        // Toggle control visibility\n                        $mapContainer.show();\n                        $empty.hide();\n\n                        // Add a new map\n                        $mapControl = $('<div></div>');\n                        $mapControl.appendTo($mapContainer);\n\n                        // Create the map with point marker\n                        var mapOptions = {\n                            center: coordinates,\n                            zoom: 12,\n                            mapTypeId: google.maps.MapTypeId.ROADMAP,\n                            disableDefaultUI: true,\n                            disableDoubleClickZoom: true,\n                            scrollwheel: false,\n                            draggable: false\n                        };\n                        var map = new google.maps.Map($mapControl[0], mapOptions);\n                        var marker = new google.maps.Marker({\n                            position: coordinates,\n                            map: map\n                        });\n                    };\n\n                    function defineCoordinates() {\n                        var locationName = $scope.pipLocationName;\n\n                        if (locationName == '') {\n                            $scope.pipLocationPos = null;\n                            clearMap();\n                            $scope.$apply();\n                            return;\n                        }\n\n                    //    $http.get('http://maps.googleapis.com/maps/api/geocode/json?address=' + locationName)\n                    //    .success(function (response) { ... })\n                    //    .error(function (response) {... });\n\n                        var geocoder = new google.maps.Geocoder();\n                        geocoder.geocode({ address: locationName }, function(results, status) {\n                            $scope.$apply(function() {\n                                // Process response\n                                if (status == google.maps.GeocoderStatus.OK) {\n                                    // Check for empty results\n                                    if (results == null || results.length == 0) {\n                                        $scope.pipLocationPos = null;\n                                        clearMap();\n                                        return;\n                                    }\n\n                                    var \n                                        geometry = results[0].geometry || {},\n                                        location = geometry.location || {};\n\n                                    // Check for empty results again\n                                    if (location.lat == null || location.lng == null) {\n                                        $scope.pipLocationPos = null;\n                                        clearMap();\n                                        return;\n                                    }\n\n                                    $scope.pipLocationPos = {\n                                        type: 'Point',\n                                        coordinates: [\n                                            location.lat(),\n                                            location.lng()\n                                        ]\n                                    };\n\n                                    //generateMap();                                \n                                } \n                                // Process error...\n                                else {\n                                    $scope.pipLocationPos = null;\n                                    //clearMap();                                \n                                }\n                            });\n                        });\n\n                    };\n                    var defineCoordinatesDebounced = _.debounce(defineCoordinates, 2000);\n\n                    // Process user actions\n                    \n                    $scope.onSetLocation = function() {\n                        if ($scope.ngDisabled()) return;\n                          \n                        pipLocationEditDialog.show(\n                            {\n                                locationName: $scope.pipLocationName,\n                                locationPos: $scope.pipLocationPos\n                            },\n                            function (result) {\n                                var \n                                    location = result.location,\n                                    locationName = result.locationName;\n\n                                // Do not change anything if location is about the same\n                                if ($scope.pipLocationPos && $scope.pipLocationPos.type == 'Point'\n                                    && $scope.pipLocationPos.coordinates.length == 2\n                                    && location && location.coordinates.length == 2\n                                    && ($scope.pipLocationPos.coordinates[0] - location.coordinates[0]) < 0.0001\n                                    && ($scope.pipLocationPos.coordinates[1] - location.coordinates[1]) < 0.0001\n                                    && (locationName == $scope.pipLocationName)) {\n                                    return;        \n                                }\n\n                                $scope.pipLocationPos = location;\n                                $scope.pipLocationName = locationName;\n\n                                if (locationName == null && location != null) {\n                                    $scope.pipLocationName = \n                                        '(' + result.location.coordinates[0]\n                                        + ',' + result.location.coordinates[1] + ')';\n                                }\n                                $scope.pipChanged();\n                                $mapContainer[0].focus();\n                            }\n                        );\n                    };\n\n                    $scope.onMapClick = function ($event) {\n                        if ($scope.ngDisabled()) return;\n\n                        $mapContainer[0].focus();\n                        $scope.onSetLocation();\n                        //$event.stopPropagation();\n                    };\n\n                    $scope.onMapKeyPress = function($event) {\n                        if ($scope.ngDisabled()) return;\n\n                        if ($event.keyCode == 13 || $event.keyCode == 32) {\n                            $scope.onSetLocation();\n                            //$event.stopPropagation();\n                        }  \n                    };\n\n                    // Watch for location name changes\n                    $scope.$watch(\n                        function () {\n                            return $scope.pipLocationName\n                        },\n                        function (newValue, oldValue) {\n                            if (newValue != oldValue)\n                                defineCoordinatesDebounced();\n                        }\n                    );\n\n                    $scope.$watch(\n                        function () {\n                            return $scope.pipLocationPos\n                        },\n                        function () {\n                            generateMap();\n                        }\n                    );\n\n                    // Add class\n                    $element.addClass('pip-location-edit');\n\n                    // Visualize map\n                    if ($scope.pipLocationPos) generateMap();\n                    else clearMap();\n                }\n            }\n        }\n    );\n\n})();\n","/**\n * @file Location IP control\n * @copyright Digital Living Software Corp. 2014-2016\n * @todo\n * - Improve samples in sampler app\n */\n \n/* global angular, google */\n\ndeclare let google: any;\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipLocationIp\", []);\n\n    thisModule.directive('pipLocationIp',\n        function () {\n            return {\n                restrict: 'EA',\n                scope: {\n                    pipIpaddress: '&',\n                    pipExtraInfo: '&'\n                },\n                template: '<div class=\"pip-location-container\"></div>',\n                controller: 'pipLocationIpController'\n            }\n        }\n    );\n\n    thisModule.controller('pipLocationIpController',\n        function ($scope, $element, $attrs, $http) {\n\n            var \n                $mapContainer = $element.children('.pip-location-container'),\n                $mapControl = null;\n\n            function clearMap() {\n                // Remove map control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = null;\n            }\n\n            function generateMap(latitude, longitude) {\n                // Safeguard for bad coordinates\n                if (latitude == null || longitude == null) {\n                    clearMap();\n                    return;\n                }\n\n                // Determine map coordinates\n                var coordinates = new google.maps.LatLng(\n                    latitude,\n                    longitude\n                );\n\n                // Clean up the control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = $('<div></div>');\n                $mapControl.appendTo($mapContainer);\n\n                // Create the map with point marker\n                var \n                    mapOptions = {\n                        center: coordinates,\n                        zoom: 12,\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\n                        disableDefaultUI: true,\n                        disableDoubleClickZoom: true,\n                        scrollwheel: false,\n                        draggable: false\n                    },\n                    map = new google.maps.Map($mapControl[0], mapOptions);\n                    \n                new google.maps.Marker({\n                    position: coordinates,\n                    map: map\n                });\n            }\n\n            function toBoolean(value) {\n                if (value == null) return false;\n                if (!value) return false;\n                value = value.toString().toLowerCase();\n                return value == '1' || value == 'true';\n            }\n\n            function defineCoordinates() {\n                var ipAddress = $scope.pipIpaddress();\n\n                if (ipAddress == '') {\n                    clearMap();\n                    return;\n                }\n\n                // Todo: Find more reliable geocoding service to locate ip addresses\n                $http.jsonp('https://www.geoplugin.net/json.gp?ip=' + ipAddress + '&jsoncallback=JSON_CALLBACK')\n                .success(function (response) {\n                    if (response != null \n                        && response.geoplugin_latitude != null\n                        && response.geoplugin_longitude != null) {\n                        \n                        generateMap(response.geoplugin_latitude, response.geoplugin_longitude);\n\n                        if ($scope.pipExtraInfo) {\n                            var extraInfo = {\n                                city: response.geoplugin_city,  \n                                regionCode: response.geoplugin_regionCode,  \n                                region: response.geoplugin_regionName,  \n                                areaCode: response.geoplugin_areaCode,  \n                                countryCode: response.geoplugin_countryCode,  \n                                country: response.geoplugin_countryName,  \n                                continentCode: response.geoplugin_continentCode\n                            };\n                            $scope.pipExtraInfo({ extraInfo: extraInfo });\n                        }\n                    } else {\n                        clearMap();\n                    }\n                })\n                .error(function (response) {\n                    console.error(response);\n                    clearMap();\n                });\n            }\n\n            // Watch for location changes\n            if (toBoolean($attrs.pipRebind)) {\n                $scope.$watch(\n                    function () {\n                        return $scope.pipIpaddress()\n                    },\n                    function (newValue) {\n                        defineCoordinates();\n                    }\n                );\n            }\n\n            // Add class\n            $element.addClass('pip-location-ip');\n\n            // Visualize map\n            defineCoordinates();\n        }        \n    );\n\n})();\n\n","/**\n * @file Location map control\n * @copyright Digital Living Software Corp. 2014-2016\n */\n \n/* global angular, google */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipLocationMap\", []);\n\n    thisModule.directive('pipLocationMap',\n        function () {\n            return {\n                restrict: 'EA',\n                scope: {\n                    pipLocationPos: '&',\n                    pipLocationPositions: '&',\n                    pipIconPath: '&',\n                    pipDraggable: '&',\n                    pipStretch: '&'\n                },\n                template: '<div class=\"pip-location-container\"></div>',\n                controller: 'pipLocationMapController'\n            }\n        }\n    );\n\n    thisModule.controller('pipLocationMapController',\n        ['$scope', '$element', '$attrs', '$parse', '$timeout', function ($scope, $element, $attrs, $parse, $timeout) {\n            var\n                $mapContainer = $element.children('.pip-location-container'),\n                $mapControl = null,\n                stretchMap = $scope.pipStretch() || false,\n                iconPath = $scope.pipIconPath();\n\n            function clearMap() {\n                // Remove map control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = null;\n            }\n\n            function checkLocation (loc) {\n                return !(loc == null\n                || loc.coordinates == null\n                || loc.coordinates.length < 0);\n            }\n\n            function determineCoordinates(loc) {\n                var point = new google.maps.LatLng(\n                    loc.coordinates[0],\n                    loc.coordinates[1]\n                );\n\n                point.fill = loc.fill;\n                point.stroke = loc.stroke;\n\n                return point;\n            }\n\n            function toBoolean(value) {\n                if (value == null) return false;\n                if (!value) return false;\n                value = value.toString().toLowerCase();\n                return value == '1' || value == 'true';\n            }\n\n            function generateMap() {\n                var location = $scope.pipLocationPos(),\n                    locations = $scope.pipLocationPositions(),\n                    points = [],\n                    draggable = $scope.pipDraggable() || false;\n\n                // Safeguard for bad coordinates\n                if (checkLocation(location)) {\n                    points.push(determineCoordinates(location));\n                } else {\n                    if (locations && locations.length && locations.length > 0) {\n                        locations.forEach(function (loc) {\n                            if (checkLocation(loc)) {\n                                points.push(determineCoordinates(loc));\n                            }\n                        });\n                    }\n                }\n\n                if (points.length === 0) {\n                    clearMap();\n                    return;\n                }\n\n                // Clean up the control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = $('<div></div>');\n                $mapControl.appendTo($mapContainer);\n\n                // Create the map\n                var\n                    mapOptions = {\n                        center: points[0],\n                        zoom: 12,\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\n                        disableDefaultUI: true,\n                        disableDoubleClickZoom: true,\n                        scrollwheel: draggable,\n                        draggable: draggable\n                    },\n                    map = new google.maps.Map($mapControl[0], mapOptions),\n                    bounds = new google.maps.LatLngBounds();\n\n                // Create markers\n                points.forEach(function(point) {\n                    var icon = {\n                        path: iconPath,\n                        fillColor: point.fill || '#EF5350',\n                        fillOpacity: 1,\n                        scale: 1,\n                        strokeColor: point.stroke || 'white',\n                        strokeWeight: 5\n                    };\n\n                    new google.maps.Marker({\n                        position: point,\n                        map: map,\n                        icon: iconPath ? icon : null\n                    });\n                    bounds.extend(point);\n                });\n\n                // Auto-config of zoom and center\n                if (points.length > 1) map.fitBounds(bounds);\n            }\n\n            // Watch for location changes\n            if (toBoolean($attrs.pipRebind)) {\n                $scope.$watch(\n                    function () {\n                        return $scope.pipLocationPos()\n                    },\n                    function () {\n                        generateMap();\n                    }\n                );\n            }\n\n            // Add class\n            $element.addClass('pip-location-map');\n            if (stretchMap) $mapContainer.addClass('stretch');\n\n            // Visualize map\n            if ($scope.pipLocationPos() || $scope.pipLocationPositions()) $timeout(generateMap, 200);\n            else clearMap();\n        }]\n    );\n\n})();\n\n","﻿/// <reference path=\"../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    angular.module('pipLocations', [        \n        'pipLocation',\n        'pipLocationMap',\n        'pipLocationIp',\n        'pipLocationEditDialog',\n        'pipLocationEdit',\n        'pipLocations.Translate'\n    ]);\n    \n})();\n\n\n","(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_dialog/location_dialog.html',\n    '<md-dialog class=\"pip-dialog pip-location-edit-dialog layout-column\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-header layout-column layout-align-start-start\"><md-progress-linear ng-show=\"$ctrl.transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h3 class=\"flex\">{{ \\'LOCATION_SET_LOCATION\\' | translate }}</h3></div><div class=\"pip-footer\"><div class=\"layout-row layout-align-start-center\"><md-button class=\"md-accent\" ng-click=\"$ctrl.onAddPin()\" ng-show=\"$ctrl.locationPos == null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_ADD_PIN\\' }}\">{{ ::\\'LOCATION_ADD_PIN\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onRemovePin()\" ng-show=\"$ctrl.locationPos != null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_REMOVE_PIN\\' }}\">{{ ::\\'LOCATION_REMOVE_PIN\\' | translate }}</md-button></div><div class=\"flex\"></div><div class=\"layout-row layout-align-end-center\"><md-button ng-click=\"$ctrl.onCancel()\" aria-label=\"{{ ::\\'CANCEL\\' }}\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'APPLY\\' }}\">{{ ::\\'APPLY\\' | translate }}</md-button></div></div><div class=\"pip-body\"><div class=\"pip-location-container\"></div><md-button class=\"md-icon-button md-fab pip-zoom-in\" ng-click=\"$ctrl.onZoomIn()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_IN\\' }}\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-zoom-out\" ng-click=\"$ctrl.onZoomOut()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_OUT\\' }}\"><md-icon md-svg-icon=\"icons:minus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-set-location\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"{{ ::\\'LOCATION_SET_LOCATION\\' }}\" ng-show=\"supportSet\" ng-disabled=\"transaction.busy()\"><md-icon md-svg-icon=\"icons:target\"></md-icon></md-button></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-locations-html.min.js.map\n"]}