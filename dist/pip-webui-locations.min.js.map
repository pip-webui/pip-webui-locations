{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/translate.ts","src/location/location.ts","src/location_dialog/index.ts","src/location_dialog/locationDialog.ts","src/location_dialog/locationDialogService.ts","src/location_edit/location_edit.ts","src/location_ip/location_ip.ts","src/location_map/location_map.ts","src/locations.ts","temp/pip-webui-locations-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","locations","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","thisModule","angular","filter","$injector","pipTranslate","has","get","key","translate","LocationBindings","pipLocationName","pipLocationPos","pipShowLocationIcon","pipCollapse","pipRebind","pipDisabled","pipLocationResize","LocationController","LocationBindingsChanges","$element","_this","up","hide","mapContainer","showMap","name","click","event","stopPropagation","down","generateMap","addClass","clearMap","$inject","prototype","$onChanges","changes","currentValue","mapControl","remove","location","coordinates","google","maps","LatLng","$","show","appendTo","mapOptions","center","zoom","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","disableDoubleClickZoom","scrollwheel","draggable","map","Map","Marker","position","LocationComponent","bindings","templateUrl","controller","LocationEditDialogController","$scope","$rootScope","$timeout","$mdDialog","locationPos","locationName","_map","_marker","onSetLocation","geolocation","getCurrentPosition","coords","latitude","longitude","createMarker","setCenter","setZoom","changeLocation","$apply","maximumAge","enableHighAccuracy","timeout","theme","type","supportSet","navigator","trigger","$on","setMap","animation","Animation","DROP","thisMarker_1","addListener","getPosition","tid","lat","lng","geocoder","Geocoder","geocode","results","status","GeocoderStatus","OK","formatted_address","onAddPin","getCenter","onRemovePin","onZoomIn","getZoom","onZoomOut","onCancel","cancel","onApply","LocationDialogRun","setTranslations","LOCATION_ADD_LOCATION","LOCATION_SET_LOCATION","LOCATION_ADD_PIN","LOCATION_REMOVE_PIN","5","locationDialog_1","LocationDialogService","params","successCallback","cancelCallback","clickOutsideToClose","then","result","service","6","directive","$parse","$http","pipLocationEditDialog","pipLocationHolder","ngDisabled","String","find","attr","$mapControl","$mapContainer","$empty","defineCoordinates","address","geometry","children","_","debounce","pipChanged","focus","onMapClick","$event","onMapKeyPress","keyCode","$watch","newValue","oldValue","defineCoordinatesDebounced","7","pipIpaddress","pipExtraInfo","template","$attrs","toBoolean","value","toString","toLowerCase","ipAddress","response","geoplugin_latitude","geoplugin_longitude","extraInfo","city","geoplugin_city","regionCode","geoplugin_regionCode","region","geoplugin_regionName","areaCode","geoplugin_areaCode","countryCode","geoplugin_countryCode","country","geoplugin_countryName","continentCode","geoplugin_continentCode","error","console","8","pipLocationPositions","pipIconPath","pipDraggable","pipStretch","loc","determineCoordinates","point","fill","stroke","points","checkLocation","push","forEach","bounds","LatLngBounds","icon","path","iconPath","fillColor","fillOpacity","scale","strokeColor","strokeWeight","extend","fitBounds","stretchMap","9","10","run","$templateCache","put"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,MAAAJ,EAAAK,MAAAL,EAAAK,SAAAC,UAAAX,MAAA,WAAA,MAAA,SAAAY,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAjB,GAAA,GAAAsB,OAAA,uBAAAL,EAAA,IAAA,MAAAjB,GAAAuB,KAAA,mBAAAvB,EAAA,GAAAwB,GAAAV,EAAAG,IAAAhB,WAAAY,GAAAI,GAAA,GAAAQ,KAAAD,EAAAvB,QAAA,SAAAW,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAvB,QAAAW,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAhB,QAAA,IAAA,GAAAoB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAlB,EAAAD,ICEA,WACI,YAEA,IAAI2B,GAAaC,QAAQ3B,OAAO,4BAEhC0B,GAAWE,OAAO,aAAa,YAAU,SAASC,GAC9C,GAAIC,GAAeD,EAAUE,IAAI,gBAC3BF,EAAUG,IAAI,gBAAkB,IAEtC,OAAO,UAAUC,GACb,MAAOH,GAAgBA,EAAaI,UAAUD,IAAQA,EAAMA,iCCAxE,GAAME,IACFC,gBAAiB,IACjBC,eAAgB,IAChBC,oBAAqB,IACrBC,YAAa,IACbC,UAAW,IACXC,YAAa,IACbC,kBAAmB,KAgBvBC,GAbA,WAAA,QAAAC,MAWA,MAAAA,MAEA,mBAmBQD,GAAWE,GAHf,UAMI,IAAIC,GAAKvC,IACLA,MAAKgC,eAAU,IACfhC,KAAKwC,GAAAC,OACLzC,KAAK0C,aAAUD,OAEfzC,KAAK2C,SAAU,OACXC,KAAMC,MAAA,SAAeC,GACrBA,EAAIC,kBAAkBR,EAAML,cAE5BK,EAAKI,SAAQJ,EAAOI,QACpBJ,EAAKC,GAAAD,EAAMI,QAAY,OAAS,UAChCJ,EAAKS,KAAAT,EAAWI,QAAG,OAAA,UACpBJ,EAAAU,kBAOPX,EAASY,SAAA,gBACLlD,KAAK8B,gBAAc9B,KAAA2C,WAAA,EACtB3C,KAAAiD,cAEAjD,KAAAmD,WA7CT,MAgBIf,GAAAgB,SACI,cAgCcC,UAAWC,WAAY,SAAQC,GAC7CvD,KAAKiC,YAAAsB,EAAmBtB,WAAWsB,EAAAtB,UAAmBuB,aACtDxD,KAAK+B,sBAAsBwB,EAAAxB,qBAAsBwB,EAAYxB,oBAAqByB,aAClFxD,KAAKgC,cAAcuB,EAAQvB,aAAcuB,EAAQvB,YAAYwB,aAE7DxD,KAAIkC,cAAeqB,EAAErB,aAAAqB,EAAArB,YAAAsB,aACjBxD,KAAKiC,YACLjC,KAAK6B,gBAAiB0B,EAAQ1B,gBAAiB0B,EAAQ1B,gBAAe2B,aAAe,KACxFxD,KAAA8B,eAAAyB,EAAAzB,eAAAyB,EAAAzB,eAAA0B,aAAA,SAKQH,UAAWF,SAAA,WAACnD,KAAKyD,YACtBzD,KAACyD,WAAaC,SAClB1D,KAAKyD,WAAa,KACrBzD,KAAA0C,aAAAD,UAGoBY,UAAKJ,YAAe,WAGrC,GAAIU,GAAK3D,KAAW8B,kBAChB9B,KAAKgC,eAAW,GAAA,MAAA2B,GAAA,MAAAA,EAAAC,aAAAD,EAAAC,YAAA3C,OAAA,EAEnB,WADGjB,MAAAmD,UAUJ,IAAIS,GAAK,GAAWC,QAAAC,KAAAC,OAAAJ,EAAAC,YAAA,GAAAD,EAAAC,YAAA,GAAC5D,MAAKyD,YACtBzD,KAACyD,WAAeC,SACpB1D,KAAKyD,WAAaO,EAAA,eAClBhE,KAAK0C,aAAWuB,OAGhBjE,KACIyD,WAAUS,SAAGlE,KAAA0C,iBACTyB,IACAC,OAAQR,EACRS,KAAA,GACAC,UAAAT,OAAkBC,KAAIS,UAAAC,QACtBC,kBAAA,EACAC,wBAAkB,EAClBC,aAAW,EAEfC,WAAU,GAEdC,EAAI,GAAOhB,QAAKC,KAAOgB,IAAA9E,KAAAyD,WAAA,GAAAU,MACnBN,QAAAC,KAAUiB,QACVC,SAAQpB,EACTiB,IAAAA,KAIVzC,MAGG6C,GACAC,SAAAtD,EACAuD,YAAY,yBACfC,WAAAhD,WAGI3C,OAAU,qECxJf,YAEA2B,SAAA3B,OAAA,yBAA0B,aAAA,2BAC1BkB,EAAA,yHCHA,gBASQ0E,GAAA,mBAAAA,GAmDCC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAlDW,GAAApD,GAAMvC,IAGNA,MAAAsF,OAASA,EAZbtF,KAAAyF,UAAYA,EACZzF,KAAA4F,KAAO,KA0IR5F,KAAA6F,QAAA,UAAgBC,cAwBtB,WAvBG,GAAIvD,GAAKvC,IAAqB,OAAPA,KAAA4F,gBASTG,YAAcC,mBAAgB,SAAOhB,GAC3C,GAAApB,GAAe,GAAKC,QAAAC,KAAYC,OAACiB,EAAaiB,OAAAC,SAAAlB,EAAAiB,OAAAE,UAC9C5D,GAAKsD,QAAKtD,EAAU6D,aAAaxC,GACjCrB,EAAKqD,KAAKS,UAAUzC,GACpBrB,EAAKqD,KAAAU,QAAA,IAET/D,EAAAgE,eAAA3C,EAAA,kBAGGrB,EAAA+C,OAAAkB,WAECC,WAAA,EACAC,oBAAa,EACdC,QAAA,OAjJP3G,KAAK4G,MAAArB,EAAyB,YAC1BG,YAAYA,GAAsC,SAAvBA,EAAYmB,MACvCnB,EAAW9B,aAAQ,GAAA8B,EAAA9B,YAAA3C,OACnByE,EAAa,KACjB1F,KAAK2F,aAAaA,EAGlB3F,KAAA8G,WAAS,MAAAC,UAAAhB,cACD,WAEJ,GAAIrD,GAAcsB,EAAA,qDACdJ,EAAWrB,EAAKmD,YAMhB,GAAA7B,QAAUC,KAAGC,OAAAxB,EAAAmD,YAAA9B,YAAA,GAAArB,EAAAmD,YAAA9B,YAAA,IAAA,KACbO,GACAC,OAAO,GAAAP,QAAAC,KAAAC,OAAA,EAAA,GACPM,KAAA,EACAC,UAAAT,OAAkBC,KAAIS,UAAAC,QACzBC,kBAAA,EAEc,OAAXb,IACAO,EAAWC,OAASR,EACvBO,EAAAE,KAAA,IAGD9B,EAAKqD,KAAO,GAAG/B,QAAKC,KAAAgB,IAAApC,EAAwB,GAAEyB,GAG9C5B,EAAAsD,QAAStD,EAAA6D,aAAAxC,KACL,WACDC,OAAMC,KAAAhB,MAAAkE,QAAAzE,EAAAqD,KAAA,WACP,MAEN,KACOqB,IAAC,mBAAkB,WAAQ,MAAP1E,EAAMqD,MAE9B/B,OAAAC,KAAAhB,MAAAkE,QAAAzE,EAAAqD,KAAA,YA1Df,SAkFSvC,UAAA+C,aAAA,SAAAxC,GAnBG,GAAIrB,GAAKvC,QAASA,KAAK6F,SACnB7F,KAAA6F,QAAaqB,OAAC,MACdtD,EAAY,MACRiC,QAAU,GAAAhC,QAAWC,KAAAiB,QACrBC,SAAUpB,EACViB,IAAA7E,KAAS4F,KACThB,WAAW,EACZuC,UAAAtD,OAAAC,KAAAsD,UAAAC,MAGH,IAAAC,GAAkBtH,KAAA6F,eACd/B,KAAIhB,MAAAyE,YAAcD,EAAW,UAAc,WAC3C,GAAA1D,GAAK0D,EAAeE,aACrBjF,GAAAgE,eAAA3C,EAAA,YAGN5D,MAAA6F,QAAA,IAGJ,OAAA7F,MAAA6F,WA6BAxC,UAAAkD,eAAA,SAAA3C,EAAA6D,GA1BG,GAAIlF,GAACvC,aACD0F,aACAmB,KAAA,QACFjD,aAAAA,EAAA8D,MAAA9D,EAAA+D,QAGF3H,KAAI2F,aAAc,KAEP,MAAP8B,GAAwB,MAAPA,GAKrB,GAAAG,GAAS,GAAQ/D,QAAAC,KAAA+D,WACbC,SACDnE,SAACC,YAIImE,EAAUC,GACVA,GAAKnE,OAAAC,KAAemE,eAAWC,IAAAH,GAAkBA,EAAA9G,OAAA,IACpDsB,EAAAoD,aAAAoC,EAAA,GAAAI,mBAIH5F,EAAA+C,OAAAkB,eAIoBnD,UAAA+E,SAAA,cAAQ,MAAPpI,KAAA4F,MAGvB,GAAIhC,GAAW5D,KAAK4F,KAAAyC,WACpBrI,MAAK6F,QAAA7F,KAAeoG,aAAaxC,GACpC5D,KAAAuG,eAAA3C,EAAA,UAGyBP,UAAAiF,YAAA,WAAQ,MAAPtI,KAAA4F,OAEvB5F,KAAK6F,QAAA7F,KAAcoG,aAAK,MACxBpG,KAAK0F,YAAY,KACpB1F,KAAA2F,aAAA,SAGyBtC,UAAAkF,SAAA,cAAQ,MAAPvI,KAAA4F,MAEvB,GAAIvB,GAAMrE,KAAA4F,KAAQ4C,SACrBxI,MAAA4F,KAAAU,QAAAjC,EAAA,OAGyBhB,UAAAoF,UAAA,cAAQ,MAAPzI,KAAA4F,MAEvB,GAAIvB,GAAMrE,KAAA4F,KAAQ4C,SACrBxI,MAAA4F,KAAAU,QAAAjC,EAAA,EAAAA,EAAA,EAAAA,OA6B2BhB,UAAAqF,SAAA,WAC3B1I,KAAAyF,UAAAkD,YAGuBtF,UAAAuF,QAAA,gBAChBnD,UAAUhD,MACVkB,SAAA3D,KAAa0F,YACbA,YAAY1F,KAAM0F,YACpBC,aAAA3F,KAAA2F,gBAETN,IAEL7F,GAAC6F,6BAAAA,KAEOwD,GAAmB,SAAUvH,GAE7B,GAAIC,GAAeD,EAAAE,IAAA,gBAAAF,EAAAG,IAAA,gBAAA,IACLF,OACNuH,gBAAyB,MACzBC,sBAAyB,eACzBC,sBAAoB,eACpBC,iBAAA,UACDC,oBAAA,iBAECJ,gBAAyB,MACzBC,sBAAyB,0BACzBC,sBAAoB,uBACpBC,iBAAA,iBACDC,oBAAA,qBAMF9F,SAAmB,aAC/BhC,QAAA3B,OAAA,qCC1MD0J,GAAA,SAAAxI,EAAAlB,EAAAD,GAIA,gBACI4J,GAAAzI,EAAA,sBAEgB,WAGL,QAAA0I,GAAA5D,GACHzF,KAAKyF,UAAUA,QAHhB4D,GAACjG,SAAA,eAKsBC,UAAOY,KAAA,SAAAqF,EAAAC,EAAAC,QACrB/D,UAAWxB,MACXmB,WAAQgE,EAAA/D,0CACJ,oBACA,8CAEJM,aAAA2D,EAAyB3D,aAC3BD,YAAA4D,EAAA5D,aAEE+D,qBAAqB,IAEpBC,KAAA,SAAAC,GACFJ,GACKA,EAAgBI,eAGrBH,GACVA,OAIAH,6CCzBRO,QAAA,wBAAAP,wBAGoB,IAAAQ,GAAQ,SAAOlJ,EAAAlB,EAAiBD,kCAK7B4B,QAAO3B,OAAA,mBAAA,4BACfqK,UAAO,mBAAA,SAAA,QAAA,wBAAA,SAAAC,EAAAC,EAAAC,mBAEH,aAEApI,gBAAe,IACfC,eAAe,IAClBoI,kBAAA,IACDC,WAAgB,eACV,cAEAC,SACA,+lBAWNhF,YAAM,SAAqB,WAAU,SAAAE,EAAAhD,GAEjCA,EACI+H,KAAS,sBAAkBC,KAAA,gBAC3BhF,EAAA4E,mCAKI5E,EAAYhD,WAChBa,KAGAoH,GACAA,EAAc7G,SACjB6G,EAAA,KAACC,EAAA/H,OAEFgI,EAAAxG,eAIQhB,QACAU,GAAO2B,EAAAxD,cACX,IAAC,MAAA6B,GAAA,MAAAA,EAAAC,aAAAD,EAAAC,YAAA3C,OAAA,EASG,WANAkC,IASJ,IAAAS,GAAkB,GAAGC,QAAAC,KAAAC,OAAAJ,EAAAC,YAAA,GAAAD,EAAAC,YAAA,GACrB2G,IAGAA,EAAgB7G,SAChB8G,EAAYvG,OAGZwG,EAAIhI,SACQuB,EAAA,iBACAE,SAAAsG,MACRrG,IACAC,OAAAR,EACAS,KAAA,GACAC,UAAWT,OAAOC,KAAAS,UAAAC,QAClBC,kBAAgB,EAClBC,wBAAA,EACEC,aAAU,EACVC,WAAS,GAETC,EAAK,GAAGhB,QAAAC,KAAAgB,IAAAyF,EAAA,GAAApG,EACT,IAAAN,QAAAC,KAAAiB,QACNC,SAAApB,EAACiB,IAAAA,YAMM6F,QACA/E,GAAWL,EAAAzD,mBACK,IAAhB8D,EAKJ,MAJIL,GAAOxD,eAAA,KACVqB,QAEGmC,GAAAkB,eAIQ,GAAM3C,QAAIC,KAAO+D,oBAEb8C,QAAWhF,GAAgB,SAAWoC,EAAGC,YACzC,iBACAnE,OAAWC,KAAAmE,eAAAC,GAAA,IACJ,MAAPH,GAAO,GAAAA,EAAA9G,OAQP,MAPHqE,GAAAxD,eAAA,SAGGqB,QAMAyH,GAAW7C,EAAA,GAAA6C,aAAAjH,EAAAiH,EAAAjH,gBACJ,MAAPA,EAAO+D,KAAA,MAAA/D,EAAAgE,IAIP,MAHHrC,GAAAxD,eAAA,SAEDqB,4BAIQ,qBAENQ,EAAA+D,MAGL/D,EAAAgE,YAONrC,GAAAxD,eAAA,eAnGcQ,EAAYuI,SAAS,uBAAAL,EAAAlI,EAAAuI,SAAA,2BAAAN,EAAA,OA2GNO,EAAAC,SAAAL,EAAA,OAEhC5E,cAAA,WAEQR,EAAA6E,gBAGYlG,MACZ0B,aACYL,EAASzD,gBAIrB6D,YAAWJ,EAAAxD,yBACJ6H,SACQA,EAAIhG,SAASgC,EAAkBgE,EAAKhE,eAC3C7D,gBAAgD,SAA3BwD,EAACxD,eAAiB+E,MACA,GAAxCvB,EAAOxD,eAAe8B,YAAY3C,QAClC0C,GAA2C,GAA1CA,EAAgBC,YAAO3C,QAC3BqE,EAAOxD,eAAA8B,YAAA,GAAAD,EAAAC,YAAA,GAAA,MACV0B,EAAAxD,eAAA8B,YAAA,GAAAD,EAAAC,YAAA,GAAA,MAEM+B,GAAiBL,EAAAzD,oBAIpBC,eAAO6B,oBACUgC,EACL,SAAgB,MAAThC,IACtB2B,EAAAzD,gBACM,IAAA8H,EAAahG,SAAAC,YAAA,GACN,IAAG+F,EAAQhG,SAAAC,YAAA,GAAA,KAGnC0B,EAAA0F,aAEKR,EAAa,GAAAS,cAGhBC,WAAgB,SAASC,GACzB7F,EAAO6E,eAIXK,EAAO,GAAaS,QAChB3F,EAAIQ,oBAEDsF,cAAe,SAAUD,GACxB7F,EAAO6E,cAGb,IAAAgB,EAAAE,SAAA,IAAAF,EAAAE,SAGK/F,EACHQ,mBAIOwF,OAAC,iBACAhG,GAAAzD,iBAEV,SAAA0J,EAAAC,GAEKD,GACHC,GACIC,QAGAH,OAAA,WAEN,MAAAhG,GAAAxD,gBAGF,WAGImB,MACJX,EAAIY,SAAA,qBAACoC,EAAAxD,eACRmB,IAGXE,iBChOFuI,GAAI,SAAU/K,EAAGlB,EAAQD,kCAKL4B,QAAM3B,OAAA,sBACdqK,UAAO,gBAAA,2BAEH,YAEJ6B,aAAU,IACVC,aAAY,KAGtBC,SAAA,6CAEFzG,WAAW,+BASIA,WAAC,2BAAY,SAAA,WAAA,SAAA,QAAA,SAAAE,EAAAhD,EAAAwJ,EAAA9B,WAChB7G,KACHoH,GAEDA,EAAA7G,SAEI6G,EAAY,aAERtH,GAAOiD,EAAAC,GACX,GAAC,MAAAD,GAAA,MAAAC,EASG,WANAhD,IAOJ,IAAAS,GAAgB,GAAAC,QAAaC,KAAEC,OAAAmC,EAAAC,EAC/BoE,IAIIA,EAAU7G,WACEM,EAAA,iBACAE,SAAAsG,MACRrG,IACAC,OAAAR,EACAS,KAAA,GACAC,UAAWT,OAAOC,KAAAS,UAAAC,QAClBC,kBAAgB,EAEpBC,wBAAyB,EAEzBC,aAAY,EACZC,WAAU,KACL,GAAGf,QAAAC,KAAAgB,IAAAyF,EAAA,GAAApG,MACTN,QAAAC,KAAAiB,QACNC,SAAApB,EAEDiB,IAAAA,YAESkH,GAAMC,SAAQ,OAAPA,MAEZA,IAGJA,EAAAA,EAAAC,WAAAC,cACoB,KAAZF,GAAmB,QAAAA,YAGnBtB,QACAyB,GAAO7G,EAAAqG,cACX,OAAC,IAAAQ,MAGDhJ,kBAGW,wCAAmCgJ,EAAA,uCACnC,SAASC,MAEA,MAAZA,GAE0B,MAAvBA,EAAQC,oBACS,QAAZC,0BACIF,EAAEC,mBAAuBD,EAAAE,uBAC7BV,aAAY,IACZW,IACAC,KAAAJ,EAAUK,eACVC,WAAWN,EAAUO,qBACrBC,OAAOR,EAAUS,qBACjBC,SAAAV,EAAeW,mBACjBC,YAAAZ,EAAAa,sBACFC,QAAOd,EAAee,sBACzBC,cAAAhB,EAAAiB,wBACG/H,GAAAsG,cAAAW,UAAAA,SAIXpJ,OAGEmK,MAAA,SAAAlB,GACNmB,QAAAD,MAAAlB,GAGGjJ,YAxF6Bb,EAASuI,SAAA,2BAAAN,EAAA,IA4FlCwB,GACAD,EAAU7J,cACNqJ,OAAA,WAEN,MAAAhG,GAAAqG,gBACL,SAAAJ,GAGOb,MAOfpI,EAAAY,SAAA,kCCxIDsK,GAAI,SAAU7M,EAAGlB,EAAQD,kCAKL4B,QAAM3B,OAAA,uBACdqK,UAAO,iBAAA,2BAEH,YAEAhI,eAAc,IACd2L,qBAAe,IAClBC,YAAA,IACDC,aAAU,IACVC,WAAY,KAGtB/B,SAAA,6CAEFzG,WAAW,2CAUK,4BAAY,SAAA,WAAA,SAAA,SAAA,WAAA,SAAAE,EAAAhD,EAAAwJ,EAAA/B,EAAAvE,WAChBrC,KACHoH,GAEDA,EAAA7G,SACI6G,EAAY,gBAELsD,GACV,QAAA,MAAAA,GAE6B,MAA9BA,EAAAjK,aACQiK,EAAKjK,YAAc3C,OAAK,WAMvB6M,GAAqBD,GAE1B,GAAAE,GAAY,GAAClK,QAAAC,KAAAC,OAAA8J,EAAAjK,YAAA,GAAAiK,EAAAjK,YAAA,GAIb,OAHHmK,GAAAC,KAAAH,EAAAG,KAEDD,EAAAE,OAAmBJ,EAAAI,OACXF,UACChC,GAAMC,SAAQ,OAAPA,MAEZA,IAGJA,EAAAA,EAAAC,WAAAC,cACmB,KAAXF,GAAkB,QAAAA,YAOlB/I,KACJ,GAACU,GAAA2B,EAAAxD,iBAAA5B,EAAAoF,EAAAmI,uBAAAS,KAAAtJ,EAAAU,EAAAqI,iBAAA,CAaD,IAbMQ,EAAExK,GACJuK,EAAIE,KAAAN,EAA6BnK,OAGrBzD,EAAYe,QAAAf,EAAqBe,OAAM,KAC1CoN,QAAA,SAAAR,GACFM,EAAAN,IACNK,EAAAE,KAAAN,EAAAD,MAMJ,IAAAK,EAAAjN,OAGgB,WAAbkC,IAEJoH,IAIIA,EAAU7G,WACEM,EAAA,iBACAE,SAAAsG,MACRrG,IACAC,OAAA8J,EAAA,GACA7J,KAAA,GACAC,UAAWT,OAAEC,KAASS,UAAAC,QACtBC,kBAAW,EAEfC,wBAAyB,EAI7BC,YAAeC,EACXA,UAAWA,KACP,GAAIf,QAAEC,KAAQgB,IAAAyF,EAAA,GAAApG,GAAAmK,EAAA,GAAAzK,QAAAC,KAAAyK,uBACd,SAAiBR,MACjBS,IACAC,KAAKC,EACLC,UAAWZ,EAAEC,MAAY,UACzBY,YAAY,EACdC,MAAA,EAEEC,YAAYf,EAAOE,QAAA,QACnBc,aAAU,MAEVlL,QAAMC,KAAAiB,QACPC,SAAA+I,EACHlJ,IAAOA,EACR2J,KAAAE,EAAAF,EAAA,OAGoBF,EAAIU,OAAUjB,KAIrCG,EAAUjN,OAAO,GACjB4D,EAAOoK,UACHX,SAlGyBhM,EAASuI,SAAA,2BAAAN,EAAA,KAAA2E,EAAA5J,EAAAsI,eAAA,EAAAc,EAAApJ,EAAAoI,aAoGlC3B,GACAD,EAAA7J,cACIqJ,OAAA,WAEN,MAAAhG,GAAAxD,kBACL,WAGOmB,MAIRX,EAAIY,SAAO,oBAAmDgM,GAC1D1E,EAAAtH,SAAA,WAACoC,EAAAxD,kBAAWwD,EAAAmI,uBAEtBjI,EAAAvC,EAAA,oBCrJFkM,GAAA,SAAcxO,EAAClB,EAAcD,oCAGzBC,OAAA,gBACA,cACA,iBACA,gBACD,wBAEF,qDCZL2P,IAAA,SAAAzO,EAAAlB,EAAAD,IACA,SAAAC,GACA,IACAA,EAAA2B,QAAA3B,OAAA,0BACA,MAAAU,GACAV,EAAA2B,QAAA3B,OAAA,6BAEAA,EAAA4P,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,yBACA,2uCAIA,SAAA9P,GACA,IACAA,EAAA2B,QAAA3B,OAAA,0BACA,MAAAU,GACAV,EAAA2B,QAAA3B,OAAA,6BAEAA,EAAA4P,KAAA,iBAAA,SAAAC,GACAA,EAAAC,IAAA,sCACA","file":"pip-webui-locations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipLocations.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n\r\n","interface ILocationBindings {\r\n    [key: string]: any;\r\n\r\n    pipLocationName: any;\r\n    pipLocationPos: any;\r\n    pipShowLocationIcon: any;\r\n    pipCollapse: any;\r\n    pipRebind: any;\r\n    pipDisabled: any;\r\n    pipLocationResize: any;\r\n}\r\n\r\nconst LocationBindings: ILocationBindings = {\r\n    pipLocationName: '<',\r\n    pipLocationPos: '<',\r\n    pipShowLocationIcon: '<',\r\n    pipCollapse: '<',\r\n    pipRebind: '<',\r\n    pipDisabled: '<',\r\n    pipLocationResize: '&'\r\n}\r\n\r\nclass LocationBindingsChanges implements ng.IOnChangesObject, ILocationBindings {\r\n    [key: string]: any;\r\n\r\n    pipLocationName: ng.IChangesObject < string > ;\r\n    pipLocationPos: ng.IChangesObject < any > ;\r\n    pipShowLocationIcon: ng.IChangesObject < boolean > ;\r\n    pipCollapse: ng.IChangesObject < boolean > ;\r\n    pipRebind: ng.IChangesObject < boolean > ;\r\n    pipDisabled: ng.IChangesObject < boolean > ;\r\n\r\n    pipLocationResize: any;\r\n}\r\n\r\nclass LocationController implements ng.IController, ILocationBindings {\r\n    public pipLocationName: string;\r\n    public pipLocationPos: any;\r\n    public pipShowLocationIcon: boolean;\r\n    public pipCollapse: boolean;\r\n    public pipRebind: boolean;\r\n    public pipDisabled: boolean;\r\n    public showMap: boolean;\r\n    public pipLocationResize: Function;\r\n\r\n    private name: JQuery;\r\n    private mapContainer: JQuery;\r\n    private mapControl: JQuery;\r\n    private up: JQuery;\r\n    private down: JQuery;\r\n\r\n    constructor(\r\n        $element: JQuery\r\n    ) {\r\n        \"ngInject\";\r\n\r\n        // Process user actions\r\n        if (this.pipCollapse === true) {\r\n            this.up.hide();\r\n            this.mapContainer.hide();\r\n            this.showMap = false;\r\n\r\n            this.name.click((event) => {\r\n                event.stopPropagation();\r\n                if (this.pipDisabled) return;\r\n                this.showMap = !this.showMap;\r\n                this.up[this.showMap ? 'show' : 'hide']();\r\n                this.down[!this.showMap ? 'show' : 'hide']();\r\n                this.generateMap();\r\n            });\r\n        }\r\n\r\n        // Add class\r\n        $element.addClass('pip-location');\r\n\r\n        // Visualize map\r\n        if (this.pipLocationPos && this.showMap === true) {\r\n            this.generateMap();\r\n        } else {\r\n            this.clearMap();\r\n        }\r\n    }\r\n\r\n    public $onChanges(changes: LocationBindingsChanges) {\r\n        this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue : false;\r\n        this.pipShowLocationIcon = changes.pipShowLocationIcon ? changes.pipShowLocationIcon.currentValue : false;\r\n        this.pipCollapse = changes.pipCollapse ? changes.pipCollapse.currentValue : false;\r\n        this.pipDisabled = changes.pipDisabled ? changes.pipDisabled.currentValue : false;\r\n\r\n        if (this.pipRebind) {\r\n            this.pipLocationName = changes.pipLocationName ? changes.pipLocationName.currentValue : null;\r\n            this.pipLocationPos = changes.pipLocationPos ? changes.pipLocationPos.currentValue : null;\r\n        }\r\n    }\r\n\r\n    private clearMap() {\r\n        // Remove map control\r\n        if (this.mapControl) this.mapControl.remove();\r\n        this.mapControl = null;\r\n        this.mapContainer.hide();\r\n    }\r\n\r\n    private generateMap() {\r\n        const location = this.pipLocationPos;\r\n\r\n        // Safeguard for bad coordinates\r\n        if (this.pipCollapse === false || location == null || location.coordinates == null || location.coordinates.length < 0) {\r\n            this.clearMap();\r\n            return;\r\n        }\r\n\r\n        // Determine map coordinates\r\n        const coordinates = new google.maps.LatLng(\r\n            location.coordinates[0],\r\n            location.coordinates[1]\r\n        );\r\n\r\n        // Clean up the control\r\n        if (this.mapControl) this.mapControl.remove();\r\n        this.mapControl = $('<div></div>');\r\n        this.mapContainer.show();\r\n        this.mapControl.appendTo(this.mapContainer);\r\n\r\n        // Create the map with point marker\r\n        const\r\n            mapOptions = {\r\n                center: coordinates,\r\n                zoom: 12,\r\n                mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                disableDefaultUI: true,\r\n                disableDoubleClickZoom: true,\r\n                scrollwheel: false,\r\n                draggable: false\r\n            },\r\n            map = new google.maps.Map(this.mapControl[0], mapOptions);\r\n\r\n        new google.maps.Marker({\r\n            position: coordinates,\r\n            map: map\r\n        });\r\n    };\r\n\r\n\r\n}\r\n\r\nconst LocationComponent: ng.IComponentOptions = {\r\n    bindings: LocationBindings,\r\n    templateUrl: 'location/location.html',\r\n    controller: LocationController\r\n}\r\n\r\nangular.module(\"pipLocation\", [])\r\n    .component('pipLocation', LocationComponent);","angular.module('pipLocationEditDialog', ['ngMaterial', 'pipLocations.Templates']);\r\n\r\nimport './locationDialog';\r\nimport './locationDialogService'","export class LocationEditDialogController {\r\n        private _map = null;\r\n        private _marker = null;\r\n\r\n        public theme: string;\r\n        public locationPos;\r\n        public locationName;\r\n        public supportSet: boolean;\r\n\r\n        constructor(\r\n            private $scope: ng.IScope,\r\n            $rootScope: ng.IRootScopeService,\r\n            $timeout: angular.ITimeoutService,\r\n            private $mdDialog: angular.material.IDialogService,\r\n            locationPos,\r\n            locationName: string\r\n        ) {\r\n            this.theme = $rootScope['$theme'];\r\n            this.locationPos = locationPos && locationPos.type == 'Point' &&\r\n                locationPos.coordinates && locationPos.coordinates.length == 2 ?\r\n                locationPos : null;\r\n            this.locationName = locationName;\r\n            this.supportSet = navigator.geolocation != null;\r\n\r\n            // Wait until dialog is initialized\r\n            $timeout(() => {\r\n                let mapContainer = $('.pip-location-edit-dialog .pip-location-container');\r\n                // Calculate coordinate of the center\r\n                let coordinates = this.locationPos ?\r\n                    new google.maps.LatLng(\r\n                        this.locationPos.coordinates[0],\r\n                        this.locationPos.coordinates[1]\r\n                    ) : null;\r\n\r\n                // Create the map with point marker\r\n                let mapOptions = {\r\n                    center: new google.maps.LatLng(0, 0),\r\n                    zoom: 1,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true\r\n                }\r\n                if (coordinates != null) {\r\n                    mapOptions.center = coordinates;\r\n                    mapOptions.zoom = 12;\r\n                }\r\n\r\n                this._map = new google.maps.Map(mapContainer[0], mapOptions);\r\n                this._marker = this.createMarker(coordinates);\r\n\r\n                // Fix resizing issue\r\n                $timeout(() => {\r\n                    google.maps.event.trigger(this._map, 'resize');\r\n                }, 1000);\r\n            }, 0);\r\n\r\n            $scope.$on('pipLayoutResized', () => {\r\n                if (this._map == null) return;\r\n                google.maps.event.trigger(this._map, 'resize');\r\n            });\r\n\r\n        }\r\n\r\n        private createMarker(coordinates) {\r\n            if (this._marker) this._marker.setMap(null);\r\n            if (coordinates) {\r\n                this._marker = new google.maps.Marker({\r\n                    position: coordinates,\r\n                    map: this._map,\r\n                    draggable: true,\r\n                    animation: google.maps.Animation.DROP\r\n                });\r\n\r\n                let thisMarker = this._marker;\r\n                google.maps.event.addListener(thisMarker, 'dragend', () => {\r\n                    let coordinates = thisMarker.getPosition();\r\n                    this.changeLocation(coordinates, null);\r\n                });\r\n            } else {\r\n                this._marker = null;\r\n            }\r\n\r\n            return this._marker;\r\n        }\r\n\r\n        private changeLocation(coordinates, tid) {\r\n            this.locationPos = {\r\n                type: 'Point',\r\n                coordinates: [coordinates.lat(), coordinates.lng()]\r\n            };\r\n            this.locationName = null;\r\n\r\n            if (tid == null) {\r\n                // tid = $scope.transaction.begin();\r\n                if (tid == null) return;\r\n            }\r\n\r\n            // Read address\r\n            let geocoder = new google.maps.Geocoder();\r\n            geocoder.geocode({\r\n                location: coordinates\r\n            }, (results, status) => {\r\n                // if ($scope.transaction.aborted(tid)) return;\r\n\r\n                // Process positive response\r\n                if (status == google.maps.GeocoderStatus.OK && results && results.length > 0) {\r\n                    this.locationName = results[0].formatted_address;\r\n                }\r\n\r\n                // $scope.transaction.end();\r\n                this.$scope.$apply();\r\n            })\r\n        }\r\n        // Describe user actions\r\n        public onAddPin() {\r\n            if (this._map == null) return;\r\n\r\n            const coordinates = this._map.getCenter();\r\n            this._marker = this.createMarker(coordinates);\r\n            this.changeLocation(coordinates, null);\r\n        }\r\n\r\n        public onRemovePin() {\r\n            if (this._map == null) return;\r\n            this._marker = this.createMarker(null);\r\n            this.locationPos = null;\r\n            this.locationName = null;\r\n        }\r\n\r\n        public onZoomIn() {\r\n            if (this._map == null) return;\r\n            const zoom = this._map.getZoom();\r\n            this._map.setZoom(zoom + 1);\r\n        }\r\n\r\n        public onZoomOut() {\r\n            if (this._map == null) return;\r\n            const zoom = this._map.getZoom();\r\n            this._map.setZoom(zoom > 1 ? zoom - 1 : zoom);\r\n        }\r\n\r\n        public onSetLocation = function () {\r\n            if (this._map == null) return;\r\n\r\n            // var tid = $scope.transaction.begin();\r\n            // if (tid == null) return;\r\n\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    // if ($scope.transaction.aborted(tid)) return;\r\n\r\n                    const coordinates = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\r\n                    this._marker = this.createMarker(coordinates);\r\n                    this._map.setCenter(coordinates);\r\n                    this._map.setZoom(12);\r\n                    this.changeLocation(coordinates, null);\r\n                },\r\n                () => {\r\n                    // $scope.transaction.end();\r\n                    this.$scope.$apply();\r\n                }, {\r\n                    maximumAge: 0,\r\n                    enableHighAccuracy: true,\r\n                    timeout: 5000\r\n                });\r\n        }\r\n\r\n        public onCancel(): void {\r\n            this.$mdDialog.cancel();\r\n        }\r\n\r\n        public onApply(): void {\r\n            this.$mdDialog.hide({\r\n                location: this.locationPos,\r\n                locationPos: this.locationPos,\r\n                locationName: this.locationName\r\n            })\r\n        }\r\n    }\r\n\r\n{\r\n    const LocationDialogRun = function($injector: ng.auto.IInjectorService) {\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            ( < any > pipTranslate).setTranslations('en', {\r\n                'LOCATION_ADD_LOCATION': 'Add location',\r\n                'LOCATION_SET_LOCATION': 'Set location',\r\n                'LOCATION_ADD_PIN': 'Add pin',\r\n                'LOCATION_REMOVE_PIN': 'Remove pin'\r\n            });\r\n            ( < any > pipTranslate).setTranslations('ru', {\r\n                'LOCATION_ADD_LOCATION': 'Добавить местоположение',\r\n                'LOCATION_SET_LOCATION': 'Определить положение',\r\n                'LOCATION_ADD_PIN': 'Добавить точку',\r\n                'LOCATION_REMOVE_PIN': 'Убрать точку'\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    angular.module('pipLocationEditDialog')\r\n        .run(LocationDialogRun);\r\n}","import {\r\n    LocationEditDialogController\r\n} from './locationDialog';\r\n\r\n{\r\n    class LocationDialogService {\r\n        constructor(\r\n            private $mdDialog: angular.material.IDialogService\r\n        ) {}\r\n\r\n        public show(params, successCallback, cancelCallback) {\r\n            this.$mdDialog.show({\r\n                    controller: LocationEditDialogController,\r\n                    controllerAs: '$ctrl',\r\n                    templateUrl: 'location_dialog/locationDialog.html',\r\n                    locals: {\r\n                        locationName: params.locationName,\r\n                        locationPos: params.locationPos\r\n                    },\r\n                    clickOutsideToClose: true\r\n                })\r\n                .then((result) => {\r\n                    if (successCallback) {\r\n                        successCallback(result);\r\n                    }\r\n                }, () => {\r\n                    if (cancelCallback) {\r\n                        cancelCallback();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    angular.module('pipLocationEditDialog')\r\n        .service('pipLocationEditDialog', LocationDialogService);\r\n}","/**\r\n * @file Location edit control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve samples in sampler app\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipLocationEdit\", ['pipLocationEditDialog']);\r\n\r\n    thisModule.directive('pipLocationEdit',\r\n        function ($parse, $http, pipLocationEditDialog) {\r\n            return {\r\n                restrict: 'EAC',\r\n                scope: {\r\n                    pipLocationName: '=',\r\n                    pipLocationPos: '=',\r\n                    pipLocationHolder: '=',\r\n                    ngDisabled: '&',\r\n                    pipChanged: '&'\r\n                },\r\n                template: String()\r\n                    + '<md-input-container class=\"md-block\">'\r\n                    + '<label>{{ \\'LOCATION\\' | translate }}</label>'\r\n                    + '<input ng-model=\"pipLocationName\"'\r\n                    + 'ng-disabled=\"ngDisabled()\"/></md-input-container>'\r\n                    + '<div class=\"pip-location-empty\" layout=\"column\" layout-align=\"center center\">'\r\n                    + '<md-button class=\"md-raised\" ng-disabled=\"ngDisabled()\" ng-click=\"onSetLocation()\"'\r\n                    + 'aria-label=\"LOCATION_ADD_LOCATION\">'\r\n                    + '<span class=\"icon-location\"></span> {{::\\'LOCATION_ADD_LOCATION\\' | translate }}'\r\n                    + '</md-button></div>'\r\n                    + '<div class=\"pip-location-container\" tabindex=\"{{ ngDisabled() ? -1 : 0 }}\"'\r\n                    + ' ng-click=\"onMapClick($event)\" ng-keypress=\"\"onMapKeyPress($event)\"></div>',\r\n                controller: function ($scope, $element) {\r\n                    $element.find('md-input-container').attr('md-no-float', !!$scope.pipLocationHolder);\r\n                },\r\n                link: function ($scope: any, $element) {\r\n\r\n                    var \r\n                        $empty = $element.children('.pip-location-empty'),\r\n                        $mapContainer = $element.children('.pip-location-container'),\r\n                        $mapControl = null;\r\n\r\n                    function clearMap() {\r\n                        // Remove map control\r\n                        if ($mapControl) $mapControl.remove();\r\n                        $mapControl = null;\r\n\r\n                        // Toggle control visibility\r\n                        $mapContainer.hide();\r\n                        $empty.show();\r\n                    };\r\n\r\n                    function generateMap() {\r\n                        // Safeguard for bad coordinates\r\n                        var location = $scope.pipLocationPos;\r\n                        if (location == null || location.coordinates == null || location.coordinates.length < 0) {\r\n                            clearMap();\r\n                            return;\r\n                        }\r\n\r\n                        // Determine map coordinates\r\n                        var coordinates = new google.maps.LatLng(\r\n                            location.coordinates[0],\r\n                            location.coordinates[1]\r\n                        );\r\n\r\n                        // Clean up the control\r\n                        if ($mapControl) $mapControl.remove();\r\n\r\n                        // Toggle control visibility\r\n                        $mapContainer.show();\r\n                        $empty.hide();\r\n\r\n                        // Add a new map\r\n                        $mapControl = $('<div></div>');\r\n                        $mapControl.appendTo($mapContainer);\r\n\r\n                        // Create the map with point marker\r\n                        var mapOptions = {\r\n                            center: coordinates,\r\n                            zoom: 12,\r\n                            mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                            disableDefaultUI: true,\r\n                            disableDoubleClickZoom: true,\r\n                            scrollwheel: false,\r\n                            draggable: false\r\n                        };\r\n                        var map = new google.maps.Map($mapControl[0], mapOptions);\r\n                        var marker = new google.maps.Marker({\r\n                            position: coordinates,\r\n                            map: map\r\n                        });\r\n                    };\r\n\r\n                    function defineCoordinates() {\r\n                        var locationName = $scope.pipLocationName;\r\n\r\n                        if (locationName == '') {\r\n                            $scope.pipLocationPos = null;\r\n                            clearMap();\r\n                            $scope.$apply();\r\n                            return;\r\n                        }\r\n\r\n                        var geocoder = new google.maps.Geocoder();\r\n                        geocoder.geocode({ address: locationName }, function(results, status) {\r\n                            $scope.$apply(function() {\r\n                                // Process response\r\n                                if (status == google.maps.GeocoderStatus.OK) {\r\n                                    // Check for empty results\r\n                                    if (results == null || results.length == 0) {\r\n                                        $scope.pipLocationPos = null;\r\n                                        clearMap();\r\n                                        return;\r\n                                    }\r\n\r\n                                    var \r\n                                        geometry = results[0].geometry || {},\r\n                                        location = geometry.location || {};\r\n\r\n                                    // Check for empty results again\r\n                                    if (location.lat == null || location.lng == null) {\r\n                                        $scope.pipLocationPos = null;\r\n                                        clearMap();\r\n                                        return;\r\n                                    }\r\n\r\n                                    $scope.pipLocationPos = {\r\n                                        type: 'Point',\r\n                                        coordinates: [\r\n                                            location.lat(),\r\n                                            location.lng()\r\n                                        ]\r\n                                    };\r\n\r\n                                    //generateMap();                                \r\n                                } \r\n                                // Process error...\r\n                                else {\r\n                                    $scope.pipLocationPos = null;\r\n                                    //clearMap();                                \r\n                                }\r\n                            });\r\n                        });\r\n\r\n                    };\r\n                    var defineCoordinatesDebounced = _.debounce(defineCoordinates, 2000);\r\n\r\n                    // Process user actions\r\n                    \r\n                    $scope.onSetLocation = function() {\r\n                        if ($scope.ngDisabled()) return;\r\n                          \r\n                        pipLocationEditDialog.show(\r\n                            {\r\n                                locationName: $scope.pipLocationName,\r\n                                locationPos: $scope.pipLocationPos\r\n                            },\r\n                            function (result) {\r\n                                var \r\n                                    location = result.location,\r\n                                    locationName = result.locationName;\r\n\r\n                                // Do not change anything if location is about the same\r\n                                if ($scope.pipLocationPos && $scope.pipLocationPos.type == 'Point'\r\n                                    && $scope.pipLocationPos.coordinates.length == 2\r\n                                    && location && location.coordinates.length == 2\r\n                                    && ($scope.pipLocationPos.coordinates[0] - location.coordinates[0]) < 0.0001\r\n                                    && ($scope.pipLocationPos.coordinates[1] - location.coordinates[1]) < 0.0001\r\n                                    && (locationName == $scope.pipLocationName)) {\r\n                                    return;        \r\n                                }\r\n\r\n                                $scope.pipLocationPos = location;\r\n                                $scope.pipLocationName = locationName;\r\n\r\n                                if (locationName == null && location != null) {\r\n                                    $scope.pipLocationName = \r\n                                        '(' + result.location.coordinates[0]\r\n                                        + ',' + result.location.coordinates[1] + ')';\r\n                                }\r\n                                $scope.pipChanged();\r\n                                $mapContainer[0].focus();\r\n                            }\r\n                        );\r\n                    };\r\n\r\n                    $scope.onMapClick = function ($event) {\r\n                        if ($scope.ngDisabled()) return;\r\n\r\n                        $mapContainer[0].focus();\r\n                        $scope.onSetLocation();\r\n                        //$event.stopPropagation();\r\n                    };\r\n\r\n                    $scope.onMapKeyPress = function($event) {\r\n                        if ($scope.ngDisabled()) return;\r\n\r\n                        if ($event.keyCode == 13 || $event.keyCode == 32) {\r\n                            $scope.onSetLocation();\r\n                            //$event.stopPropagation();\r\n                        }  \r\n                    };\r\n\r\n                    // Watch for location name changes\r\n                    $scope.$watch(\r\n                        function () {\r\n                            return $scope.pipLocationName\r\n                        },\r\n                        function (newValue, oldValue) {\r\n                            if (newValue != oldValue)\r\n                                defineCoordinatesDebounced();\r\n                        }\r\n                    );\r\n\r\n                    $scope.$watch(\r\n                        function () {\r\n                            return $scope.pipLocationPos\r\n                        },\r\n                        function () {\r\n                            generateMap();\r\n                        }\r\n                    );\r\n\r\n                    // Add class\r\n                    $element.addClass('pip-location-edit');\r\n\r\n                    // Visualize map\r\n                    if ($scope.pipLocationPos) generateMap();\r\n                    else clearMap();\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Location IP control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve samples in sampler app\r\n */\r\n \r\n/* global angular, google */\r\n\r\ndeclare let google: any;\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipLocationIp\", []);\r\n\r\n    thisModule.directive('pipLocationIp',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipIpaddress: '&',\r\n                    pipExtraInfo: '&'\r\n                },\r\n                template: '<div class=\"pip-location-container\"></div>',\r\n                controller: 'pipLocationIpController'\r\n            }\r\n        }\r\n    );\r\n\r\n    thisModule.controller('pipLocationIpController',\r\n        function ($scope, $element, $attrs, $http) {\r\n\r\n            var \r\n                $mapContainer = $element.children('.pip-location-container'),\r\n                $mapControl = null;\r\n\r\n            function clearMap() {\r\n                // Remove map control\r\n                if ($mapControl) $mapControl.remove();\r\n                $mapControl = null;\r\n            }\r\n\r\n            function generateMap(latitude, longitude) {\r\n                // Safeguard for bad coordinates\r\n                if (latitude == null || longitude == null) {\r\n                    clearMap();\r\n                    return;\r\n                }\r\n\r\n                // Determine map coordinates\r\n                var coordinates = new google.maps.LatLng(\r\n                    latitude,\r\n                    longitude\r\n                );\r\n\r\n                // Clean up the control\r\n                if ($mapControl) $mapControl.remove();\r\n                $mapControl = $('<div></div>');\r\n                $mapControl.appendTo($mapContainer);\r\n\r\n                // Create the map with point marker\r\n                var \r\n                    mapOptions = {\r\n                        center: coordinates,\r\n                        zoom: 12,\r\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                        disableDefaultUI: true,\r\n                        disableDoubleClickZoom: true,\r\n                        scrollwheel: false,\r\n                        draggable: false\r\n                    },\r\n                    map = new google.maps.Map($mapControl[0], mapOptions);\r\n                    \r\n                new google.maps.Marker({\r\n                    position: coordinates,\r\n                    map: map\r\n                });\r\n            }\r\n\r\n            function toBoolean(value) {\r\n                if (value == null) return false;\r\n                if (!value) return false;\r\n                value = value.toString().toLowerCase();\r\n                return value == '1' || value == 'true';\r\n            }\r\n\r\n            function defineCoordinates() {\r\n                var ipAddress = $scope.pipIpaddress();\r\n\r\n                if (ipAddress == '') {\r\n                    clearMap();\r\n                    return;\r\n                }\r\n\r\n                // Todo: Find more reliable geocoding service to locate ip addresses\r\n                $http.jsonp('https://www.geoplugin.net/json.gp?ip=' + ipAddress + '&jsoncallback=JSON_CALLBACK')\r\n                .success(function (response) {\r\n                    if (response != null \r\n                        && response.geoplugin_latitude != null\r\n                        && response.geoplugin_longitude != null) {\r\n                        \r\n                        generateMap(response.geoplugin_latitude, response.geoplugin_longitude);\r\n\r\n                        if ($scope.pipExtraInfo) {\r\n                            var extraInfo = {\r\n                                city: response.geoplugin_city,  \r\n                                regionCode: response.geoplugin_regionCode,  \r\n                                region: response.geoplugin_regionName,  \r\n                                areaCode: response.geoplugin_areaCode,  \r\n                                countryCode: response.geoplugin_countryCode,  \r\n                                country: response.geoplugin_countryName,  \r\n                                continentCode: response.geoplugin_continentCode\r\n                            };\r\n                            $scope.pipExtraInfo({ extraInfo: extraInfo });\r\n                        }\r\n                    } else {\r\n                        clearMap();\r\n                    }\r\n                })\r\n                .error(function (response) {\r\n                    console.error(response);\r\n                    clearMap();\r\n                });\r\n            }\r\n\r\n            // Watch for location changes\r\n            if (toBoolean($attrs.pipRebind)) {\r\n                $scope.$watch(\r\n                    function () {\r\n                        return $scope.pipIpaddress()\r\n                    },\r\n                    function (newValue) {\r\n                        defineCoordinates();\r\n                    }\r\n                );\r\n            }\r\n\r\n            // Add class\r\n            $element.addClass('pip-location-ip');\r\n\r\n            // Visualize map\r\n            defineCoordinates();\r\n        }        \r\n    );\r\n\r\n})();\r\n\r\n","/**\r\n * @file Location map control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular, google */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipLocationMap\", []);\r\n\r\n    thisModule.directive('pipLocationMap',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipLocationPos: '&',\r\n                    pipLocationPositions: '&',\r\n                    pipIconPath: '&',\r\n                    pipDraggable: '&',\r\n                    pipStretch: '&'\r\n                },\r\n                template: '<div class=\"pip-location-container\"></div>',\r\n                controller: 'pipLocationMapController'\r\n            }\r\n        }\r\n    );\r\n\r\n    thisModule.controller('pipLocationMapController',\r\n        ['$scope', '$element', '$attrs', '$parse', '$timeout', function ($scope, $element, $attrs, $parse, $timeout) {\r\n            var\r\n                $mapContainer = $element.children('.pip-location-container'),\r\n                $mapControl = null,\r\n                stretchMap = $scope.pipStretch() || false,\r\n                iconPath = $scope.pipIconPath();\r\n\r\n            function clearMap() {\r\n                // Remove map control\r\n                if ($mapControl) $mapControl.remove();\r\n                $mapControl = null;\r\n            }\r\n\r\n            function checkLocation (loc) {\r\n                return !(loc == null\r\n                || loc.coordinates == null\r\n                || loc.coordinates.length < 0);\r\n            }\r\n\r\n            function determineCoordinates(loc) {\r\n                var point = new google.maps.LatLng(\r\n                    loc.coordinates[0],\r\n                    loc.coordinates[1]\r\n                );\r\n\r\n                point.fill = loc.fill;\r\n                point.stroke = loc.stroke;\r\n\r\n                return point;\r\n            }\r\n\r\n            function toBoolean(value) {\r\n                if (value == null) return false;\r\n                if (!value) return false;\r\n                value = value.toString().toLowerCase();\r\n                return value == '1' || value == 'true';\r\n            }\r\n\r\n            function generateMap() {\r\n                var location = $scope.pipLocationPos(),\r\n                    locations = $scope.pipLocationPositions(),\r\n                    points = [],\r\n                    draggable = $scope.pipDraggable() || false;\r\n\r\n                // Safeguard for bad coordinates\r\n                if (checkLocation(location)) {\r\n                    points.push(determineCoordinates(location));\r\n                } else {\r\n                    if (locations && locations.length && locations.length > 0) {\r\n                        locations.forEach(function (loc) {\r\n                            if (checkLocation(loc)) {\r\n                                points.push(determineCoordinates(loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if (points.length === 0) {\r\n                    clearMap();\r\n                    return;\r\n                }\r\n\r\n                // Clean up the control\r\n                if ($mapControl) $mapControl.remove();\r\n                $mapControl = $('<div></div>');\r\n                $mapControl.appendTo($mapContainer);\r\n\r\n                // Create the map\r\n                var\r\n                    mapOptions = {\r\n                        center: points[0],\r\n                        zoom: 12,\r\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                        disableDefaultUI: true,\r\n                        disableDoubleClickZoom: true,\r\n                        scrollwheel: draggable,\r\n                        draggable: draggable\r\n                    },\r\n                    map = new google.maps.Map($mapControl[0], mapOptions),\r\n                    bounds = new google.maps.LatLngBounds();\r\n\r\n                // Create markers\r\n                points.forEach(function(point) {\r\n                    var icon = {\r\n                        path: iconPath,\r\n                        fillColor: point.fill || '#EF5350',\r\n                        fillOpacity: 1,\r\n                        scale: 1,\r\n                        strokeColor: point.stroke || 'white',\r\n                        strokeWeight: 5\r\n                    };\r\n\r\n                    new google.maps.Marker({\r\n                        position: point,\r\n                        map: map,\r\n                        icon: iconPath ? icon : null\r\n                    });\r\n                    bounds.extend(point);\r\n                });\r\n\r\n                // Auto-config of zoom and center\r\n                if (points.length > 1) map.fitBounds(bounds);\r\n            }\r\n\r\n            // Watch for location changes\r\n            if (toBoolean($attrs.pipRebind)) {\r\n                $scope.$watch(\r\n                    function () {\r\n                        return $scope.pipLocationPos()\r\n                    },\r\n                    function () {\r\n                        generateMap();\r\n                    }\r\n                );\r\n            }\r\n\r\n            // Add class\r\n            $element.addClass('pip-location-map');\r\n            if (stretchMap) $mapContainer.addClass('stretch');\r\n\r\n            // Visualize map\r\n            if ($scope.pipLocationPos() || $scope.pipLocationPositions()) $timeout(generateMap, 200);\r\n            else clearMap();\r\n        }]\r\n    );\r\n\r\n})();\r\n\r\n","﻿/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipLocations', [        \r\n        'pipLocation',\r\n        'pipLocationMap',\r\n        'pipLocationIp',\r\n        'pipLocationEditDialog',\r\n        'pipLocationEdit',\r\n        'pipLocations.Translate'\r\n    ]);\r\n    \r\n})();\r\n\r\n\r\n","(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location/location.html',\n    '<div class=\"pip-location-name location-collapse\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"$ctrl.pipLocationName && !$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"><md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon><span class=\"pip-location-text\">{{$ctrl.pipLocationName()}}</span></div><div class=\"pip-location-container\" ng-if=\"$ctrl.pipLocationPos && !$ctrl.pipCollapse\"></div><md-button class=\"pip-location-name\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"><div class=\"layout-align-start-center layout-row w-stretch\"><md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon><span class=\"pip-location-text flex\">{{$ctrl.pipLocationName()}}</span><md-icon md-svg-icon=\"icons:triangle-down\" class=\"flex-fixed\" ng-if=\"!$ctrl.showMap\"></md-icon><md-icon md-svg-icon=\"icons:triangle-up\" class=\"flex-fixed\" ng-if=\"$ctrl.showMap\"></md-icon></div></md-button><div class=\"pip-location-container\" ng-if=\"$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_dialog/locationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-location-edit-dialog layout-column\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-header layout-column layout-align-start-start\"><md-progress-linear ng-show=\"$ctrl.transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h3 class=\"flex\">{{ \\'LOCATION_SET_LOCATION\\' | translate }}</h3></div><div class=\"pip-footer\"><div class=\"layout-row layout-align-start-center\"><md-button class=\"md-accent\" ng-click=\"$ctrl.onAddPin()\" ng-show=\"$ctrl.locationPos == null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_ADD_PIN\\' }}\">{{ ::\\'LOCATION_ADD_PIN\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onRemovePin()\" ng-show=\"$ctrl.locationPos != null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_REMOVE_PIN\\' }}\">{{ ::\\'LOCATION_REMOVE_PIN\\' | translate }}</md-button></div><div class=\"flex\"></div><div class=\"layout-row layout-align-end-center\"><md-button ng-click=\"$ctrl.onCancel()\" aria-label=\"{{ ::\\'CANCEL\\' }}\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'APPLY\\' }}\">{{ ::\\'APPLY\\' | translate }}</md-button></div></div><div class=\"pip-body\"><div class=\"pip-location-container\"></div><md-button class=\"md-icon-button md-fab pip-zoom-in\" ng-click=\"$ctrl.onZoomIn()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_IN\\' }}\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-zoom-out\" ng-click=\"$ctrl.onZoomOut()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_OUT\\' }}\"><md-icon md-svg-icon=\"icons:minus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-set-location\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"{{ ::\\'LOCATION_SET_LOCATION\\' }}\" ng-show=\"supportSet\" ng-disabled=\"transaction.busy()\"><md-icon md-svg-icon=\"icons:target\"></md-icon></md-button></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-locations-html.min.js.map\n"]}