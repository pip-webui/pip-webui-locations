{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/TranslateFilter.ts","src/index.ts","src/location/Location.ts","src/location_dialog/LocationDialog.ts","src/location_dialog/LocationDialogParams.ts","src/location_dialog/index.ts","src/location_edit/LocationEdit.ts","src/location_ip/LocationIp.ts","src/location_map/LocationMap.ts","temp/pip-webui-locations-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","locations","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","translateFilter","$injector","has","get","key","pipTranslate","translate","$inject","filter","2","3","LocationBindings","pipLocationName","pipLocationPos","pipShowLocationIcon","pipCollapse","pipRebind","pipDisabled","pipLocationResize","LocationController","LocationBindingsChanges","$element","$timeout","$scope","showMap","addClass","prototype","$postLink","_this","name","find","mapContainer","hide","click","event","stopPropagation","generateMap","$$phase","$apply","redrawMap","clearMap","$onChanges","changes","currentValue","mapControl","remove","location","coordinates","google","maps","LatLng","$","show","appendTo","mapOptions","center","zoom","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","disableDoubleClickZoom","scrollwheel","draggable","Map","Marker","position","map","LocationComponent","bindings","templateUrl","controller","defineProperty","value","LocationEditDialogController_1","$rootScope","$mdDialog","locationPos","locationName","_map","_marker","onSetLocation","geolocation","getCurrentPosition","coords","latitude","longitude","createMarker","setCenter","setZoom","changeLocation","maximumAge","enableHighAccuracy","timeout","theme","type","supportSet","navigator","trigger","setMap","animation","Animation","DROP","thisMarker_1","addListener","getPosition","tid","lat","lng","Geocoder","geocode","latLng","results","status","formatted_address","onAddPin","getCenter","onRemovePin","onZoomIn","getZoom","onZoomOut","onCancel","cancel","onApply","LocationDialogService","params","successCallback","cancelCallback","clickOutsideToClose","then","result","setTranslations","LOCATION_ADD_LOCATION","LOCATION_SET_LOCATION","LOCATION_ADD_PIN","LOCATION_REMOVE_PIN","angular","6","LocationDialogParams","7","8","LocationEditBindings","pipLocationHolder","ngDisabled","pipChanged","LocationEditBindingsChanges","LocationEditController","pipLocationEditDialog","defineCoordinatesDebounced","_","debounce","defineCoordinates","attr","toString","empty","children","$watch","newValue","oldValue","GeocoderStatus","OK","geometry","location_1","longtitude","focus","onMapClick","$event","onMapKeyPress","keyCode","LocationEdit","component","LocationIpBindings","pipIpaddress","pipExtraInfo","LocationIpBindingsChanges","LocationIpController","$http","ipAddress","response","extraInfo","city","regionCode","region","regionName","zipCode","countryCode","country","countryName","error","LocationIp","LocationMapBindings","pipIconPath","pipInteractive","pipStretch","LocationMapBindingsChanges","LocationMapController","removeClass","checkLocation","loc","determineCoordinates","point","fill","stroke","points","interactive","isArray","push","each","bounds","LatLngBounds","icon","path","fillColor","fillOpacity","scale","strokeColor","strokeWeight","extend","fitBounds","LocationMap","11","run","$templateCache","put"],"mappings":"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","file":"pip-webui-locations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\r\n    function translateFilter($injector) {\r\n        let pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipLocations.Translate', [])\r\n        .filter('translate', translateFilter);\r\n}","﻿angular.module('pipLocations', [\r\n    'pipLocation',\r\n    'pipLocationMap',\r\n    'pipLocationIp',\r\n    'pipLocationEditDialog',\r\n    'pipLocationEdit',\r\n    'pipLocations.Translate'\r\n]);","{\r\n    interface ILocationBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationName: any;\r\n        pipLocationPos: any;\r\n        pipShowLocationIcon: any;\r\n        pipCollapse: any;\r\n        pipRebind: any;\r\n        pipDisabled: any;\r\n        pipLocationResize: any;\r\n    }\r\n\r\n    const LocationBindings: ILocationBindings = {\r\n        pipLocationName: '<',\r\n        pipLocationPos: '<',\r\n        pipShowLocationIcon: '<',\r\n        pipCollapse: '<',\r\n        pipRebind: '<',\r\n        pipDisabled: '<',\r\n        pipLocationResize: '&'\r\n    }\r\n\r\n    class LocationBindingsChanges implements ng.IOnChangesObject, ILocationBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationName: ng.IChangesObject < string > ;\r\n        pipLocationPos: ng.IChangesObject < any > ;\r\n        pipShowLocationIcon: ng.IChangesObject < boolean > ;\r\n        pipCollapse: ng.IChangesObject < boolean > ;\r\n        pipRebind: ng.IChangesObject < boolean > ;\r\n        pipDisabled: ng.IChangesObject < boolean > ;\r\n\r\n        pipLocationResize: any;\r\n    }\r\n\r\n    class LocationController implements ng.IController, ILocationBindings {\r\n        public pipLocationName: string;\r\n        public pipLocationPos: any;\r\n        public pipShowLocationIcon: boolean;\r\n        public pipCollapse: boolean;\r\n        public pipRebind: boolean;\r\n        public pipDisabled: boolean;\r\n        public showMap: boolean = true;\r\n        public pipLocationResize: Function;\r\n\r\n        private name: JQuery;\r\n        private mapContainer: JQuery;\r\n        private mapControl: JQuery;\r\n\r\n        constructor(\r\n            private $element: JQuery,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $scope: ng.IScope\r\n        ) {\r\n            \"ngInject\";\r\n            // Add class\r\n            $element.addClass('pip-location');\r\n        }\r\n\r\n        public $postLink() {\r\n            this.$timeout(() => {\r\n                this.name = this.$element.find('.pip-location-name');\r\n                this.mapContainer = this.$element.find('.pip-location-container');\r\n\r\n                if (this.pipCollapse === true) {\r\n                    this.mapContainer.hide();\r\n                    this.showMap = false;\r\n\r\n                    // Process user click\r\n                    this.name.click((event) => {\r\n                        event.stopPropagation();\r\n                        if (this.pipDisabled) return;\r\n                        this.showMap = !this.showMap;\r\n                        this.mapContainer[this.showMap ? 'show' : 'hide']();\r\n                        if (this.showMap) this.generateMap();\r\n                        if (!this.$scope.$$phase) this.$scope.$apply();\r\n                    });\r\n                }\r\n\r\n                this.redrawMap();\r\n            });\r\n        }\r\n\r\n        private redrawMap() {\r\n            if (!this.mapContainer) return;\r\n\r\n            // Visualize map\r\n            if (this.pipLocationPos && this.showMap === true) {\r\n                this.generateMap();\r\n            } else {\r\n                this.clearMap();\r\n            }\r\n        }\r\n\r\n        public $onChanges(changes: LocationBindingsChanges) {\r\n            this.pipRebind = changes.pipRebind \r\n                ? changes.pipRebind.currentValue || false : false;\r\n            this.pipShowLocationIcon = changes.pipShowLocationIcon \r\n                ? changes.pipShowLocationIcon.currentValue || false : false;\r\n            this.pipCollapse = changes.pipCollapse \r\n                ? changes.pipCollapse.currentValue || false : false;\r\n            this.pipDisabled = changes.pipDisabled \r\n                ? changes.pipDisabled.currentValue || false : false;\r\n\r\n            if (this.pipRebind) {\r\n                this.pipLocationName = changes.pipLocationName \r\n                    ? changes.pipLocationName.currentValue : null;\r\n                this.pipLocationPos = changes.pipLocationPos \r\n                    ? changes.pipLocationPos.currentValue : null;\r\n                this.redrawMap();\r\n            }\r\n        }\r\n\r\n        private clearMap() {\r\n            // Remove map control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = null;\r\n            this.mapContainer.hide();\r\n        }\r\n\r\n        private generateMap() {\r\n            const location = this.pipLocationPos;\r\n\r\n            // Safeguard for bad coordinates\r\n            if (this.showMap === false \r\n                || location == null \r\n                || location.coordinates == null \r\n                || location.coordinates.length < 0) {\r\n                this.clearMap();\r\n                return;\r\n            }\r\n\r\n            // Determine map coordinates\r\n            const coordinates = new google.maps.LatLng(\r\n                location.coordinates[0],\r\n                location.coordinates[1]\r\n            );\r\n\r\n            // Clean up the control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = $('<div></div>');\r\n            this.mapContainer.show();\r\n            this.mapControl.appendTo(this.mapContainer);\r\n\r\n            // Create the map with point marker\r\n            const\r\n                mapOptions = {\r\n                    center: coordinates,\r\n                    zoom: 12,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true,\r\n                    disableDoubleClickZoom: true,\r\n                    scrollwheel: false,\r\n                    draggable: false\r\n                },\r\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\r\n\r\n            new google.maps.Marker({\r\n                position: coordinates,\r\n                map: map\r\n            });\r\n        };\r\n    }\r\n\r\n    const LocationComponent: ng.IComponentOptions = {\r\n        bindings: LocationBindings,\r\n        templateUrl: 'location/Location.html',\r\n        controller: LocationController\r\n    }\r\n\r\n    angular\r\n        .module(\"pipLocation\", [])\r\n        .component('pipLocation', LocationComponent);\r\n}","import { ILocationDialogService } from './ILocationDialogService';\r\nimport { LocationDialogParams } from './LocationDialogParams';\r\n\r\n{\r\n    class LocationEditDialogController {\r\n        private _map = null;\r\n        private _marker = null;\r\n\r\n        public theme: string;\r\n        public locationPos;\r\n        public locationName;\r\n        public supportSet: boolean;\r\n\r\n        constructor(\r\n            private $scope: ng.IScope,\r\n            $rootScope: ng.IRootScopeService,\r\n            $timeout: angular.ITimeoutService,\r\n            private $mdDialog: angular.material.IDialogService,\r\n            locationPos: any,\r\n            locationName: string\r\n        ) {\r\n            this.theme = $rootScope['$theme'];\r\n            this.locationPos = locationPos && locationPos.type == 'Point' &&\r\n                locationPos.coordinates && locationPos.coordinates.length == 2 ?\r\n                locationPos : null;\r\n            this.locationName = locationName;\r\n            this.supportSet = navigator.geolocation != null;\r\n\r\n            // Wait until dialog is initialized\r\n            $timeout(() => {\r\n                let mapContainer = $('.pip-location-edit-dialog .pip-location-container');\r\n                // Calculate coordinate of the center\r\n                let coordinates = this.locationPos ?\r\n                    new google.maps.LatLng(\r\n                        this.locationPos.coordinates[0],\r\n                        this.locationPos.coordinates[1]\r\n                    ) : null;\r\n\r\n                // Create the map with point marker\r\n                const mapOptions = {\r\n                    center: new google.maps.LatLng(0, 0),\r\n                    zoom: 1,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true\r\n                }\r\n                if (coordinates != null) {\r\n                    mapOptions.center = coordinates;\r\n                    mapOptions.zoom = 12;\r\n                }\r\n\r\n                this._map = new google.maps.Map(mapContainer[0], mapOptions);\r\n                this._marker = this.createMarker(coordinates);\r\n\r\n                // Fix resizing issue\r\n                $timeout(() => {\r\n                    google.maps.event.trigger(this._map, 'resize');\r\n                }, 1000);\r\n            }, 0);\r\n\r\n            $scope.$on('pipLayoutResized', () => {\r\n                if (this._map == null) return;\r\n                google.maps.event.trigger(this._map, 'resize');\r\n            });\r\n\r\n        }\r\n\r\n        private createMarker(coordinates) {\r\n            if (this._marker) this._marker.setMap(null);\r\n            if (coordinates) {\r\n                this._marker = new google.maps.Marker({\r\n                    position: coordinates,\r\n                    map: this._map,\r\n                    draggable: true,\r\n                    animation: google.maps.Animation.DROP\r\n                });\r\n\r\n                let thisMarker = this._marker;\r\n                google.maps.event.addListener(thisMarker, 'dragend', () => {\r\n                    let coordinates = thisMarker.getPosition();\r\n                    this.changeLocation(coordinates, null);\r\n                });\r\n            } else {\r\n                this._marker = null;\r\n            }\r\n\r\n            return this._marker;\r\n        }\r\n\r\n        private changeLocation(coordinates, tid) {\r\n            this.locationPos = {\r\n                type: 'Point',\r\n                coordinates: [coordinates.lat(), coordinates.lng()]\r\n            };\r\n            this.locationName = null;\r\n            // Read address\r\n            const geocoder = new google.maps.Geocoder();\r\n            geocoder.geocode({\r\n                latLng: coordinates\r\n            }, (results, status) => {\r\n                // Process positive response\r\n                if (results && results.length > 0) {\r\n                    this.locationName = results[0].formatted_address;\r\n                }\r\n\r\n                this.$scope.$apply();\r\n            })\r\n        }\r\n        // Describe user actions\r\n        public onAddPin() {\r\n            if (this._map === null) return;\r\n\r\n            const coordinates = this._map.getCenter();\r\n            this._marker = this.createMarker(coordinates);\r\n            this.changeLocation(coordinates, null);\r\n        }\r\n\r\n        public onRemovePin() {\r\n            if (this._map === null) return;\r\n            this._marker = this.createMarker(null);\r\n            this.locationPos = null;\r\n            this.locationName = null;\r\n        }\r\n\r\n        public onZoomIn() {\r\n            if (this._map === null) return;\r\n            const zoom = this._map.getZoom();\r\n            this._map.setZoom(zoom + 1);\r\n        }\r\n\r\n        public onZoomOut() {\r\n            if (this._map === null) return;\r\n            const zoom = this._map.getZoom();\r\n            this._map.setZoom(zoom > 1 ? zoom - 1 : zoom);\r\n        }\r\n\r\n        public onSetLocation = function () {\r\n            if (this._map === null) return;\r\n\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const coordinates = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\r\n                    this._marker = this.createMarker(coordinates);\r\n                    this._map.setCenter(coordinates);\r\n                    this._map.setZoom(12);\r\n                    this.changeLocation(coordinates, null);\r\n                },\r\n                () => {\r\n                    this.$scope.$apply();\r\n                }, {\r\n                    maximumAge: 0,\r\n                    enableHighAccuracy: true,\r\n                    timeout: 5000\r\n                });\r\n        }\r\n\r\n        public onCancel(): void {\r\n            this.$mdDialog.cancel();\r\n        }\r\n\r\n        public onApply(): void {\r\n            this.$mdDialog.hide({\r\n                location: this.locationPos,\r\n                locationPos: this.locationPos,\r\n                locationName: this.locationName\r\n            })\r\n        }\r\n    }\r\n    \r\n    class LocationDialogService implements ILocationDialogService {\r\n        constructor(\r\n            private $mdDialog: angular.material.IDialogService\r\n        ) {}\r\n\r\n        public show(params: LocationDialogParams, successCallback?, cancelCallback?) {\r\n            this.$mdDialog.show({\r\n                    controller: LocationEditDialogController,\r\n                    controllerAs: '$ctrl',\r\n                    templateUrl: 'location_dialog/LocationDialog.html',\r\n                    locals: {\r\n                        locationName: params.locationName,\r\n                        locationPos: params.locationPos\r\n                    },\r\n                    clickOutsideToClose: true\r\n                })\r\n                .then((result) => {\r\n                    if (successCallback) {\r\n                        successCallback(result);\r\n                    }\r\n                }, () => {\r\n                    if (cancelCallback) {\r\n                        cancelCallback();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    const LocationDialogRun = function($injector: ng.auto.IInjectorService) {\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            ( < any > pipTranslate).setTranslations('en', {\r\n                'LOCATION_ADD_LOCATION': 'Add location',\r\n                'LOCATION_SET_LOCATION': 'Set location',\r\n                'LOCATION_ADD_PIN': 'Add pin',\r\n                'LOCATION_REMOVE_PIN': 'Remove pin'\r\n            });\r\n            ( < any > pipTranslate).setTranslations('ru', {\r\n                'LOCATION_ADD_LOCATION': 'Добавить местоположение',\r\n                'LOCATION_SET_LOCATION': 'Определить положение',\r\n                'LOCATION_ADD_PIN': 'Добавить точку',\r\n                'LOCATION_REMOVE_PIN': 'Убрать точку'\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipLocationEditDialog')\r\n        .run(LocationDialogRun)\r\n        .service('pipLocationEditDialog', LocationDialogService);\r\n}","export class LocationDialogParams {\r\n    // Locations position\r\n    locationPos: any;\r\n    // Location name\r\n    locationName: string;\r\n}","angular.module('pipLocationEditDialog', ['ngMaterial', 'pipLocations.Templates']);\r\n\r\nimport './LocationDialog'","import { ILocationDialogService } from '../location_dialog/ILocationDialogService';\r\n\r\n{\r\n    interface ILocationEditBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationName: any;\r\n        pipLocationPos: any;\r\n        pipLocationHolder: any;\r\n        ngDisabled: any;\r\n        pipChanged: any;\r\n    }\r\n\r\n    const LocationEditBindings: ILocationEditBindings = {\r\n        pipLocationName: '=',\r\n        pipLocationPos: '=',\r\n        pipLocationHolder: '=',\r\n        ngDisabled: '<',\r\n        pipChanged: '&'\r\n    }\r\n\r\n    class LocationEditBindingsChanges implements ng.IOnChangesObject, ILocationEditBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationName: any;\r\n        pipLocationPos: any;\r\n        pipLocationHolder: any;\r\n        pipChanged: any;\r\n\r\n        ngDisabled: ng.IChangesObject<boolean>;\r\n    }\r\n\r\n    class LocationEditController implements ng.IController, ILocationEditBindings {\r\n        public pipLocationName: string;\r\n        public pipLocationPos: any;\r\n        public pipLocationHolder: boolean;\r\n        public ngDisabled: boolean;\r\n        public pipChanged: Function;\r\n\r\n        private empty: JQuery;\r\n        private mapContainer: JQuery;\r\n        private mapControl: any;\r\n        private defineCoordinatesDebounced: Function;\r\n\r\n        constructor(\r\n            private $element: JQuery,\r\n            private $scope: ng.IScope,\r\n            private pipLocationEditDialog: ILocationDialogService\r\n        ) {\r\n            this.defineCoordinatesDebounced = _.debounce(() => {\r\n                this.defineCoordinates\r\n            }, 2000);\r\n        }\r\n\r\n        public $postLink() {\r\n            this.$element.find('md-input-container').attr('md-no-float', (!!this.pipLocationHolder).toString());\r\n            // Set containers\r\n            this.empty = this.$element.children('.pip-location-empty');\r\n            this.mapContainer = this.$element.children('.pip-location-container');\r\n            this.mapControl = null;\r\n\r\n            // Add watchers\r\n            this.$scope.$watch('$ctrl.pipLocationName',\r\n                (newValue, oldValue) => {\r\n                    if (newValue !== oldValue) {\r\n                        this.defineCoordinatesDebounced();\r\n                    }\r\n                }\r\n            );\r\n            this.$scope.$watch('$ctrl.pipLocationPos',\r\n                () => {\r\n                    this.generateMap();\r\n                }\r\n            );\r\n\r\n            // Add class\r\n            this.$element.addClass('pip-location-edit');\r\n\r\n            // Visualize map\r\n            if (this.pipLocationPos) {\r\n                this.generateMap();\r\n            } else {\r\n                this.clearMap();\r\n            }\r\n        }\r\n\r\n        public $onChanges(changes: LocationEditBindingsChanges) {\r\n            this.ngDisabled = changes.ngDisabled ? changes.ngDisabled.currentValue : false; \r\n        }\r\n\r\n        private clearMap() {\r\n            // Remove map control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = null;\r\n\r\n            // Toggle control visibility\r\n            this.mapContainer.hide();\r\n            this.empty.show();\r\n        }\r\n\r\n        private generateMap() {\r\n            // Safeguard for bad coordinates\r\n            const location = this.pipLocationPos;\r\n            if (location == null || location.coordinates == null || location.coordinates.length < 0) {\r\n                this.clearMap();\r\n                return;\r\n            }\r\n\r\n            // Determine map coordinates\r\n            const coordinates = new google.maps.LatLng(\r\n                location.coordinates[0],\r\n                location.coordinates[1]\r\n            );\r\n\r\n            // Clean up the control\r\n            if (this.mapControl) this.mapControl.remove();\r\n\r\n            // Toggle control visibility\r\n            this.mapContainer.show();\r\n            this.empty.hide();\r\n\r\n            // Add a new map\r\n            this.mapControl = $('<div></div>');\r\n            this.mapControl.appendTo(this.mapContainer);\r\n\r\n            // Create the map with point marker\r\n            const mapOptions = {\r\n                    center: coordinates,\r\n                    zoom: 12,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true,\r\n                    disableDoubleClickZoom: true,\r\n                    scrollwheel: false,\r\n                    draggable: false\r\n                },\r\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\r\n                marker = new google.maps.Marker({\r\n                    position: coordinates,\r\n                    map: map\r\n                });\r\n        }\r\n\r\n        private defineCoordinates() {\r\n            const locationName = this.pipLocationName;\r\n\r\n            if (locationName == '') {\r\n                this.pipLocationPos = null;\r\n                this.clearMap();\r\n                this.$scope.$apply();\r\n                return;\r\n            }\r\n\r\n            const geocoder = new google.maps.Geocoder();\r\n            geocoder.geocode({\r\n                address: locationName\r\n            }, function (results, status) {\r\n                this.$scope.$apply(function () {\r\n                    // Process response\r\n                    if (status === google.maps.GeocoderStatus.OK) {\r\n                        // Check for empty results\r\n                        if (results === null || results.length === 0) {\r\n                            this.pipLocationPos = null;\r\n                            this.clearMap();\r\n                            return;\r\n                        }\r\n\r\n                        const geometry = results[0].geometry || {},\r\n                            location = geometry.location || {};\r\n\r\n                        // Check for empty results again\r\n                        if (location.lat === null || location.lng === null) {\r\n                            this.pipLocationPos = null;\r\n                            this.clearMap();\r\n                            return;\r\n                        }\r\n\r\n                        this.pipLocationPos = {\r\n                            type: 'Point',\r\n                            coordinates: {\r\n                                latitude: location.lat(),\r\n                                longtitude: location.lng()\r\n                            }\r\n                        };\r\n                        this.generateMap();\r\n                    }\r\n                    else {\r\n                        this.pipLocationPos = null;\r\n                        this.clearMap();\r\n                    }\r\n                });\r\n            });\r\n        };\r\n\r\n        public onSetLocation() {\r\n            if (this.ngDisabled) return;\r\n\r\n            this.pipLocationEditDialog.show({\r\n                    locationName: this.pipLocationName,\r\n                    locationPos: this.pipLocationPos\r\n                },\r\n                (result) => {\r\n                    const\r\n                        location = result.location,\r\n                        locationName = result.locationName;\r\n\r\n                    // Do not change anything if location is about the same\r\n                    if (this.pipLocationPos && this.pipLocationPos.type == 'Point' &&\r\n                        this.pipLocationPos.coordinates.length == 2 &&\r\n                        location && location.coordinates.length == 2 &&\r\n                        (this.pipLocationPos.coordinates[0] - location.coordinates[0]) < 0.0001 &&\r\n                        (this.pipLocationPos.coordinates[1] - location.coordinates[1]) < 0.0001 &&\r\n                        (locationName === this.pipLocationName)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.pipLocationPos = location;\r\n                    this.pipLocationName = locationName;\r\n\r\n                    if (locationName === null && location !== null) {\r\n                        this.pipLocationName =\r\n                            '(' + result.location.coordinates[0] +\r\n                            ',' + result.location.coordinates[1] + ')';\r\n                    }\r\n                    this.pipChanged();\r\n                    this.mapContainer[0].focus();\r\n                }\r\n            );\r\n        };\r\n\r\n        public onMapClick($event) {\r\n            if (this.ngDisabled) return;\r\n\r\n            this.mapContainer[0].focus();\r\n            this.onSetLocation();\r\n            //$event.stopPropagation();\r\n        };\r\n\r\n        public onMapKeyPress($event) {\r\n            if (this.ngDisabled) return;\r\n\r\n            if ($event.keyCode == 13 || $event.keyCode == 32) {\r\n                this.onSetLocation();\r\n                //$event.stopPropagation();\r\n            }\r\n        };\r\n    }\r\n\r\n    const LocationEdit: ng.IComponentOptions = {\r\n        bindings: LocationEditBindings,\r\n        templateUrl: 'location_edit/LocationEdit.html',\r\n        controller: LocationEditController\r\n    }\r\n\r\n    angular\r\n        .module(\"pipLocationEdit\", ['pipLocationEditDialog'])\r\n        .component('pipLocationEdit', LocationEdit);\r\n\r\n}","declare let google: any;\r\n\r\n{\r\n    interface ILocationIpBindings {\r\n        [key: string]: any;\r\n\r\n        pipIpaddress: any;\r\n        pipExtraInfo: any;\r\n        pipRebind: any;\r\n    }\r\n\r\n    const LocationIpBindings: ILocationIpBindings = {\r\n        pipIpaddress: '<',\r\n        pipExtraInfo: '&',\r\n        pipRebind: '<'\r\n    }\r\n\r\n    interface IIpResponseInfo {\r\n        city: string;\r\n        regionCode: string | number;\r\n        regionName: string;\r\n        zipCode: string | number;\r\n        countryCode: string | number;\r\n        countryName: string;\r\n        latitude: string | number;\r\n        longitude: string | number;\r\n    }\r\n\r\n    class LocationIpBindingsChanges implements ng.IOnChangesObject, ILocationIpBindings {\r\n        [key: string]: any;\r\n\r\n        pipExtraInfo: any;\r\n\r\n        pipIpaddress: ng.IChangesObject < string > ;\r\n        pipRebind: ng.IChangesObject < boolean >\r\n    }\r\n\r\n    class LocationIpController implements ng.IController, ILocationIpBindings {\r\n        private mapContainer: JQuery;\r\n        private mapControl: any;\r\n\r\n        public pipExtraInfo: any;\r\n        public pipIpaddress: string;\r\n        public pipRebind: boolean;\r\n\r\n        constructor(\r\n            $element: JQuery,\r\n            private $http: ng.IHttpService\r\n        ) {\r\n            this.mapContainer = $element.children('.pip-location-container');\r\n            $element.addClass('pip-location-ip');\r\n            this.defineCoordinates();\r\n        }\r\n\r\n        public $onChanges(changes: LocationIpBindingsChanges) {\r\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\r\n\r\n            if (this.pipRebind === true) {\r\n                this.pipIpaddress = changes.pipIpaddress ? changes.pipIpaddress.currentValue : this.pipIpaddress;\r\n                this.defineCoordinates();\r\n            }\r\n        }\r\n\r\n        private clearMap() {\r\n            // Remove map control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = null;\r\n        }\r\n\r\n        private generateMap(latitude, longitude) {\r\n            // Safeguard for bad coordinates\r\n            if (latitude == null || longitude == null) {\r\n                this.clearMap();\r\n                return;\r\n            }\r\n\r\n            // Determine map coordinates\r\n            var coordinates = new google.maps.LatLng(\r\n                latitude,\r\n                longitude\r\n            );\r\n\r\n            // Clean up the control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = $('<div></div>');\r\n            this.mapControl.appendTo(this.mapContainer);\r\n\r\n            // Create the map with point marker\r\n            const\r\n                mapOptions = {\r\n                    center: coordinates,\r\n                    zoom: 12,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true,\r\n                    disableDoubleClickZoom: true,\r\n                    scrollwheel: false,\r\n                    draggable: false\r\n                },\r\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\r\n\r\n            new google.maps.Marker({\r\n                position: coordinates,\r\n                map: map\r\n            });\r\n        }\r\n\r\n        private defineCoordinates() {\r\n            const ipAddress = this.pipIpaddress;\r\n\r\n            if (ipAddress == '') {\r\n                this.clearMap();\r\n                return;\r\n            }\r\n\r\n            this.$http.get('https://freegeoip.net/json/' + ipAddress)\r\n                .success((response: IIpResponseInfo) => {\r\n                    if (response != null &&\r\n                        response.latitude != null &&\r\n                        response.longitude != null) {\r\n\r\n                        this.generateMap(response.latitude, response.longitude);\r\n\r\n                        if (this.pipExtraInfo) {\r\n                            const extraInfo = {\r\n                                city: response.city,\r\n                                regionCode: response.regionCode,\r\n                                region: response.regionName,\r\n                                zipCode: response.zipCode,\r\n                                countryCode: response.countryCode,\r\n                                country: response.countryName\r\n                            };\r\n                            this.pipExtraInfo({\r\n                                extraInfo: extraInfo\r\n                            });\r\n                        }\r\n                    } else {\r\n                        this.clearMap();\r\n                    }\r\n                })\r\n                .error((response) => {\r\n                    this.clearMap();\r\n                });\r\n        }\r\n    }\r\n\r\n    const LocationIp: ng.IComponentOptions = {\r\n        bindings: LocationIpBindings,\r\n        template: '<div class=\"pip-location-container\"></div>',\r\n        controller: LocationIpController\r\n    }\r\n\r\n    angular\r\n        .module(\"pipLocationIp\", [])\r\n        .component('pipLocationIp', LocationIp);\r\n}","{\r\n\r\n    interface ILocationMapBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationPos: any;\r\n        pipIconPath: any;\r\n        pipInteractive: any;\r\n        pipStretch: any;\r\n        pipRebind: any;\r\n    }\r\n\r\n    const LocationMapBindings: ILocationMapBindings = {\r\n        pipLocationPos: '<',\r\n        pipIconPath: '<',\r\n        pipInteractive: '<',\r\n        pipStretch: '<',\r\n        pipRebind: '<'\r\n    }\r\n\r\n    class LocationMapBindingsChanges implements ng.IOnChangesObject, ILocationMapBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationPos: ng.IChangesObject<any>;\r\n        pipIconPath: ng.IChangesObject<string>;\r\n        pipInteractive: ng.IChangesObject<boolean>;\r\n        pipStretch: ng.IChangesObject<boolean>;\r\n        pipRebind: ng.IChangesObject<boolean>;\r\n    }\r\n\r\n    class LocationMapController implements ng.IController, ILocationMapBindings {\r\n        public pipLocationPos: any;\r\n        public pipIconPath: string;\r\n        public pipInteractive: boolean;\r\n        public pipStretch: boolean;\r\n        public pipRebind: boolean;\r\n\r\n        private mapContainer: JQuery;\r\n        private mapControl: any = null;\r\n\r\n        constructor(\r\n            private $element: JQuery\r\n        ) {\r\n            this.mapContainer = $element.children('.pip-location-container');\r\n            $element.addClass('pip-location-map');\r\n        }\r\n\r\n        public $onChanges(changes: LocationMapBindingsChanges) {\r\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\r\n            this.pipInteractive = changes.pipInteractive ? changes.pipInteractive.currentValue || false : false;\r\n            this.pipStretch = changes.pipStretch ? changes.pipStretch.currentValue || false : false;\r\n\r\n            if (this.pipStretch === true)  {\r\n                this.mapContainer.addClass('stretch');\r\n            } else {\r\n                this.mapContainer.removeClass('stretch');\r\n            }\r\n\r\n            if (this.pipRebind === true) {\r\n                this.pipLocationPos = changes.pipLocationPos ? changes.pipLocationPos.currentValue : this.pipLocationPos;\r\n                this.pipIconPath = changes.pipIconPath ? changes.pipIconPath.currentValue : this.pipIconPath;\r\n\r\n                this.generateMap();\r\n            }\r\n        }\r\n\r\n        private clearMap() {\r\n            // Remove map control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = null;\r\n        }\r\n\r\n        private checkLocation(loc) {\r\n            return !(loc == null || loc.coordinates == null || loc.coordinates.length < 0);\r\n        }\r\n\r\n        private determineCoordinates(loc) {\r\n            const point = new google.maps.LatLng(\r\n                loc.coordinates[0],\r\n                loc.coordinates[1]\r\n            );\r\n\r\n            point.fill = loc.fill;\r\n            point.stroke = loc.stroke;\r\n\r\n            return point;\r\n        }\r\n\r\n        private generateMap() {\r\n            const locations = this.pipLocationPos,\r\n                points = [],\r\n                interactive = this.pipInteractive || false;\r\n\r\n            // Safeguard for bad coordinates\r\n            if (this.checkLocation(locations) && !_.isArray(locations)) {\r\n                points.push(this.determineCoordinates(locations));\r\n            } else {\r\n                if (locations && _.isArray(locations) && locations.length > 0) {\r\n                    _.each(locations, (loc) => {\r\n                        if (this.checkLocation(loc)) {\r\n                            points.push(this.determineCoordinates(loc));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (points.length === 0) {\r\n                this.clearMap();\r\n                return;\r\n            }\r\n\r\n            // Clean up the control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = $('<div></div>');\r\n            this.mapControl.appendTo(this.mapContainer);\r\n\r\n            // Create the map\r\n            const mapOptions = {\r\n                    center: points[0],\r\n                    zoom: 12,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true,\r\n                    disableDoubleClickZoom: true,\r\n                    scrollwheel: interactive,\r\n                    draggable: interactive\r\n                },\r\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\r\n                bounds = new google.maps.LatLngBounds();\r\n\r\n            // Create markers\r\n            _.each(points, (point) => {\r\n                const icon = {\r\n                    path: this.pipIconPath,\r\n                    fillColor: point.fill || '#EF5350',\r\n                    fillOpacity: 1,\r\n                    scale: 1,\r\n                    strokeColor: point.stroke || 'white',\r\n                    strokeWeight: 5\r\n                };\r\n\r\n                new google.maps.Marker({\r\n                    position: point,\r\n                    map: map,\r\n                    icon: this.pipIconPath ? icon : null\r\n                });\r\n                bounds.extend(point);\r\n            });\r\n\r\n            // Auto-config of zoom and center\r\n            if (points.length > 1) map.fitBounds(bounds);\r\n        }\r\n    }\r\n\r\n    const LocationMap: ng.IComponentOptions = {\r\n        bindings: LocationMapBindings,\r\n        template: '<div class=\"pip-location-container\"></div>',\r\n        controller: LocationMapController\r\n    }\r\n\r\n    angular\r\n        .module(\"pipLocationMap\", [])\r\n        .component('pipLocationMap', LocationMap);\r\n}","(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location/Location.html',\n    '<div class=\"pip-location-name location-collapse\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"!$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"><md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon><span class=\"pip-location-text\">{{$ctrl.pipLocationName}}</span></div><md-button class=\"pip-location-name\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"><div class=\"layout-align-start-center layout-row w-stretch\"><md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon><span class=\"pip-location-text flex\">{{$ctrl.pipLocationName}}</span><md-icon md-svg-icon=\"icons:triangle-down\" class=\"flex-fixed\" ng-show=\"!$ctrl.showMap\"></md-icon><md-icon md-svg-icon=\"icons:triangle-up\" class=\"flex-fixed\" ng-show=\"$ctrl.showMap\"></md-icon></div></md-button><div class=\"pip-location-container\"></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_dialog/LocationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-location-edit-dialog layout-column\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-header layout-column layout-align-start-start\"><md-progress-linear ng-show=\"$ctrl.transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h3 class=\"flex\">{{ \\'LOCATION_SET_LOCATION\\' | translate }}</h3></div><div class=\"pip-footer\"><div class=\"layout-row layout-align-start-center\"><md-button class=\"md-accent\" ng-click=\"$ctrl.onAddPin()\" ng-show=\"$ctrl.locationPos == null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_ADD_PIN\\' }}\">{{ ::\\'LOCATION_ADD_PIN\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onRemovePin()\" ng-show=\"$ctrl.locationPos != null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_REMOVE_PIN\\' }}\">{{ ::\\'LOCATION_REMOVE_PIN\\' | translate }}</md-button></div><div class=\"flex\"></div><div class=\"layout-row layout-align-end-center\"><md-button ng-click=\"$ctrl.onCancel()\" aria-label=\"{{ ::\\'CANCEL\\' }}\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'APPLY\\' }}\">{{ ::\\'APPLY\\' | translate }}</md-button></div></div><div class=\"pip-body\"><div class=\"pip-location-container\"></div><md-button class=\"md-icon-button md-fab pip-zoom-in\" ng-click=\"$ctrl.onZoomIn()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_IN\\' }}\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-zoom-out\" ng-click=\"$ctrl.onZoomOut()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_OUT\\' }}\"><md-icon md-svg-icon=\"icons:minus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-set-location\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"{{ ::\\'LOCATION_SET_LOCATION\\' }}\" ng-show=\"supportSet\" ng-disabled=\"transaction.busy()\"><md-icon md-svg-icon=\"icons:target\"></md-icon></md-button></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_edit/LocationEdit.html',\n    '<md-input-container class=\"md-block\"><label>{{ \\'LOCATION\\' | translate }}</label> <input ng-model=\"$ctrl.pipLocationName\" ng-disabled=\"$ctrl.ngDisabled\"></md-input-container><div class=\"pip-location-empty\" layout=\"column\" layout-align=\"center center\"><md-button class=\"md-raised\" ng-disabled=\"$ctrl.ngDisabled\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"LOCATION_ADD_LOCATION\"><span class=\"icon-location\"></span> {{\\'LOCATION_ADD_LOCATION\\' | translate }}</md-button></div><div class=\"pip-location-container\" tabindex=\"{{ $ctrl.ngDisabled ? -1 : 0 }}\" ng-click=\"$ctrl.onMapClick($event)\" ng-keypress=\"$ctrl.onMapKeyPress($event)\"></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-locations-html.min.js.map\n"]}