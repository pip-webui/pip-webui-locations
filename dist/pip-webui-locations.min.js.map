{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/TranslateFilter.ts","src/index.ts","src/location/Location.ts","src/location_dialog/LocationDialog.ts","src/location_dialog/LocationDialogParams.ts","src/location_dialog/index.ts","src/location_edit/LocationEdit.ts","src/location_ip/LocationIp.ts","src/location_map/locationMap.ts","temp/pip-webui-locations-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","locations","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","translateFilter","$injector","has","get","key","pipTranslate","translate","$inject","filter","2","3","LocationBindings","pipLocationName","pipLocationPos","pipShowLocationIcon","pipCollapse","pipRebind","pipDisabled","pipLocationResize","LocationController","LocationBindingsChanges","$element","$timeout","$scope","showMap","addClass","prototype","$postLink","_this","name","find","mapContainer","hide","click","event","stopPropagation","generateMap","$$phase","$apply","redrawMap","clearMap","$onChanges","changes","currentValue","mapControl","remove","location","coordinates","google","maps","LatLng","$","show","appendTo","mapOptions","center","zoom","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","disableDoubleClickZoom","scrollwheel","draggable","Map","Marker","position","map","LocationComponent","bindings","templateUrl","controller","defineProperty","value","LocationEditDialogController_1","$rootScope","$mdDialog","locationPos","locationName","_map","_marker","onSetLocation","geolocation","getCurrentPosition","coords","latitude","longitude","createMarker","setCenter","setZoom","changeLocation","maximumAge","enableHighAccuracy","timeout","theme","type","supportSet","navigator","trigger","setMap","animation","Animation","DROP","thisMarker_1","addListener","getPosition","tid","lat","lng","geocoder","Geocoder","geocode","latLng","results","status","formatted_address","onAddPin","getCenter","onRemovePin","onZoomIn","getZoom","onZoomOut","onCancel","cancel","onApply","LocationDialogService","params","successCallback","cancelCallback","clickOutsideToClose","then","result","setTranslations","LOCATION_ADD_LOCATION","LOCATION_SET_LOCATION","LOCATION_ADD_PIN","LOCATION_REMOVE_PIN","angular","6","LocationDialogParams","7","8","LocationEditBindings","pipLocationHolder","ngDisabled","pipChanged","LocationEditBindingsChanges","LocationEditController","pipLocationEditDialog","defineCoordinatesDebounced","_","debounce","defineCoordinates","attr","toString","empty","children","$watch","newValue","oldValue","GeocoderStatus","OK","geometry","location_1","longtitude","focus","onMapClick","$event","onMapKeyPress","keyCode","LocationEdit","component","LocationIpBindings","pipIpaddress","pipExtraInfo","LocationIpBindingsChanges","LocationIpController","$http","ipAddress","response","extraInfo","city","regionCode","region","regionName","zipCode","countryCode","country","countryName","error","LocationIp","LocationMapBindings","pipIconPath","pipInteractive","pipStretch","LocationMapBindingsChanges","LocationMapController","removeClass","checkLocation","loc","determineCoordinates","point","fill","stroke","points","interactive","isArray","push","each","bounds","LatLngBounds","icon","path","fillColor","fillOpacity","scale","strokeColor","strokeWeight","extend","fitBounds","LocationMap","11","run","$templateCache","put"],"mappings":"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","file":"pip-webui-locations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\n    function translateFilter($injector) {\n        let pipTranslate = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return function (key) {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    }\n\n    angular\n        .module('pipLocations.Translate', [])\n        .filter('translate', translateFilter);\n}","﻿angular.module('pipLocations', [\n    'pipLocation',\n    'pipLocationMap',\n    'pipLocationIp',\n    'pipLocationEditDialog',\n    'pipLocationEdit',\n    'pipLocations.Translate'\n]);","{\n    interface ILocationBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipShowLocationIcon: any;\n        pipCollapse: any;\n        pipRebind: any;\n        pipDisabled: any;\n        pipLocationResize: any;\n    }\n\n    const LocationBindings: ILocationBindings = {\n        pipLocationName: '<',\n        pipLocationPos: '<',\n        pipShowLocationIcon: '<',\n        pipCollapse: '<',\n        pipRebind: '<',\n        pipDisabled: '<',\n        pipLocationResize: '&'\n    }\n\n    class LocationBindingsChanges implements ng.IOnChangesObject, ILocationBindings {\n        [key: string]: any;\n\n        pipLocationName: ng.IChangesObject < string > ;\n        pipLocationPos: ng.IChangesObject < any > ;\n        pipShowLocationIcon: ng.IChangesObject < boolean > ;\n        pipCollapse: ng.IChangesObject < boolean > ;\n        pipRebind: ng.IChangesObject < boolean > ;\n        pipDisabled: ng.IChangesObject < boolean > ;\n\n        pipLocationResize: any;\n    }\n\n    class LocationController implements ng.IController, ILocationBindings {\n        public pipLocationName: string;\n        public pipLocationPos: any;\n        public pipShowLocationIcon: boolean;\n        public pipCollapse: boolean;\n        public pipRebind: boolean;\n        public pipDisabled: boolean;\n        public showMap: boolean = true;\n        public pipLocationResize: Function;\n\n        private name: JQuery;\n        private mapContainer: JQuery;\n        private mapControl: JQuery;\n\n        constructor(\n            private $element: JQuery,\n            private $timeout: ng.ITimeoutService,\n            private $scope: ng.IScope\n        ) {\n            \"ngInject\";\n            // Add class\n            $element.addClass('pip-location');\n        }\n\n        public $postLink() {\n            this.$timeout(() => {\n                this.name = this.$element.find('.pip-location-name');\n                this.mapContainer = this.$element.find('.pip-location-container');\n\n                if (this.pipCollapse === true) {\n                    this.mapContainer.hide();\n                    this.showMap = false;\n\n                    // Process user click\n                    this.name.click((event) => {\n                        event.stopPropagation();\n                        if (this.pipDisabled) return;\n                        this.showMap = !this.showMap;\n                        this.mapContainer[this.showMap ? 'show' : 'hide']();\n                        if (this.showMap) this.generateMap();\n                        if (!this.$scope.$$phase) this.$scope.$apply();\n                    });\n                }\n\n                this.redrawMap();\n            });\n        }\n\n        private redrawMap() {\n            if (!this.mapContainer) return;\n\n            // Visualize map\n            if (this.pipLocationPos && this.showMap === true) {\n                this.generateMap();\n            } else {\n                this.clearMap();\n            }\n        }\n\n        public $onChanges(changes: LocationBindingsChanges) {\n            this.pipRebind = changes.pipRebind \n                ? changes.pipRebind.currentValue || false : false;\n            this.pipShowLocationIcon = changes.pipShowLocationIcon \n                ? changes.pipShowLocationIcon.currentValue || false : false;\n            this.pipCollapse = changes.pipCollapse \n                ? changes.pipCollapse.currentValue || false : false;\n            this.pipDisabled = changes.pipDisabled \n                ? changes.pipDisabled.currentValue || false : false;\n\n            if (this.pipRebind) {\n                this.pipLocationName = changes.pipLocationName \n                    ? changes.pipLocationName.currentValue : null;\n                this.pipLocationPos = changes.pipLocationPos \n                    ? changes.pipLocationPos.currentValue : null;\n                this.redrawMap();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n            this.mapContainer.hide();\n        }\n\n        private generateMap() {\n            const location = this.pipLocationPos;\n\n            // Safeguard for bad coordinates\n            if (this.showMap === false \n                || location == null \n                || location.coordinates == null \n                || location.coordinates.length < 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            const coordinates = new google.maps.LatLng(\n                location.coordinates[0],\n                location.coordinates[1]\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapContainer.show();\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const\n                mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\n\n            new google.maps.Marker({\n                position: coordinates,\n                map: map\n            });\n        };\n    }\n\n    const LocationComponent: ng.IComponentOptions = {\n        bindings: LocationBindings,\n        templateUrl: 'location/Location.html',\n        controller: LocationController\n    }\n\n    angular\n        .module(\"pipLocation\", [])\n        .component('pipLocation', LocationComponent);\n}","import { ILocationDialogService } from './ILocationDialogService';\nimport { LocationDialogParams } from './LocationDialogParams';\n\n{\n    class LocationEditDialogController {\n        private _map = null;\n        private _marker = null;\n\n        public theme: string;\n        public locationPos;\n        public locationName;\n        public supportSet: boolean;\n\n        constructor(\n            private $scope: ng.IScope,\n            $rootScope: ng.IRootScopeService,\n            $timeout: angular.ITimeoutService,\n            private $mdDialog: angular.material.IDialogService,\n            locationPos: any,\n            locationName: string\n        ) {\n            this.theme = $rootScope['$theme'];\n            this.locationPos = locationPos && locationPos.type == 'Point' &&\n                locationPos.coordinates && locationPos.coordinates.length == 2 ?\n                locationPos : null;\n            this.locationName = locationName;\n            this.supportSet = navigator.geolocation != null;\n\n            // Wait until dialog is initialized\n            $timeout(() => {\n                let mapContainer = $('.pip-location-edit-dialog .pip-location-container');\n                // Calculate coordinate of the center\n                let coordinates = this.locationPos ?\n                    new google.maps.LatLng(\n                        this.locationPos.coordinates[0],\n                        this.locationPos.coordinates[1]\n                    ) : null;\n\n                // Create the map with point marker\n                const mapOptions = {\n                    center: new google.maps.LatLng(0, 0),\n                    zoom: 1,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true\n                }\n                if (coordinates != null) {\n                    mapOptions.center = coordinates;\n                    mapOptions.zoom = 12;\n                }\n\n                this._map = new google.maps.Map(mapContainer[0], mapOptions);\n                this._marker = this.createMarker(coordinates);\n\n                // Fix resizing issue\n                $timeout(() => {\n                    google.maps.event.trigger(this._map, 'resize');\n                }, 1000);\n            }, 0);\n\n            $scope.$on('pipLayoutResized', () => {\n                if (this._map == null) return;\n                google.maps.event.trigger(this._map, 'resize');\n            });\n\n        }\n\n        private createMarker(coordinates) {\n            if (this._marker) this._marker.setMap(null);\n            if (coordinates) {\n                this._marker = new google.maps.Marker({\n                    position: coordinates,\n                    map: this._map,\n                    draggable: true,\n                    animation: google.maps.Animation.DROP\n                });\n\n                let thisMarker = this._marker;\n                google.maps.event.addListener(thisMarker, 'dragend', () => {\n                    let coordinates = thisMarker.getPosition();\n                    this.changeLocation(coordinates, null);\n                });\n            } else {\n                this._marker = null;\n            }\n\n            return this._marker;\n        }\n\n        private changeLocation(coordinates, tid) {\n            this.locationPos = {\n                type: 'Point',\n                coordinates: [coordinates.lat(), coordinates.lng()]\n            };\n            this.locationName = null;\n            // Read address\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode({\n                latLng: coordinates\n            }, (results, status) => {\n                // Process positive response\n                if (results && results.length > 0) {\n                    this.locationName = results[0].formatted_address;\n                }\n\n                this.$scope.$apply();\n            })\n        }\n        // Describe user actions\n        public onAddPin() {\n            if (this._map === null) return;\n\n            const coordinates = this._map.getCenter();\n            this._marker = this.createMarker(coordinates);\n            this.changeLocation(coordinates, null);\n        }\n\n        public onRemovePin() {\n            if (this._map === null) return;\n            this._marker = this.createMarker(null);\n            this.locationPos = null;\n            this.locationName = null;\n        }\n\n        public onZoomIn() {\n            if (this._map === null) return;\n            const zoom = this._map.getZoom();\n            this._map.setZoom(zoom + 1);\n        }\n\n        public onZoomOut() {\n            if (this._map === null) return;\n            const zoom = this._map.getZoom();\n            this._map.setZoom(zoom > 1 ? zoom - 1 : zoom);\n        }\n\n        public onSetLocation = function () {\n            if (this._map === null) return;\n\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const coordinates = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                    this._marker = this.createMarker(coordinates);\n                    this._map.setCenter(coordinates);\n                    this._map.setZoom(12);\n                    this.changeLocation(coordinates, null);\n                },\n                () => {\n                    this.$scope.$apply();\n                }, {\n                    maximumAge: 0,\n                    enableHighAccuracy: true,\n                    timeout: 5000\n                });\n        }\n\n        public onCancel(): void {\n            this.$mdDialog.cancel();\n        }\n\n        public onApply(): void {\n            this.$mdDialog.hide({\n                location: this.locationPos,\n                locationPos: this.locationPos,\n                locationName: this.locationName\n            })\n        }\n    }\n    \n    class LocationDialogService implements ILocationDialogService {\n        constructor(\n            private $mdDialog: angular.material.IDialogService\n        ) {}\n\n        public show(params: LocationDialogParams, successCallback?, cancelCallback?) {\n            this.$mdDialog.show({\n                    controller: LocationEditDialogController,\n                    controllerAs: '$ctrl',\n                    templateUrl: 'location_dialog/LocationDialog.html',\n                    locals: {\n                        locationName: params.locationName,\n                        locationPos: params.locationPos\n                    },\n                    clickOutsideToClose: true\n                })\n                .then((result) => {\n                    if (successCallback) {\n                        successCallback(result);\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    const LocationDialogRun = function($injector: ng.auto.IInjectorService) {\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            ( < any > pipTranslate).setTranslations('en', {\n                'LOCATION_ADD_LOCATION': 'Add location',\n                'LOCATION_SET_LOCATION': 'Set location',\n                'LOCATION_ADD_PIN': 'Add pin',\n                'LOCATION_REMOVE_PIN': 'Remove pin'\n            });\n            ( < any > pipTranslate).setTranslations('ru', {\n                'LOCATION_ADD_LOCATION': 'Добавить местоположение',\n                'LOCATION_SET_LOCATION': 'Определить положение',\n                'LOCATION_ADD_PIN': 'Добавить точку',\n                'LOCATION_REMOVE_PIN': 'Убрать точку'\n            });\n        }\n    }\n\n\n    angular\n        .module('pipLocationEditDialog')\n        .run(LocationDialogRun)\n        .service('pipLocationEditDialog', LocationDialogService);\n}","export class LocationDialogParams {\n    // Locations position\n    locationPos: any;\n    // Location name\n    locationName: string;\n}","angular.module('pipLocationEditDialog', ['ngMaterial', 'pipLocations.Templates']);\n\nimport './LocationDialog'","import { ILocationDialogService } from '../location_dialog/ILocationDialogService';\n\n{\n    interface ILocationEditBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipLocationHolder: any;\n        ngDisabled: any;\n        pipChanged: any;\n    }\n\n    const LocationEditBindings: ILocationEditBindings = {\n        pipLocationName: '=',\n        pipLocationPos: '=',\n        pipLocationHolder: '=',\n        ngDisabled: '<',\n        pipChanged: '&'\n    }\n\n    class LocationEditBindingsChanges implements ng.IOnChangesObject, ILocationEditBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipLocationHolder: any;\n        pipChanged: any;\n\n        ngDisabled: ng.IChangesObject<boolean>;\n    }\n\n    class LocationEditController implements ng.IController, ILocationEditBindings {\n        public pipLocationName: string;\n        public pipLocationPos: any;\n        public pipLocationHolder: boolean;\n        public ngDisabled: boolean;\n        public pipChanged: Function;\n\n        private empty: JQuery;\n        private mapContainer: JQuery;\n        private mapControl: any;\n        private defineCoordinatesDebounced: Function;\n\n        constructor(\n            private $element: JQuery,\n            private $scope: ng.IScope,\n            private pipLocationEditDialog: ILocationDialogService\n        ) {\n            this.defineCoordinatesDebounced = _.debounce(() => {\n                this.defineCoordinates\n            }, 2000);\n        }\n\n        public $postLink() {\n            this.$element.find('md-input-container').attr('md-no-float', (!!this.pipLocationHolder).toString());\n            // Set containers\n            this.empty = this.$element.children('.pip-location-empty');\n            this.mapContainer = this.$element.children('.pip-location-container');\n            this.mapControl = null;\n\n            // Add watchers\n            this.$scope.$watch('$ctrl.pipLocationName',\n                (newValue, oldValue) => {\n                    if (newValue !== oldValue) {\n                        this.defineCoordinatesDebounced();\n                    }\n                }\n            );\n            this.$scope.$watch('$ctrl.pipLocationPos',\n                () => {\n                    this.generateMap();\n                }\n            );\n\n            // Add class\n            this.$element.addClass('pip-location-edit');\n\n            // Visualize map\n            if (this.pipLocationPos) {\n                this.generateMap();\n            } else {\n                this.clearMap();\n            }\n        }\n\n        public $onChanges(changes: LocationEditBindingsChanges) {\n            this.ngDisabled = changes.ngDisabled ? changes.ngDisabled.currentValue : false; \n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n\n            // Toggle control visibility\n            this.mapContainer.hide();\n            this.empty.show();\n        }\n\n        private generateMap() {\n            // Safeguard for bad coordinates\n            const location = this.pipLocationPos;\n            if (location == null || location.coordinates == null || location.coordinates.length < 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            const coordinates = new google.maps.LatLng(\n                location.coordinates[0],\n                location.coordinates[1]\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n\n            // Toggle control visibility\n            this.mapContainer.show();\n            this.empty.hide();\n\n            // Add a new map\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\n                marker = new google.maps.Marker({\n                    position: coordinates,\n                    map: map\n                });\n        }\n\n        private defineCoordinates() {\n            const locationName = this.pipLocationName;\n\n            if (locationName == '') {\n                this.pipLocationPos = null;\n                this.clearMap();\n                this.$scope.$apply();\n                return;\n            }\n\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode({\n                address: locationName\n            }, function (results, status) {\n                this.$scope.$apply(function () {\n                    // Process response\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        // Check for empty results\n                        if (results === null || results.length === 0) {\n                            this.pipLocationPos = null;\n                            this.clearMap();\n                            return;\n                        }\n\n                        const geometry = results[0].geometry || {},\n                            location = geometry.location || {};\n\n                        // Check for empty results again\n                        if (location.lat === null || location.lng === null) {\n                            this.pipLocationPos = null;\n                            this.clearMap();\n                            return;\n                        }\n\n                        this.pipLocationPos = {\n                            type: 'Point',\n                            coordinates: {\n                                latitude: location.lat(),\n                                longtitude: location.lng()\n                            }\n                        };\n                        this.generateMap();\n                    }\n                    else {\n                        this.pipLocationPos = null;\n                        this.clearMap();\n                    }\n                });\n            });\n        };\n\n        public onSetLocation() {\n            if (this.ngDisabled) return;\n\n            this.pipLocationEditDialog.show({\n                    locationName: this.pipLocationName,\n                    locationPos: this.pipLocationPos\n                },\n                (result) => {\n                    const\n                        location = result.location,\n                        locationName = result.locationName;\n\n                    // Do not change anything if location is about the same\n                    if (this.pipLocationPos && this.pipLocationPos.type == 'Point' &&\n                        this.pipLocationPos.coordinates.length == 2 &&\n                        location && location.coordinates.length == 2 &&\n                        (this.pipLocationPos.coordinates[0] - location.coordinates[0]) < 0.0001 &&\n                        (this.pipLocationPos.coordinates[1] - location.coordinates[1]) < 0.0001 &&\n                        (locationName === this.pipLocationName)) {\n                        return;\n                    }\n\n                    this.pipLocationPos = location;\n                    this.pipLocationName = locationName;\n\n                    if (locationName === null && location !== null) {\n                        this.pipLocationName =\n                            '(' + result.location.coordinates[0] +\n                            ',' + result.location.coordinates[1] + ')';\n                    }\n                    this.pipChanged();\n                    this.mapContainer[0].focus();\n                }\n            );\n        };\n\n        public onMapClick($event) {\n            if (this.ngDisabled) return;\n\n            this.mapContainer[0].focus();\n            this.onSetLocation();\n            //$event.stopPropagation();\n        };\n\n        public onMapKeyPress($event) {\n            if (this.ngDisabled) return;\n\n            if ($event.keyCode == 13 || $event.keyCode == 32) {\n                this.onSetLocation();\n                //$event.stopPropagation();\n            }\n        };\n    }\n\n    const LocationEdit: ng.IComponentOptions = {\n        bindings: LocationEditBindings,\n        templateUrl: 'location_edit/LocationEdit.html',\n        controller: LocationEditController\n    }\n\n    angular\n        .module(\"pipLocationEdit\", ['pipLocationEditDialog'])\n        .component('pipLocationEdit', LocationEdit);\n\n}","declare let google: any;\n\n{\n    interface ILocationIpBindings {\n        [key: string]: any;\n\n        pipIpaddress: any;\n        pipExtraInfo: any;\n        pipRebind: any;\n    }\n\n    const LocationIpBindings: ILocationIpBindings = {\n        pipIpaddress: '<',\n        pipExtraInfo: '&',\n        pipRebind: '<'\n    }\n\n    interface IIpResponseInfo {\n        city: string;\n        regionCode: string | number;\n        regionName: string;\n        zipCode: string | number;\n        countryCode: string | number;\n        countryName: string;\n        latitude: string | number;\n        longitude: string | number;\n    }\n\n    class LocationIpBindingsChanges implements ng.IOnChangesObject, ILocationIpBindings {\n        [key: string]: any;\n\n        pipExtraInfo: any;\n\n        pipIpaddress: ng.IChangesObject < string > ;\n        pipRebind: ng.IChangesObject < boolean >\n    }\n\n    class LocationIpController implements ng.IController, ILocationIpBindings {\n        private mapContainer: JQuery;\n        private mapControl: any;\n\n        public pipExtraInfo: any;\n        public pipIpaddress: string;\n        public pipRebind: boolean;\n\n        constructor(\n            $element: JQuery,\n            private $http: ng.IHttpService\n        ) {\n            this.mapContainer = $element.children('.pip-location-container');\n            $element.addClass('pip-location-ip');\n            this.defineCoordinates();\n        }\n\n        public $onChanges(changes: LocationIpBindingsChanges) {\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\n\n            if (this.pipRebind === true) {\n                this.pipIpaddress = changes.pipIpaddress ? changes.pipIpaddress.currentValue : this.pipIpaddress;\n                this.defineCoordinates();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n        }\n\n        private generateMap(latitude, longitude) {\n            // Safeguard for bad coordinates\n            if (latitude == null || longitude == null) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            var coordinates = new google.maps.LatLng(\n                latitude,\n                longitude\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const\n                mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\n\n            new google.maps.Marker({\n                position: coordinates,\n                map: map\n            });\n        }\n\n        private defineCoordinates() {\n            const ipAddress = this.pipIpaddress;\n\n            if (ipAddress == '') {\n                this.clearMap();\n                return;\n            }\n\n            this.$http.get('https://freegeoip.net/json/' + ipAddress)\n                .success((response: IIpResponseInfo) => {\n                    if (response != null &&\n                        response.latitude != null &&\n                        response.longitude != null) {\n\n                        this.generateMap(response.latitude, response.longitude);\n\n                        if (this.pipExtraInfo) {\n                            const extraInfo = {\n                                city: response.city,\n                                regionCode: response.regionCode,\n                                region: response.regionName,\n                                zipCode: response.zipCode,\n                                countryCode: response.countryCode,\n                                country: response.countryName\n                            };\n                            this.pipExtraInfo({\n                                extraInfo: extraInfo\n                            });\n                        }\n                    } else {\n                        this.clearMap();\n                    }\n                })\n                .error((response) => {\n                    this.clearMap();\n                });\n        }\n    }\n\n    const LocationIp: ng.IComponentOptions = {\n        bindings: LocationIpBindings,\n        template: '<div class=\"pip-location-container\"></div>',\n        controller: LocationIpController\n    }\n\n    angular\n        .module(\"pipLocationIp\", [])\n        .component('pipLocationIp', LocationIp);\n}","{\n\n    interface ILocationMapBindings {\n        [key: string]: any;\n\n        pipLocationPos: any;\n        pipIconPath: any;\n        pipInteractive: any;\n        pipStretch: any;\n        pipRebind: any;\n    }\n\n    const LocationMapBindings: ILocationMapBindings = {\n        pipLocationPos: '<',\n        pipIconPath: '<',\n        pipInteractive: '<',\n        pipStretch: '<',\n        pipRebind: '<'\n    }\n\n    class LocationMapBindingsChanges implements ng.IOnChangesObject, ILocationMapBindings {\n        [key: string]: any;\n\n        pipLocationPos: ng.IChangesObject<any>;\n        pipIconPath: ng.IChangesObject<string>;\n        pipInteractive: ng.IChangesObject<boolean>;\n        pipStretch: ng.IChangesObject<boolean>;\n        pipRebind: ng.IChangesObject<boolean>;\n    }\n\n    class LocationMapController implements ng.IController, ILocationMapBindings {\n        public pipLocationPos: any;\n        public pipIconPath: string;\n        public pipInteractive: boolean;\n        public pipStretch: boolean;\n        public pipRebind: boolean;\n\n        private mapContainer: JQuery;\n        private mapControl: any = null;\n\n        constructor(\n            private $element: JQuery\n        ) {\n            this.mapContainer = $element.children('.pip-location-container');\n            $element.addClass('pip-location-map');\n        }\n\n        public $onChanges(changes: LocationMapBindingsChanges) {\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\n            this.pipInteractive = changes.pipInteractive ? changes.pipInteractive.currentValue || false : false;\n            this.pipStretch = changes.pipStretch ? changes.pipStretch.currentValue || false : false;\n\n            if (this.pipStretch === true)  {\n                this.mapContainer.addClass('stretch');\n            } else {\n                this.mapContainer.removeClass('stretch');\n            }\n\n            if (this.pipRebind === true) {\n                this.pipLocationPos = changes.pipLocationPos ? changes.pipLocationPos.currentValue : this.pipLocationPos;\n                this.pipIconPath = changes.pipIconPath ? changes.pipIconPath.currentValue : this.pipIconPath;\n\n                this.generateMap();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n        }\n\n        private checkLocation(loc) {\n            return !(loc == null || loc.coordinates == null || loc.coordinates.length < 0);\n        }\n\n        private determineCoordinates(loc) {\n            const point = new google.maps.LatLng(\n                loc.coordinates[0],\n                loc.coordinates[1]\n            );\n\n            point.fill = loc.fill;\n            point.stroke = loc.stroke;\n\n            return point;\n        }\n\n        private generateMap() {\n            const locations = this.pipLocationPos,\n                points = [],\n                interactive = this.pipInteractive || false;\n\n            // Safeguard for bad coordinates\n            if (this.checkLocation(locations) && !_.isArray(locations)) {\n                points.push(this.determineCoordinates(locations));\n            } else {\n                if (locations && _.isArray(locations) && locations.length > 0) {\n                    _.each(locations, (loc) => {\n                        if (this.checkLocation(loc)) {\n                            points.push(this.determineCoordinates(loc));\n                        }\n                    });\n                }\n            }\n\n            if (points.length === 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map\n            const mapOptions = {\n                    center: points[0],\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: interactive,\n                    draggable: interactive\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\n                bounds = new google.maps.LatLngBounds();\n\n            // Create markers\n            _.each(points, (point) => {\n                const icon = {\n                    path: this.pipIconPath,\n                    fillColor: point.fill || '#EF5350',\n                    fillOpacity: 1,\n                    scale: 1,\n                    strokeColor: point.stroke || 'white',\n                    strokeWeight: 5\n                };\n\n                new google.maps.Marker({\n                    position: point,\n                    map: map,\n                    icon: this.pipIconPath ? icon : null\n                });\n                bounds.extend(point);\n            });\n\n            // Auto-config of zoom and center\n            if (points.length > 1) map.fitBounds(bounds);\n        }\n    }\n\n    const LocationMap: ng.IComponentOptions = {\n        bindings: LocationMapBindings,\n        template: '<div class=\"pip-location-container\"></div>',\n        controller: LocationMapController\n    }\n\n    angular\n        .module(\"pipLocationMap\", [])\n        .component('pipLocationMap', LocationMap);\n}","(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location/Location.html',\n    '<div class=\"pip-location-name location-collapse\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"!$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"><md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon><span class=\"pip-location-text\">{{$ctrl.pipLocationName}}</span></div><md-button class=\"pip-location-name\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"><div class=\"layout-align-start-center layout-row w-stretch\"><md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon><span class=\"pip-location-text flex\">{{$ctrl.pipLocationName}}</span><md-icon md-svg-icon=\"icons:triangle-down\" class=\"flex-fixed\" ng-show=\"!$ctrl.showMap\"></md-icon><md-icon md-svg-icon=\"icons:triangle-up\" class=\"flex-fixed\" ng-show=\"$ctrl.showMap\"></md-icon></div></md-button><div class=\"pip-location-container\"></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_dialog/LocationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-location-edit-dialog layout-column\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-header layout-column layout-align-start-start\"><md-progress-linear ng-show=\"$ctrl.transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h3 class=\"flex\">{{ \\'LOCATION_SET_LOCATION\\' | translate }}</h3></div><div class=\"pip-footer\"><div class=\"layout-row layout-align-start-center\"><md-button class=\"md-accent\" ng-click=\"$ctrl.onAddPin()\" ng-show=\"$ctrl.locationPos == null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_ADD_PIN\\' }}\">{{ ::\\'LOCATION_ADD_PIN\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onRemovePin()\" ng-show=\"$ctrl.locationPos != null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_REMOVE_PIN\\' }}\">{{ ::\\'LOCATION_REMOVE_PIN\\' | translate }}</md-button></div><div class=\"flex\"></div><div class=\"layout-row layout-align-end-center\"><md-button ng-click=\"$ctrl.onCancel()\" aria-label=\"{{ ::\\'CANCEL\\' }}\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'APPLY\\' }}\">{{ ::\\'APPLY\\' | translate }}</md-button></div></div><div class=\"pip-body\"><div class=\"pip-location-container\"></div><md-button class=\"md-icon-button md-fab pip-zoom-in\" ng-click=\"$ctrl.onZoomIn()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_IN\\' }}\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-zoom-out\" ng-click=\"$ctrl.onZoomOut()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_OUT\\' }}\"><md-icon md-svg-icon=\"icons:minus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-set-location\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"{{ ::\\'LOCATION_SET_LOCATION\\' }}\" ng-show=\"supportSet\" ng-disabled=\"transaction.busy()\"><md-icon md-svg-icon=\"icons:target\"></md-icon></md-button></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_edit/LocationEdit.html',\n    '<md-input-container class=\"md-block\"><label>{{ \\'LOCATION\\' | translate }}</label> <input ng-model=\"$ctrl.pipLocationName\" ng-disabled=\"$ctrl.ngDisabled\"></md-input-container><div class=\"pip-location-empty\" layout=\"column\" layout-align=\"center center\"><md-button class=\"md-raised\" ng-disabled=\"$ctrl.ngDisabled\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"LOCATION_ADD_LOCATION\"><span class=\"icon-location\"></span> {{\\'LOCATION_ADD_LOCATION\\' | translate }}</md-button></div><div class=\"pip-location-container\" tabindex=\"{{ $ctrl.ngDisabled ? -1 : 0 }}\" ng-click=\"$ctrl.onMapClick($event)\" ng-keypress=\"$ctrl.onMapKeyPress($event)\"></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-locations-html.min.js.map\n"]}