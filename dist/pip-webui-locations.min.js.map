{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/translate.ts","src/location/location.ts","src/location_dialog/location_dialog.ts","src/location_edit/location_edit.ts","src/location_ip/location_ip.ts","src/location_map/location_map.ts","src/locations.ts","temp/pip-webui-locations-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","locations","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","thisModule","angular","filter","$injector","pipTranslate","has","get","key","translate","directive","restrict","scope","pipLocationName","pipLocationPos","pipLocationResize","pipShowLocationIcon","template","$element","$attrs","toBoolean","value","toString","toLowerCase","pipCollapse","String","controller","$scope","clearMap","$mapControl","remove","$mapContainer","hide","generateMap","location","showMap","coordinates","google","maps","LatLng","$","show","appendTo","mapOptions","center","zoom","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","disableDoubleClickZoom","scrollwheel","draggable","map","Map","Marker","position","$name","children","$up","find","$down","collapsable","click","event","stopPropagation","disabled","pipRebind","$watch","newValue","addClass","LocationDialogService","$mdDialog","_$mdDialog","$inject","prototype","params","successCallback","cancelCallback","templateUrl","locationName","locationPos","clickOutsideToClose","then","result","LocationEditDialogController","$rootScope","$timeout","_map","_marker","theme","type","supportSet","navigator","geolocation","LocationDialogRun","setTranslations","LOCATION_ADD_LOCATION","LOCATION_SET_LOCATION","LOCATION_ADD_PIN","LOCATION_REMOVE_PIN","run","service","createMarker","marker","setMap","animation","Animation","DROP","thisMarker","addListener","getPosition","changeLocation","tid","lat","lng","geocoder","Geocoder","results","status","GeocoderStatus","OK","formatted_address","$apply","$theme","mapContainer","setTimeout","trigger","getCenter","getZoom","setZoom","getCurrentPosition","coords","latitude","longitude","setCenter","maximumAge","enableHighAccuracy","timeout","onCancel","cancel","4","$parse","$http","pipLocationEditDialog","pipLocationHolder","ngDisabled","pipChanged","attr","$empty","defineCoordinates","geocode","address","geometry","defineCoordinatesDebounced","_","debounce","focus","$event","onSetLocation","keyCode","oldValue","5","pipIpaddress","pipExtraInfo","ipAddress","jsonp","response","geoplugin_latitude","geoplugin_longitude","extraInfo","city","geoplugin_city","regionCode","geoplugin_regionCode","region","geoplugin_regionName","areaCode","geoplugin_areaCode","countryCode","geoplugin_countryCode","country","geoplugin_countryName","continentCode","geoplugin_continentCode","error","console","6","pipLocationPositions","pipIconPath","pipDraggable","pipStretch","loc","determineCoordinates","point","fill","stroke","points","checkLocation","push","forEach","bounds","LatLngBounds","icon","path","iconPath","fillColor","fillOpacity","scale","strokeColor","strokeWeight","extend","fitBounds","stretchMap","7","8","$templateCache","put"],"mappings":"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","file":"pip-webui-locations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"../../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module('pipLocations.Translate', []);\r\n\r\n    thisModule.filter('translate', function ($injector) {\r\n        var pipTranslate = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    });\r\n\r\n})();\r\n\r\n","/**\r\n * @file Location control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve samples in sampler app\r\n */\r\n\r\n/* global angular, google */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipLocation\", []);\r\n\r\n    thisModule.directive('pipLocation', \r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipLocationName: '&',\r\n                    pipLocationPos: '&',\r\n                    pipLocationResize: '&',\r\n                    pipShowLocationIcon: '='\r\n                },\r\n                template: \r\n                    function($element, $attrs: any) {\r\n                        function toBoolean(value) {\r\n                            if (value == null) return false;\r\n                            if (!value) return false;\r\n                            value = value.toString().toLowerCase();\r\n                            return value == '1' || value == 'true';\r\n                        }\r\n\r\n                        if (toBoolean($attrs.pipCollapse)) {\r\n                            return String()\r\n                                + '<div class=\"pip-location-name location-collapse\" ng-click=\"pipLocationResize()\" ng-hide=\"!pipLocationName()\"'\r\n                                + 'ng-class=\"pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\">'\r\n                                + '<md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"pipShowLocationIcon\"></md-icon>'\r\n                                + '<span class=\"pip-location-text\">{{pipLocationName()}}</span> '\r\n                                + '</div>'\r\n                                + '<div class=\"pip-location-container\" ng-hide=\"!pipLocationPos()\"></div>';\r\n                        } else {\r\n                            return String()\r\n                                + '<md-button class=\"pip-location-name\" ng-click=\"pipLocationResize()\" '\r\n                                + 'ng-class=\"pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\">'\r\n                                + '<div class=\"layout-align-start-center layout-row w-stretch\">'\r\n                                + '<md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"pipShowLocationIcon\"></md-icon>'\r\n                                + '<span class=\"pip-location-text flex\">{{pipLocationName()}}</span>'\r\n                                + '<md-icon md-svg-icon=\"icons:triangle-down\" class=\"flex-fixed\" ng-if=\"!showMap\"></md-icon>'\r\n                                + '<md-icon md-svg-icon=\"icons:triangle-up\" class=\"flex-fixed\" ng-if=\"showMap\"></md-icon>'\r\n                                + '</div></md-button>'\r\n                                + '<div class=\"pip-location-container\"'\r\n                                + 'ng-class=\"pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"></div>';\r\n                        }\r\n                    },\r\n                controller: 'pipLocationController'\r\n            }\r\n        }\r\n    );\r\n\r\n    thisModule.controller('pipLocationController',\r\n        function ($scope, $element, $attrs) {\r\n\r\n            function toBoolean(value) {\r\n                if (value == null) return false;\r\n                if (!value) return false;\r\n                value = value.toString().toLowerCase();\r\n                return value == '1' || value == 'true';\r\n            }\r\n\r\n            var \r\n                $name = $element.children('.pip-location-name'),\r\n                $mapContainer = $element.children('.pip-location-container'),\r\n                $mapControl = null,\r\n                $up = $element.find('.icon-up'),\r\n                $down = $element.find('.icon-down'),\r\n                collapsable = toBoolean($attrs.pipCollapse);\r\n\r\n            function clearMap() {\r\n                // Remove map control\r\n                if ($mapControl) $mapControl.remove();\r\n                $mapControl = null;\r\n                $mapContainer.hide();\r\n            };\r\n\r\n            function generateMap() {\r\n                var location = $scope.pipLocationPos();\r\n                \r\n                // Safeguard for bad coordinates\r\n                if ($scope.showMap == false || location == null\r\n                    || location.coordinates == null\r\n                    || location.coordinates.length < 0) {\r\n                    clearMap();\r\n                    return;\r\n                }\r\n\r\n                // Determine map coordinates\r\n                var coordinates = new google.maps.LatLng(\r\n                    location.coordinates[0],\r\n                    location.coordinates[1]\r\n                );\r\n\r\n                // Clean up the control\r\n                if ($mapControl) $mapControl.remove();\r\n                $mapControl = $('<div></div>');\r\n                $mapContainer.show();\r\n                $mapControl.appendTo($mapContainer);\r\n\r\n                // Create the map with point marker\r\n                var \r\n                    mapOptions = {\r\n                        center: coordinates,\r\n                        zoom: 12,\r\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                        disableDefaultUI: true,\r\n                        disableDoubleClickZoom: true,\r\n                        scrollwheel: false,\r\n                        draggable: false\r\n                    },\r\n                    map = new google.maps.Map($mapControl[0], mapOptions);\r\n                    \r\n                new google.maps.Marker({\r\n                    position: coordinates,\r\n                    map: map\r\n                });\r\n            };\r\n\r\n            // Process user actions\r\n            if (!collapsable) {\r\n                $scope.showMap = false;\r\n                $up.hide();\r\n                $mapContainer.hide();\r\n\r\n                $name.click(function (event) {\r\n                    event.stopPropagation();\r\n                    if ($attrs.disabled) return;\r\n                    $scope.showMap = !$scope.showMap;\r\n                    $up[$scope.showMap ? 'show' : 'hide']();\r\n                    $down[!$scope.showMap ? 'show' : 'hide']();\r\n                    generateMap();\r\n                });\r\n            }\r\n\r\n            // Watch for location changes\r\n            if (toBoolean($attrs.pipRebind)) {\r\n                $scope.$watch($scope.pipLocationPos,\r\n                    function (newValue) {\r\n                        generateMap();\r\n                    }\r\n                );\r\n            }\r\n\r\n            // Add class\r\n            $element.addClass('pip-location');\r\n\r\n            // Visualize map\r\n            if ($scope.pipLocationPos()) generateMap();\r\n            else clearMap();\r\n        }    \r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Location edit dialog\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve sample in sampler app\r\n */\r\n \r\n/* global angular, google */\r\n\r\nclass LocationDialogService {\r\n    private _$mdDialog: angular.material.IDialogService;\r\n\r\n    constructor($mdDialog: angular.material.IDialogService) {\r\n        this._$mdDialog = $mdDialog;\r\n    }\r\n\r\n    public show (params, successCallback, cancelCallback) {\r\n        this._$mdDialog.show({\r\n            controller: 'pipLocationEditDialogController',\r\n            templateUrl: 'location_dialog/location_dialog.html',\r\n            locals: {\r\n                locationName: params.locationName,\r\n                locationPos: params.locationPos\r\n            },\r\n            clickOutsideToClose: true\r\n        })\r\n        .then((result) => {\r\n            if (successCallback) {\r\n                successCallback(result);\r\n            }\r\n        }, () => {\r\n            if (cancelCallback) {\r\n                cancelCallback();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nclass LocationEditDialogController {\r\n    private _map = null;\r\n    private _marker = null;\r\n\r\n    public theme: string;\r\n    public locationPos;\r\n    public locationName;\r\n    public supportSet: boolean;\r\n\r\n    constructor(\r\n        $scope: ng.IScope, \r\n        $rootScope: ng.IRootScopeService, \r\n        $timeout: angular.ITimeoutService, \r\n        $mdDialog: angular.material.IDialogService,\r\n        locationPos, \r\n        locationName) {\r\n\r\n        this.theme = $rootScope['$theme'];\r\n        this.locationPos = locationPos && locationPos.type == 'Point'\r\n                && locationPos.coordinates && locationPos.coordinates.length == 2\r\n                ? locationPos : null;\r\n        this.locationName = locationName;\r\n        this.supportSet = navigator.geolocation != null;\r\n\r\n    }\r\n    \r\n\r\n}\r\n\r\n(() => {\r\n    'use strict';\r\n    function LocationDialogRun ($injector) {\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            pipTranslate.setTranslations('en', {\r\n                'LOCATION_ADD_LOCATION': 'Add location',\r\n                'LOCATION_SET_LOCATION': 'Set location',\r\n                'LOCATION_ADD_PIN': 'Add pin',\r\n                'LOCATION_REMOVE_PIN': 'Remove pin'\r\n            });\r\n            pipTranslate.setTranslations('ru', {\r\n                'LOCATION_ADD_LOCATION': 'Добавить местоположение',\r\n                'LOCATION_SET_LOCATION': 'Определить положение',\r\n                'LOCATION_ADD_PIN': 'Добавить точку',\r\n                'LOCATION_REMOVE_PIN': 'Убрать точку'\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    angular.module('pipLocationEditDialog', ['ngMaterial',  'pipLocations.Templates'])\r\n           .run(LocationDialogRun)\r\n           .service('pipLocationEditDialog', LocationDialogService)\r\n           .controller('pipLocationEditDialogController', \r\n        function ($scope, $rootScope, $timeout, $mdDialog,  locationPos, locationName) {\r\n\r\n            $scope.theme = $rootScope.$theme;\r\n            $scope.locationPos = locationPos && locationPos.type == 'Point'\r\n                && locationPos.coordinates && locationPos.coordinates.length == 2\r\n                ? locationPos : null;\r\n            $scope.locationName = locationName;\r\n            $scope.supportSet = navigator.geolocation != null;\r\n\r\n            // $scope.transaction = pipTransaction('location_edit_dialog', $scope);\r\n\r\n            var map = null, marker = null;\r\n\r\n            function createMarker (coordinates) {\r\n                if (marker) marker.setMap(null);\r\n                \r\n                if (coordinates) {\r\n                    marker = new google.maps.Marker({ \r\n                        position: coordinates, \r\n                        map: map,\r\n                        draggable: true,\r\n                        animation: google.maps.Animation.DROP\r\n                    });\r\n\r\n                    var thisMarker = marker;\r\n                    google.maps.event.addListener(thisMarker, 'dragend', function() {\r\n                       var coordinates = thisMarker.getPosition(); \r\n                       changeLocation(coordinates, null);\r\n                    });\r\n                } else {\r\n                    marker = null;\r\n                }\r\n\r\n                return marker;\r\n            };\r\n\r\n            function changeLocation(coordinates, tid) {\r\n                $scope.locationPos = {\r\n                    type: 'Point',\r\n                    coordinates: [coordinates.lat(), coordinates.lng()]\r\n                };\r\n                $scope.locationName = null;\r\n\r\n                if (tid == null) {\r\n                    // tid = $scope.transaction.begin();\r\n                    if (tid == null) return;\r\n                }\r\n\r\n                // Read address\r\n                var geocoder = new google.maps.Geocoder();\r\n                geocoder.geocode({ location: coordinates }, function(results, status) {\r\n                    // if ($scope.transaction.aborted(tid)) return;\r\n\r\n                    // Process positive response\r\n                    if (status == google.maps.GeocoderStatus.OK\r\n                        && results && results.length > 0) {\r\n                        $scope.locationName = results[0].formatted_address;\r\n                    }\r\n\r\n                    // $scope.transaction.end();\r\n                    $scope.$apply();\r\n                });\r\n            };\r\n\r\n            // Wait until dialog is initialized\r\n            $timeout(function () {\r\n                var mapContainer = $('.pip-location-edit-dialog .pip-location-container');\r\n\r\n                // Calculate coordinate of the center\r\n                var coordinates = $scope.locationPos ?\r\n                    new google.maps.LatLng(\r\n                        $scope.locationPos.coordinates[0],\r\n                        $scope.locationPos.coordinates[1]\r\n                    ) : null;\r\n\r\n                // Create the map with point marker\r\n                var mapOptions = {\r\n                    center: new google.maps.LatLng(0, 0),\r\n                    zoom: 1,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true\r\n                };\r\n                if (coordinates != null) {\r\n                    mapOptions.center = coordinates;\r\n                    mapOptions.zoom = 12;\r\n                }\r\n\r\n                map = new google.maps.Map(mapContainer[0], mapOptions);\r\n                marker = createMarker(coordinates);\r\n\r\n                // Fix resizing issue\r\n                setTimeout(function () {\r\n                    google.maps.event.trigger(map, 'resize');\r\n                }, 1000);\r\n            }, 0);\r\n\r\n            $scope.$on('pipLayoutResized', function (event) {\r\n                if (map == null) return;\r\n                google.maps.event.trigger(map, 'resize');\r\n            });\r\n\r\n            $scope.onAddPin = function () {\r\n                if (map == null) return;\r\n\r\n                var coordinates = map.getCenter();\r\n                marker = createMarker(coordinates);\r\n                changeLocation(coordinates, null);\r\n            };\r\n\r\n            $scope.onRemovePin = function () {\r\n                if (map == null) return;\r\n                marker = createMarker(null);\r\n                $scope.locationPos = null;\r\n                $scope.locationName = null;\r\n            };\r\n\r\n            $scope.onZoomIn = function () {\r\n                if (map == null) return;\r\n                var zoom = map.getZoom();\r\n                map.setZoom(zoom + 1);\r\n            };\r\n\r\n            $scope.onZoomOut = function () {\r\n                if (map == null) return;\r\n                var zoom = map.getZoom();\r\n                map.setZoom(zoom > 1 ? zoom - 1 : zoom);\r\n            };\r\n\r\n            $scope.onSetLocation = function () {\r\n                if (map == null) return;\r\n\r\n                // var tid = $scope.transaction.begin();\r\n                // if (tid == null) return;\r\n\r\n                navigator.geolocation.getCurrentPosition(\r\n                    function (position) {\r\n                        // if ($scope.transaction.aborted(tid)) return;\r\n\r\n                        var coordinates = new google.maps.LatLng(\r\n                            position.coords.latitude, position.coords.longitude);\r\n\r\n                        marker = createMarker(coordinates);\r\n                        map.setCenter(coordinates);\r\n                        map.setZoom(12);\r\n\r\n                        changeLocation(coordinates, null);\r\n                    },\r\n                    function () {\r\n                        // $scope.transaction.end();\r\n                        $scope.$apply();\r\n                    },\r\n                    {\r\n                        maximumAge: 0,\r\n                        enableHighAccuracy: true,\r\n                        timeout: 5000\r\n                    }\r\n                );\r\n            };\r\n\r\n            $scope.onCancel = function () {\r\n                $mdDialog.cancel();\r\n            };\r\n\r\n            $scope.onApply = function () {\r\n                $mdDialog.hide({\r\n                    location: $scope.locationPos,\r\n                    locationPos: $scope.locationPos,\r\n                    locationName: $scope.locationName   \r\n                });\r\n            };\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Location edit control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve samples in sampler app\r\n */\r\n \r\n/* global angular */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipLocationEdit\", ['pipLocationEditDialog']);\r\n\r\n    thisModule.directive('pipLocationEdit',\r\n        function ($parse, $http, pipLocationEditDialog) {\r\n            return {\r\n                restrict: 'EAC',\r\n                scope: {\r\n                    pipLocationName: '=',\r\n                    pipLocationPos: '=',\r\n                    pipLocationHolder: '=',\r\n                    ngDisabled: '&',\r\n                    pipChanged: '&'\r\n                },\r\n                template: String()\r\n                    + '<md-input-container class=\"md-block\">'\r\n                    + '<label>{{ \\'LOCATION\\' | translate }}</label>'\r\n                    + '<input ng-model=\"pipLocationName\"'\r\n                    + 'ng-disabled=\"ngDisabled()\"/></md-input-container>'\r\n                    + '<div class=\"pip-location-empty\" layout=\"column\" layout-align=\"center center\">'\r\n                    + '<md-button class=\"md-raised\" ng-disabled=\"ngDisabled()\" ng-click=\"onSetLocation()\"'\r\n                    + 'aria-label=\"LOCATION_ADD_LOCATION\">'\r\n                    + '<span class=\"icon-location\"></span> {{::\\'LOCATION_ADD_LOCATION\\' | translate }}'\r\n                    + '</md-button></div>'\r\n                    + '<div class=\"pip-location-container\" tabindex=\"{{ ngDisabled() ? -1 : 0 }}\"'\r\n                    + ' ng-click=\"onMapClick($event)\" ng-keypress=\"\"onMapKeyPress($event)\"></div>',\r\n                controller: function ($scope, $element) {\r\n                    $element.find('md-input-container').attr('md-no-float', !!$scope.pipLocationHolder);\r\n                },\r\n                link: function ($scope: any, $element) {\r\n\r\n                    var \r\n                        $empty = $element.children('.pip-location-empty'),\r\n                        $mapContainer = $element.children('.pip-location-container'),\r\n                        $mapControl = null;\r\n\r\n                    function clearMap() {\r\n                        // Remove map control\r\n                        if ($mapControl) $mapControl.remove();\r\n                        $mapControl = null;\r\n\r\n                        // Toggle control visibility\r\n                        $mapContainer.hide();\r\n                        $empty.show();\r\n                    };\r\n\r\n                    function generateMap() {\r\n                        // Safeguard for bad coordinates\r\n                        var location = $scope.pipLocationPos;\r\n                        if (location == null || location.coordinates == null || location.coordinates.length < 0) {\r\n                            clearMap();\r\n                            return;\r\n                        }\r\n\r\n                        // Determine map coordinates\r\n                        var coordinates = new google.maps.LatLng(\r\n                            location.coordinates[0],\r\n                            location.coordinates[1]\r\n                        );\r\n\r\n                        // Clean up the control\r\n                        if ($mapControl) $mapControl.remove();\r\n\r\n                        // Toggle control visibility\r\n                        $mapContainer.show();\r\n                        $empty.hide();\r\n\r\n                        // Add a new map\r\n                        $mapControl = $('<div></div>');\r\n                        $mapControl.appendTo($mapContainer);\r\n\r\n                        // Create the map with point marker\r\n                        var mapOptions = {\r\n                            center: coordinates,\r\n                            zoom: 12,\r\n                            mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                            disableDefaultUI: true,\r\n                            disableDoubleClickZoom: true,\r\n                            scrollwheel: false,\r\n                            draggable: false\r\n                        };\r\n                        var map = new google.maps.Map($mapControl[0], mapOptions);\r\n                        var marker = new google.maps.Marker({\r\n                            position: coordinates,\r\n                            map: map\r\n                        });\r\n                    };\r\n\r\n                    function defineCoordinates() {\r\n                        var locationName = $scope.pipLocationName;\r\n\r\n                        if (locationName == '') {\r\n                            $scope.pipLocationPos = null;\r\n                            clearMap();\r\n                            $scope.$apply();\r\n                            return;\r\n                        }\r\n\r\n                    //    $http.get('http://maps.googleapis.com/maps/api/geocode/json?address=' + locationName)\r\n                    //    .success(function (response) { ... })\r\n                    //    .error(function (response) {... });\r\n\r\n                        var geocoder = new google.maps.Geocoder();\r\n                        geocoder.geocode({ address: locationName }, function(results, status) {\r\n                            $scope.$apply(function() {\r\n                                // Process response\r\n                                if (status == google.maps.GeocoderStatus.OK) {\r\n                                    // Check for empty results\r\n                                    if (results == null || results.length == 0) {\r\n                                        $scope.pipLocationPos = null;\r\n                                        clearMap();\r\n                                        return;\r\n                                    }\r\n\r\n                                    var \r\n                                        geometry = results[0].geometry || {},\r\n                                        location = geometry.location || {};\r\n\r\n                                    // Check for empty results again\r\n                                    if (location.lat == null || location.lng == null) {\r\n                                        $scope.pipLocationPos = null;\r\n                                        clearMap();\r\n                                        return;\r\n                                    }\r\n\r\n                                    $scope.pipLocationPos = {\r\n                                        type: 'Point',\r\n                                        coordinates: [\r\n                                            location.lat(),\r\n                                            location.lng()\r\n                                        ]\r\n                                    };\r\n\r\n                                    //generateMap();                                \r\n                                } \r\n                                // Process error...\r\n                                else {\r\n                                    $scope.pipLocationPos = null;\r\n                                    //clearMap();                                \r\n                                }\r\n                            });\r\n                        });\r\n\r\n                    };\r\n                    var defineCoordinatesDebounced = _.debounce(defineCoordinates, 2000);\r\n\r\n                    // Process user actions\r\n                    \r\n                    $scope.onSetLocation = function() {\r\n                        if ($scope.ngDisabled()) return;\r\n                          \r\n                        pipLocationEditDialog.show(\r\n                            {\r\n                                locationName: $scope.pipLocationName,\r\n                                locationPos: $scope.pipLocationPos\r\n                            },\r\n                            function (result) {\r\n                                var \r\n                                    location = result.location,\r\n                                    locationName = result.locationName;\r\n\r\n                                // Do not change anything if location is about the same\r\n                                if ($scope.pipLocationPos && $scope.pipLocationPos.type == 'Point'\r\n                                    && $scope.pipLocationPos.coordinates.length == 2\r\n                                    && location && location.coordinates.length == 2\r\n                                    && ($scope.pipLocationPos.coordinates[0] - location.coordinates[0]) < 0.0001\r\n                                    && ($scope.pipLocationPos.coordinates[1] - location.coordinates[1]) < 0.0001\r\n                                    && (locationName == $scope.pipLocationName)) {\r\n                                    return;        \r\n                                }\r\n\r\n                                $scope.pipLocationPos = location;\r\n                                $scope.pipLocationName = locationName;\r\n\r\n                                if (locationName == null && location != null) {\r\n                                    $scope.pipLocationName = \r\n                                        '(' + result.location.coordinates[0]\r\n                                        + ',' + result.location.coordinates[1] + ')';\r\n                                }\r\n                                $scope.pipChanged();\r\n                                $mapContainer[0].focus();\r\n                            }\r\n                        );\r\n                    };\r\n\r\n                    $scope.onMapClick = function ($event) {\r\n                        if ($scope.ngDisabled()) return;\r\n\r\n                        $mapContainer[0].focus();\r\n                        $scope.onSetLocation();\r\n                        //$event.stopPropagation();\r\n                    };\r\n\r\n                    $scope.onMapKeyPress = function($event) {\r\n                        if ($scope.ngDisabled()) return;\r\n\r\n                        if ($event.keyCode == 13 || $event.keyCode == 32) {\r\n                            $scope.onSetLocation();\r\n                            //$event.stopPropagation();\r\n                        }  \r\n                    };\r\n\r\n                    // Watch for location name changes\r\n                    $scope.$watch(\r\n                        function () {\r\n                            return $scope.pipLocationName\r\n                        },\r\n                        function (newValue, oldValue) {\r\n                            if (newValue != oldValue)\r\n                                defineCoordinatesDebounced();\r\n                        }\r\n                    );\r\n\r\n                    $scope.$watch(\r\n                        function () {\r\n                            return $scope.pipLocationPos\r\n                        },\r\n                        function () {\r\n                            generateMap();\r\n                        }\r\n                    );\r\n\r\n                    // Add class\r\n                    $element.addClass('pip-location-edit');\r\n\r\n                    // Visualize map\r\n                    if ($scope.pipLocationPos) generateMap();\r\n                    else clearMap();\r\n                }\r\n            }\r\n        }\r\n    );\r\n\r\n})();\r\n","/**\r\n * @file Location IP control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n * @todo\r\n * - Improve samples in sampler app\r\n */\r\n \r\n/* global angular, google */\r\n\r\ndeclare let google: any;\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipLocationIp\", []);\r\n\r\n    thisModule.directive('pipLocationIp',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipIpaddress: '&',\r\n                    pipExtraInfo: '&'\r\n                },\r\n                template: '<div class=\"pip-location-container\"></div>',\r\n                controller: 'pipLocationIpController'\r\n            }\r\n        }\r\n    );\r\n\r\n    thisModule.controller('pipLocationIpController',\r\n        function ($scope, $element, $attrs, $http) {\r\n\r\n            var \r\n                $mapContainer = $element.children('.pip-location-container'),\r\n                $mapControl = null;\r\n\r\n            function clearMap() {\r\n                // Remove map control\r\n                if ($mapControl) $mapControl.remove();\r\n                $mapControl = null;\r\n            }\r\n\r\n            function generateMap(latitude, longitude) {\r\n                // Safeguard for bad coordinates\r\n                if (latitude == null || longitude == null) {\r\n                    clearMap();\r\n                    return;\r\n                }\r\n\r\n                // Determine map coordinates\r\n                var coordinates = new google.maps.LatLng(\r\n                    latitude,\r\n                    longitude\r\n                );\r\n\r\n                // Clean up the control\r\n                if ($mapControl) $mapControl.remove();\r\n                $mapControl = $('<div></div>');\r\n                $mapControl.appendTo($mapContainer);\r\n\r\n                // Create the map with point marker\r\n                var \r\n                    mapOptions = {\r\n                        center: coordinates,\r\n                        zoom: 12,\r\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                        disableDefaultUI: true,\r\n                        disableDoubleClickZoom: true,\r\n                        scrollwheel: false,\r\n                        draggable: false\r\n                    },\r\n                    map = new google.maps.Map($mapControl[0], mapOptions);\r\n                    \r\n                new google.maps.Marker({\r\n                    position: coordinates,\r\n                    map: map\r\n                });\r\n            }\r\n\r\n            function toBoolean(value) {\r\n                if (value == null) return false;\r\n                if (!value) return false;\r\n                value = value.toString().toLowerCase();\r\n                return value == '1' || value == 'true';\r\n            }\r\n\r\n            function defineCoordinates() {\r\n                var ipAddress = $scope.pipIpaddress();\r\n\r\n                if (ipAddress == '') {\r\n                    clearMap();\r\n                    return;\r\n                }\r\n\r\n                // Todo: Find more reliable geocoding service to locate ip addresses\r\n                $http.jsonp('https://www.geoplugin.net/json.gp?ip=' + ipAddress + '&jsoncallback=JSON_CALLBACK')\r\n                .success(function (response) {\r\n                    if (response != null \r\n                        && response.geoplugin_latitude != null\r\n                        && response.geoplugin_longitude != null) {\r\n                        \r\n                        generateMap(response.geoplugin_latitude, response.geoplugin_longitude);\r\n\r\n                        if ($scope.pipExtraInfo) {\r\n                            var extraInfo = {\r\n                                city: response.geoplugin_city,  \r\n                                regionCode: response.geoplugin_regionCode,  \r\n                                region: response.geoplugin_regionName,  \r\n                                areaCode: response.geoplugin_areaCode,  \r\n                                countryCode: response.geoplugin_countryCode,  \r\n                                country: response.geoplugin_countryName,  \r\n                                continentCode: response.geoplugin_continentCode\r\n                            };\r\n                            $scope.pipExtraInfo({ extraInfo: extraInfo });\r\n                        }\r\n                    } else {\r\n                        clearMap();\r\n                    }\r\n                })\r\n                .error(function (response) {\r\n                    console.error(response);\r\n                    clearMap();\r\n                });\r\n            }\r\n\r\n            // Watch for location changes\r\n            if (toBoolean($attrs.pipRebind)) {\r\n                $scope.$watch(\r\n                    function () {\r\n                        return $scope.pipIpaddress()\r\n                    },\r\n                    function (newValue) {\r\n                        defineCoordinates();\r\n                    }\r\n                );\r\n            }\r\n\r\n            // Add class\r\n            $element.addClass('pip-location-ip');\r\n\r\n            // Visualize map\r\n            defineCoordinates();\r\n        }        \r\n    );\r\n\r\n})();\r\n\r\n","/**\r\n * @file Location map control\r\n * @copyright Digital Living Software Corp. 2014-2016\r\n */\r\n \r\n/* global angular, google */\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    var thisModule = angular.module(\"pipLocationMap\", []);\r\n\r\n    thisModule.directive('pipLocationMap',\r\n        function () {\r\n            return {\r\n                restrict: 'EA',\r\n                scope: {\r\n                    pipLocationPos: '&',\r\n                    pipLocationPositions: '&',\r\n                    pipIconPath: '&',\r\n                    pipDraggable: '&',\r\n                    pipStretch: '&'\r\n                },\r\n                template: '<div class=\"pip-location-container\"></div>',\r\n                controller: 'pipLocationMapController'\r\n            }\r\n        }\r\n    );\r\n\r\n    thisModule.controller('pipLocationMapController',\r\n        ['$scope', '$element', '$attrs', '$parse', '$timeout', function ($scope, $element, $attrs, $parse, $timeout) {\r\n            var\r\n                $mapContainer = $element.children('.pip-location-container'),\r\n                $mapControl = null,\r\n                stretchMap = $scope.pipStretch() || false,\r\n                iconPath = $scope.pipIconPath();\r\n\r\n            function clearMap() {\r\n                // Remove map control\r\n                if ($mapControl) $mapControl.remove();\r\n                $mapControl = null;\r\n            }\r\n\r\n            function checkLocation (loc) {\r\n                return !(loc == null\r\n                || loc.coordinates == null\r\n                || loc.coordinates.length < 0);\r\n            }\r\n\r\n            function determineCoordinates(loc) {\r\n                var point = new google.maps.LatLng(\r\n                    loc.coordinates[0],\r\n                    loc.coordinates[1]\r\n                );\r\n\r\n                point.fill = loc.fill;\r\n                point.stroke = loc.stroke;\r\n\r\n                return point;\r\n            }\r\n\r\n            function toBoolean(value) {\r\n                if (value == null) return false;\r\n                if (!value) return false;\r\n                value = value.toString().toLowerCase();\r\n                return value == '1' || value == 'true';\r\n            }\r\n\r\n            function generateMap() {\r\n                var location = $scope.pipLocationPos(),\r\n                    locations = $scope.pipLocationPositions(),\r\n                    points = [],\r\n                    draggable = $scope.pipDraggable() || false;\r\n\r\n                // Safeguard for bad coordinates\r\n                if (checkLocation(location)) {\r\n                    points.push(determineCoordinates(location));\r\n                } else {\r\n                    if (locations && locations.length && locations.length > 0) {\r\n                        locations.forEach(function (loc) {\r\n                            if (checkLocation(loc)) {\r\n                                points.push(determineCoordinates(loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                if (points.length === 0) {\r\n                    clearMap();\r\n                    return;\r\n                }\r\n\r\n                // Clean up the control\r\n                if ($mapControl) $mapControl.remove();\r\n                $mapControl = $('<div></div>');\r\n                $mapControl.appendTo($mapContainer);\r\n\r\n                // Create the map\r\n                var\r\n                    mapOptions = {\r\n                        center: points[0],\r\n                        zoom: 12,\r\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                        disableDefaultUI: true,\r\n                        disableDoubleClickZoom: true,\r\n                        scrollwheel: draggable,\r\n                        draggable: draggable\r\n                    },\r\n                    map = new google.maps.Map($mapControl[0], mapOptions),\r\n                    bounds = new google.maps.LatLngBounds();\r\n\r\n                // Create markers\r\n                points.forEach(function(point) {\r\n                    var icon = {\r\n                        path: iconPath,\r\n                        fillColor: point.fill || '#EF5350',\r\n                        fillOpacity: 1,\r\n                        scale: 1,\r\n                        strokeColor: point.stroke || 'white',\r\n                        strokeWeight: 5\r\n                    };\r\n\r\n                    new google.maps.Marker({\r\n                        position: point,\r\n                        map: map,\r\n                        icon: iconPath ? icon : null\r\n                    });\r\n                    bounds.extend(point);\r\n                });\r\n\r\n                // Auto-config of zoom and center\r\n                if (points.length > 1) map.fitBounds(bounds);\r\n            }\r\n\r\n            // Watch for location changes\r\n            if (toBoolean($attrs.pipRebind)) {\r\n                $scope.$watch(\r\n                    function () {\r\n                        return $scope.pipLocationPos()\r\n                    },\r\n                    function () {\r\n                        generateMap();\r\n                    }\r\n                );\r\n            }\r\n\r\n            // Add class\r\n            $element.addClass('pip-location-map');\r\n            if (stretchMap) $mapContainer.addClass('stretch');\r\n\r\n            // Visualize map\r\n            if ($scope.pipLocationPos() || $scope.pipLocationPositions()) $timeout(generateMap, 200);\r\n            else clearMap();\r\n        }]\r\n    );\r\n\r\n})();\r\n\r\n","﻿/// <reference path=\"../typings/tsd.d.ts\" />\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('pipLocations', [        \r\n        'pipLocation',\r\n        'pipLocationMap',\r\n        'pipLocationIp',\r\n        'pipLocationEditDialog',\r\n        'pipLocationEdit',\r\n        'pipLocations.Translate'\r\n    ]);\r\n    \r\n})();\r\n\r\n\r\n","(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_dialog/location_dialog.html',\n    '<md-dialog class=\"pip-dialog pip-location-edit-dialog layout-column\" md-theme=\"{{theme}}\"><div class=\"pip-header layout-column layout-align-start-start\"><md-progress-linear ng-show=\"transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h3 class=\"flex\">{{ \\'LOCATION_SET_LOCATION\\' | translate }}</h3></div><div class=\"pip-footer\"><div class=\"layout-row layout-align-start-center\"><md-button class=\"md-accent\" ng-click=\"onAddPin()\" ng-show=\"locationPos == null\" ng-disabled=\"transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_ADD_PIN\\' }}\">{{ ::\\'LOCATION_ADD_PIN\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"onRemovePin()\" ng-show=\"locationPos != null\" ng-disabled=\"transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_REMOVE_PIN\\' }}\">{{ ::\\'LOCATION_REMOVE_PIN\\' | translate }}</md-button></div><div class=\"flex\"></div><div class=\"layout-row layout-align-end-center\"><md-button ng-click=\"onCancel()\" aria-label=\"{{ ::\\'CANCEL\\' }}\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"onApply()\" ng-disabled=\"transaction.busy()\" aria-label=\"{{ ::\\'APPLY\\' }}\">{{ ::\\'APPLY\\' | translate }}</md-button></div></div><div class=\"pip-body\"><div class=\"pip-location-container\"></div><md-button class=\"md-icon-button md-fab pip-zoom-in\" ng-click=\"onZoomIn()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_IN\\' }}\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-zoom-out\" ng-click=\"onZoomOut()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_OUT\\' }}\"><md-icon md-svg-icon=\"icons:minus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-set-location\" ng-click=\"onSetLocation()\" aria-label=\"{{ ::\\'LOCATION_SET_LOCATION\\' }}\" ng-show=\"supportSet\" ng-disabled=\"transaction.busy()\"><md-icon md-svg-icon=\"icons:target\"></md-icon></md-button></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-locations-html.min.js.map\n"]}