{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/TranslateFilter.ts","src/index.ts","src/location/Location.ts","src/location_dialog/LocationDialog.ts","src/location_dialog/LocationDialogParams.ts","src/location_dialog/index.ts","src/location_edit/LocationEdit.ts","src/location_ip/LocationIp.ts","src/location_map/LocationMap.ts","temp/pip-webui-locations-html.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","pip","locations","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","translateFilter","$injector","has","get","key","pipTranslate","translate","$inject","filter","2","3","LocationBindings","pipLocationName","pipLocationPos","pipShowLocationIcon","pipCollapse","pipRebind","pipDisabled","pipLocationResize","LocationController","LocationBindingsChanges","$element","$timeout","$scope","showMap","addClass","prototype","$postLink","_this","name","find","mapContainer","hide","click","event","stopPropagation","generateMap","$$phase","$apply","redrawMap","clearMap","$onChanges","changes","currentValue","mapControl","remove","location","coordinates","google","maps","LatLng","$","show","appendTo","mapOptions","center","zoom","mapTypeId","MapTypeId","ROADMAP","disableDefaultUI","disableDoubleClickZoom","scrollwheel","draggable","Map","Marker","position","map","LocationComponent","bindings","templateUrl","controller","defineProperty","value","LocationEditDialogController_1","$rootScope","$mdDialog","locationPos","locationName","_map","_marker","geolocation","getCurrentPosition","coords","latitude","longitude","createMarker","setCenter","setZoom","changeLocation","maximumAge","enableHighAccuracy","timeout","theme","type","supportSet","navigator","trigger","$on","setMap","animation","Animation","DROP","thisMarker_1","addListener","getPosition","tid","lat","lng","Geocoder","geocode","results","status","formatted_address","onAddPin","getCenter","onRemovePin","onZoomIn","getZoom","onZoomOut","onCancel","cancel","onApply","LocationDialogService","params","successCallback","cancelCallback","locals","then","result","setTranslations","LOCATION_ADD_LOCATION","LOCATION_SET_LOCATION","LOCATION_ADD_PIN","LOCATION_REMOVE_PIN","LocationDialogRun","service","6","Object","LocationDialogParams","angular","8","LocationEditBindings","pipLocationHolder","ngDisabled","pipChanged","LocationEditBindingsChanges","LocationEditController","pipLocationEditDialog","defineCoordinatesDebounced","_","debounce","defineCoordinates","attr","toString","empty","children","$watch","newValue","oldValue","GeocoderStatus","OK","geometry","location_1","longtitude","onSetLocation","focus","onMapClick","$event","onMapKeyPress","keyCode","component","LocationEdit","9","LocationIpBindings","pipIpaddress","pipExtraInfo","LocationIpBindingsChanges","LocationIpController","$http","ipAddress","response","extraInfo","city","regionCode","region","regionName","zipCode","countryCode","country","countryName","error","LocationIp","LocationMapBindings","pipIconPath","pipInteractive","pipStretch","LocationMapController","LocationMapBindingsChanges","removeClass","checkLocation","loc","determineCoordinates","point","fill","stroke","points","interactive","isArray","push","each","bounds","LatLngBounds","icon","path","fillColor","fillOpacity","scale","strokeColor","strokeWeight","extend","fitBounds","LocationMap","template","11","run","$templateCache","put"],"mappings":"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","file":"pip-webui-locations.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\r\n    function translateFilter($injector) {\r\n        \"ngInject\";\r\n        let pipTranslate = $injector.has('pipTranslate')\r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return function (key) {\r\n            return pipTranslate ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular\r\n        .module('pipLocations.Translate', [])\r\n        .filter('translate', translateFilter);\r\n}","﻿angular.module('pipLocations', [\r\n    'pipLocation',\r\n    'pipLocationMap',\r\n    'pipLocationIp',\r\n    'pipLocationEditDialog',\r\n    'pipLocationEdit',\r\n    'pipLocations.Translate'\r\n]);","{\r\n    interface ILocationBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationName: any;\r\n        pipLocationPos: any;\r\n        pipShowLocationIcon: any;\r\n        pipCollapse: any;\r\n        pipRebind: any;\r\n        pipDisabled: any;\r\n        pipLocationResize: any;\r\n    }\r\n\r\n    const LocationBindings: ILocationBindings = {\r\n        pipLocationName: '<',\r\n        pipLocationPos: '<',\r\n        pipShowLocationIcon: '<',\r\n        pipCollapse: '<',\r\n        pipRebind: '<',\r\n        pipDisabled: '<',\r\n        pipLocationResize: '&'\r\n    }\r\n\r\n    class LocationBindingsChanges implements ng.IOnChangesObject, ILocationBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationName: ng.IChangesObject < string > ;\r\n        pipLocationPos: ng.IChangesObject < any > ;\r\n        pipShowLocationIcon: ng.IChangesObject < boolean > ;\r\n        pipCollapse: ng.IChangesObject < boolean > ;\r\n        pipRebind: ng.IChangesObject < boolean > ;\r\n        pipDisabled: ng.IChangesObject < boolean > ;\r\n\r\n        pipLocationResize: any;\r\n    }\r\n\r\n    class LocationController implements ng.IController, ILocationBindings {\r\n        public pipLocationName: string;\r\n        public pipLocationPos: any;\r\n        public pipShowLocationIcon: boolean;\r\n        public pipCollapse: boolean;\r\n        public pipRebind: boolean;\r\n        public pipDisabled: boolean;\r\n        public showMap: boolean = true;\r\n        public pipLocationResize: Function;\r\n\r\n        private name: JQuery;\r\n        private mapContainer: JQuery;\r\n        private mapControl: JQuery;\r\n\r\n        constructor(\r\n            private $element: JQuery,\r\n            private $timeout: ng.ITimeoutService,\r\n            private $scope: ng.IScope\r\n        ) {\r\n            \"ngInject\";\r\n            // Add class\r\n            $element.addClass('pip-location');\r\n        }\r\n\r\n        public $postLink() {\r\n            this.$timeout(() => {\r\n                this.name = this.$element.find('.pip-location-name');\r\n                this.mapContainer = this.$element.find('.pip-location-container');\r\n\r\n                if (this.pipCollapse === true) {\r\n                    this.mapContainer.hide();\r\n                    this.showMap = false;\r\n\r\n                    // Process user click\r\n                    this.name.click((event) => {\r\n                        event.stopPropagation();\r\n                        if (this.pipDisabled) return;\r\n                        this.showMap = !this.showMap;\r\n                        this.mapContainer[this.showMap ? 'show' : 'hide']();\r\n                        if (this.showMap) this.generateMap();\r\n                        if (!this.$scope.$$phase) this.$scope.$apply();\r\n                    });\r\n                }\r\n\r\n                this.redrawMap();\r\n            });\r\n        }\r\n\r\n        private redrawMap() {\r\n            if (!this.mapContainer) return;\r\n\r\n            // Visualize map\r\n            if (this.pipLocationPos && this.showMap === true) {\r\n                this.generateMap();\r\n            } else {\r\n                this.clearMap();\r\n            }\r\n        }\r\n\r\n        public $onChanges(changes: LocationBindingsChanges) {\r\n            this.pipRebind = changes.pipRebind \r\n                ? changes.pipRebind.currentValue || false : false;\r\n            this.pipShowLocationIcon = changes.pipShowLocationIcon \r\n                ? changes.pipShowLocationIcon.currentValue || false : false;\r\n            this.pipCollapse = changes.pipCollapse \r\n                ? changes.pipCollapse.currentValue || false : false;\r\n            this.pipDisabled = changes.pipDisabled \r\n                ? changes.pipDisabled.currentValue || false : false;\r\n\r\n            if (this.pipRebind) {\r\n                this.pipLocationName = changes.pipLocationName \r\n                    ? changes.pipLocationName.currentValue : null;\r\n                this.pipLocationPos = changes.pipLocationPos \r\n                    ? changes.pipLocationPos.currentValue : null;\r\n                this.redrawMap();\r\n            }\r\n        }\r\n\r\n        private clearMap() {\r\n            // Remove map control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = null;\r\n            this.mapContainer.hide();\r\n        }\r\n\r\n        private generateMap() {\r\n            const location = this.pipLocationPos;\r\n\r\n            // Safeguard for bad coordinates\r\n            if (this.showMap === false \r\n                || location == null \r\n                || location.coordinates == null \r\n                || location.coordinates.length < 0) {\r\n                this.clearMap();\r\n                return;\r\n            }\r\n\r\n            // Determine map coordinates\r\n            const coordinates = new google.maps.LatLng(\r\n                location.coordinates[0],\r\n                location.coordinates[1]\r\n            );\r\n\r\n            // Clean up the control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = $('<div></div>');\r\n            this.mapContainer.show();\r\n            this.mapControl.appendTo(this.mapContainer);\r\n\r\n            // Create the map with point marker\r\n            const\r\n                mapOptions = {\r\n                    center: coordinates,\r\n                    zoom: 12,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true,\r\n                    disableDoubleClickZoom: true,\r\n                    scrollwheel: false,\r\n                    draggable: false\r\n                },\r\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\r\n\r\n            new google.maps.Marker({\r\n                position: coordinates,\r\n                map: map\r\n            });\r\n        };\r\n    }\r\n\r\n    const LocationComponent: ng.IComponentOptions = {\r\n        bindings: LocationBindings,\r\n        templateUrl: 'location/Location.html',\r\n        controller: LocationController\r\n    }\r\n\r\n    angular\r\n        .module(\"pipLocation\", [])\r\n        .component('pipLocation', LocationComponent);\r\n}","import { ILocationDialogService } from './ILocationDialogService';\r\nimport { LocationDialogParams } from './LocationDialogParams';\r\n\r\n{\r\n    class LocationEditDialogController {\r\n        private _map = null;\r\n        private _marker = null;\r\n\r\n        public theme: string;\r\n        public locationPos;\r\n        public locationName;\r\n        public supportSet: boolean;\r\n\r\n        constructor(\r\n            private $scope: ng.IScope,\r\n            $rootScope: ng.IRootScopeService,\r\n            $timeout: angular.ITimeoutService,\r\n            private $mdDialog: angular.material.IDialogService,\r\n            locationPos: any,\r\n            locationName: string\r\n        ) {\r\n            \"ngInject\";\r\n            this.theme = $rootScope['$theme'];\r\n            this.locationPos = locationPos && locationPos.type == 'Point' &&\r\n                locationPos.coordinates && locationPos.coordinates.length == 2 ?\r\n                locationPos : null;\r\n            this.locationName = locationName;\r\n            this.supportSet = navigator.geolocation != null;\r\n\r\n            // Wait until dialog is initialized\r\n            $timeout(() => {\r\n                let mapContainer = $('.pip-location-edit-dialog .pip-location-container');\r\n                // Calculate coordinate of the center\r\n                let coordinates = this.locationPos ?\r\n                    new google.maps.LatLng(\r\n                        this.locationPos.coordinates[0],\r\n                        this.locationPos.coordinates[1]\r\n                    ) : null;\r\n\r\n                // Create the map with point marker\r\n                const mapOptions = {\r\n                    center: new google.maps.LatLng(0, 0),\r\n                    zoom: 1,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true\r\n                }\r\n                if (coordinates != null) {\r\n                    mapOptions.center = coordinates;\r\n                    mapOptions.zoom = 12;\r\n                }\r\n\r\n                this._map = new google.maps.Map(mapContainer[0], mapOptions);\r\n                this._marker = this.createMarker(coordinates);\r\n\r\n                // Fix resizing issue\r\n                $timeout(() => {\r\n                    google.maps.event.trigger(this._map, 'resize');\r\n                }, 1000);\r\n            }, 0);\r\n\r\n            $scope.$on('pipLayoutResized', () => {\r\n                if (this._map == null) return;\r\n                google.maps.event.trigger(this._map, 'resize');\r\n            });\r\n\r\n        }\r\n\r\n        private createMarker(coordinates) {\r\n            if (this._marker) this._marker.setMap(null);\r\n            if (coordinates) {\r\n                this._marker = new google.maps.Marker({\r\n                    position: coordinates,\r\n                    map: this._map,\r\n                    draggable: true,\r\n                    animation: google.maps.Animation.DROP\r\n                });\r\n\r\n                let thisMarker = this._marker;\r\n                google.maps.event.addListener(thisMarker, 'dragend', () => {\r\n                    let coordinates = thisMarker.getPosition();\r\n                    this.changeLocation(coordinates, null);\r\n                });\r\n            } else {\r\n                this._marker = null;\r\n            }\r\n\r\n            return this._marker;\r\n        }\r\n\r\n        private changeLocation(coordinates, tid) {\r\n            this.locationPos = {\r\n                type: 'Point',\r\n                coordinates: [coordinates.lat(), coordinates.lng()]\r\n            };\r\n            this.locationName = null;\r\n            // Read address\r\n            const geocoder = new google.maps.Geocoder();\r\n            geocoder.geocode({\r\n                latLng: coordinates\r\n            }, (results, status) => {\r\n                // Process positive response\r\n                if (results && results.length > 0) {\r\n                    this.locationName = results[0].formatted_address;\r\n                }\r\n\r\n                this.$scope.$apply();\r\n            })\r\n        }\r\n        // Describe user actions\r\n        public onAddPin() {\r\n            if (this._map === null) return;\r\n\r\n            const coordinates = this._map.getCenter();\r\n            this._marker = this.createMarker(coordinates);\r\n            this.changeLocation(coordinates, null);\r\n        }\r\n\r\n        public onRemovePin() {\r\n            if (this._map === null) return;\r\n            this._marker = this.createMarker(null);\r\n            this.locationPos = null;\r\n            this.locationName = null;\r\n        }\r\n\r\n        public onZoomIn() {\r\n            if (this._map === null) return;\r\n            const zoom = this._map.getZoom();\r\n            this._map.setZoom(zoom + 1);\r\n        }\r\n\r\n        public onZoomOut() {\r\n            if (this._map === null) return;\r\n            const zoom = this._map.getZoom();\r\n            this._map.setZoom(zoom > 1 ? zoom - 1 : zoom);\r\n        }\r\n\r\n        public onSetLocation = function () {\r\n            if (this._map === null) return;\r\n\r\n            navigator.geolocation.getCurrentPosition(\r\n                (position) => {\r\n                    const coordinates = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\r\n                    this._marker = this.createMarker(coordinates);\r\n                    this._map.setCenter(coordinates);\r\n                    this._map.setZoom(12);\r\n                    this.changeLocation(coordinates, null);\r\n                },\r\n                () => {\r\n                    this.$scope.$apply();\r\n                }, {\r\n                    maximumAge: 0,\r\n                    enableHighAccuracy: true,\r\n                    timeout: 5000\r\n                });\r\n        }\r\n\r\n        public onCancel(): void {\r\n            this.$mdDialog.cancel();\r\n        }\r\n\r\n        public onApply(): void {\r\n            this.$mdDialog.hide({\r\n                location: this.locationPos,\r\n                locationPos: this.locationPos,\r\n                locationName: this.locationName\r\n            })\r\n        }\r\n    }\r\n    \r\n    class LocationDialogService implements ILocationDialogService {\r\n        constructor(\r\n            private $mdDialog: angular.material.IDialogService\r\n        ) {}\r\n\r\n        public show(params: LocationDialogParams, successCallback?, cancelCallback?) {\r\n            this.$mdDialog.show({\r\n                    controller: LocationEditDialogController,\r\n                    controllerAs: '$ctrl',\r\n                    templateUrl: 'location_dialog/LocationDialog.html',\r\n                    locals: {\r\n                        locationName: params.locationName,\r\n                        locationPos: params.locationPos\r\n                    },\r\n                    clickOutsideToClose: true\r\n                })\r\n                .then((result) => {\r\n                    if (successCallback) {\r\n                        successCallback(result);\r\n                    }\r\n                }, () => {\r\n                    if (cancelCallback) {\r\n                        cancelCallback();\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    const LocationDialogRun = function($injector: ng.auto.IInjectorService) {\r\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\r\n\r\n        if (pipTranslate) {\r\n            ( < any > pipTranslate).setTranslations('en', {\r\n                'LOCATION_ADD_LOCATION': 'Add location',\r\n                'LOCATION_SET_LOCATION': 'Set location',\r\n                'LOCATION_ADD_PIN': 'Add pin',\r\n                'LOCATION_REMOVE_PIN': 'Remove pin'\r\n            });\r\n            ( < any > pipTranslate).setTranslations('ru', {\r\n                'LOCATION_ADD_LOCATION': 'Добавить местоположение',\r\n                'LOCATION_SET_LOCATION': 'Определить положение',\r\n                'LOCATION_ADD_PIN': 'Добавить точку',\r\n                'LOCATION_REMOVE_PIN': 'Убрать точку'\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    angular\r\n        .module('pipLocationEditDialog')\r\n        .run(LocationDialogRun)\r\n        .service('pipLocationEditDialog', LocationDialogService);\r\n}","export class LocationDialogParams {\r\n    // Locations position\r\n    locationPos: any;\r\n    // Location name\r\n    locationName: string;\r\n}","angular.module('pipLocationEditDialog', ['ngMaterial', 'pipLocations.Templates']);\r\n\r\nimport './LocationDialog'","import { ILocationDialogService } from '../location_dialog/ILocationDialogService';\r\n\r\n{\r\n    interface ILocationEditBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationName: any;\r\n        pipLocationPos: any;\r\n        pipLocationHolder: any;\r\n        ngDisabled: any;\r\n        pipChanged: any;\r\n    }\r\n\r\n    const LocationEditBindings: ILocationEditBindings = {\r\n        pipLocationName: '=',\r\n        pipLocationPos: '=',\r\n        pipLocationHolder: '=',\r\n        ngDisabled: '<',\r\n        pipChanged: '&'\r\n    }\r\n\r\n    class LocationEditBindingsChanges implements ng.IOnChangesObject, ILocationEditBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationName: any;\r\n        pipLocationPos: any;\r\n        pipLocationHolder: any;\r\n        pipChanged: any;\r\n\r\n        ngDisabled: ng.IChangesObject<boolean>;\r\n    }\r\n\r\n    class LocationEditController implements ng.IController, ILocationEditBindings {\r\n        public pipLocationName: string;\r\n        public pipLocationPos: any;\r\n        public pipLocationHolder: boolean;\r\n        public ngDisabled: boolean;\r\n        public pipChanged: Function;\r\n\r\n        private empty: JQuery;\r\n        private mapContainer: JQuery;\r\n        private mapControl: any;\r\n        private defineCoordinatesDebounced: Function;\r\n\r\n        constructor(\r\n            private $element: JQuery,\r\n            private $scope: ng.IScope,\r\n            private pipLocationEditDialog: ILocationDialogService\r\n        ) {\r\n            \"ngInject\";\r\n            this.defineCoordinatesDebounced = _.debounce(() => {\r\n                this.defineCoordinates\r\n            }, 2000);\r\n        }\r\n\r\n        public $postLink() {\r\n            this.$element.find('md-input-container').attr('md-no-float', (!!this.pipLocationHolder).toString());\r\n            // Set containers\r\n            this.empty = this.$element.children('.pip-location-empty');\r\n            this.mapContainer = this.$element.children('.pip-location-container');\r\n            this.mapControl = null;\r\n\r\n            // Add watchers\r\n            this.$scope.$watch('$ctrl.pipLocationName',\r\n                (newValue, oldValue) => {\r\n                    if (newValue !== oldValue) {\r\n                        this.defineCoordinatesDebounced();\r\n                    }\r\n                }\r\n            );\r\n            this.$scope.$watch('$ctrl.pipLocationPos',\r\n                () => {\r\n                    this.generateMap();\r\n                }\r\n            );\r\n\r\n            // Add class\r\n            this.$element.addClass('pip-location-edit');\r\n\r\n            // Visualize map\r\n            if (this.pipLocationPos) {\r\n                this.generateMap();\r\n            } else {\r\n                this.clearMap();\r\n            }\r\n        }\r\n\r\n        public $onChanges(changes: LocationEditBindingsChanges) {\r\n            this.ngDisabled = changes.ngDisabled ? changes.ngDisabled.currentValue : false;\r\n        }\r\n\r\n        private clearMap() {\r\n            // Remove map control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = null;\r\n\r\n            // Toggle control visibility\r\n            this.mapContainer.hide();\r\n            this.empty.show();\r\n        }\r\n\r\n        private generateMap() {\r\n            // Safeguard for bad coordinates\r\n            const location = this.pipLocationPos;\r\n            if (location == null || location.coordinates == null || location.coordinates.length < 0) {\r\n                this.clearMap();\r\n                return;\r\n            }\r\n\r\n            // Determine map coordinates\r\n            const coordinates = new google.maps.LatLng(\r\n                location.coordinates[0],\r\n                location.coordinates[1]\r\n            );\r\n\r\n            // Clean up the control\r\n            if (this.mapControl) this.mapControl.remove();\r\n\r\n            // Toggle control visibility\r\n            this.mapContainer.show();\r\n            this.empty.hide();\r\n\r\n            // Add a new map\r\n            this.mapControl = $('<div></div>');\r\n            this.mapControl.appendTo(this.mapContainer);\r\n\r\n            // Create the map with point marker\r\n            const mapOptions = {\r\n                center: coordinates,\r\n                zoom: 12,\r\n                mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                disableDefaultUI: true,\r\n                disableDoubleClickZoom: true,\r\n                scrollwheel: false,\r\n                draggable: false\r\n            },\r\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\r\n                marker = new google.maps.Marker({\r\n                    position: coordinates,\r\n                    map: map\r\n                });\r\n        }\r\n\r\n        private defineCoordinates() {\r\n            const locationName = this.pipLocationName;\r\n\r\n            if (locationName == '') {\r\n                this.pipLocationPos = null;\r\n                this.clearMap();\r\n                this.$scope.$apply();\r\n                return;\r\n            }\r\n\r\n            const geocoder = new google.maps.Geocoder();\r\n            geocoder.geocode({\r\n                address: locationName\r\n            }, function (results, status) {\r\n                this.$scope.$apply(function () {\r\n                    // Process response\r\n                    if (status === google.maps.GeocoderStatus.OK) {\r\n                        // Check for empty results\r\n                        if (results === null || results.length === 0) {\r\n                            this.pipLocationPos = null;\r\n                            this.clearMap();\r\n                            return;\r\n                        }\r\n\r\n                        const geometry = results[0].geometry || {},\r\n                            location = geometry.location || {};\r\n\r\n                        // Check for empty results again\r\n                        if (location.lat === null || location.lng === null) {\r\n                            this.pipLocationPos = null;\r\n                            this.clearMap();\r\n                            return;\r\n                        }\r\n\r\n                        this.pipLocationPos = {\r\n                            type: 'Point',\r\n                            coordinates: {\r\n                                latitude: location.lat(),\r\n                                longtitude: location.lng()\r\n                            }\r\n                        };\r\n                        this.generateMap();\r\n                    }\r\n                    else {\r\n                        this.pipLocationPos = null;\r\n                        this.clearMap();\r\n                    }\r\n                });\r\n            });\r\n        };\r\n\r\n        public onSetLocation() {\r\n            if (this.ngDisabled) return;\r\n\r\n            this.pipLocationEditDialog.show({\r\n                locationName: this.pipLocationName,\r\n                locationPos: this.pipLocationPos\r\n            },\r\n                (result) => {\r\n                    const\r\n                        location = result.location,\r\n                        locationName = result.locationName;\r\n\r\n                    // Do not change anything if location is about the same\r\n                    if (this.pipLocationPos && this.pipLocationPos.type == 'Point' &&\r\n                        this.pipLocationPos.coordinates.length == 2 &&\r\n                        location && location.coordinates.length == 2 &&\r\n                        (this.pipLocationPos.coordinates[0] - location.coordinates[0]) < 0.0001 &&\r\n                        (this.pipLocationPos.coordinates[1] - location.coordinates[1]) < 0.0001 &&\r\n                        (locationName === this.pipLocationName)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.pipLocationPos = location;\r\n                    this.pipLocationName = locationName;\r\n\r\n                    if (locationName === null && location !== null) {\r\n                        this.pipLocationName =\r\n                            '(' + result.location.coordinates[0] +\r\n                            ',' + result.location.coordinates[1] + ')';\r\n                    }\r\n                    this.pipChanged();\r\n                    this.mapContainer[0].focus();\r\n                }\r\n            );\r\n        };\r\n\r\n        public onMapClick($event) {\r\n            if (this.ngDisabled) return;\r\n\r\n            this.mapContainer[0].focus();\r\n            this.onSetLocation();\r\n            //$event.stopPropagation();\r\n        };\r\n\r\n        public onMapKeyPress($event) {\r\n            if (this.ngDisabled) return;\r\n\r\n            if ($event.keyCode == 13 || $event.keyCode == 32) {\r\n                this.onSetLocation();\r\n                //$event.stopPropagation();\r\n            }\r\n        };\r\n    }\r\n\r\n    const LocationEdit: ng.IComponentOptions = {\r\n        bindings: LocationEditBindings,\r\n        templateUrl: 'location_edit/LocationEdit.html',\r\n        controller: LocationEditController\r\n    }\r\n\r\n    angular\r\n        .module(\"pipLocationEdit\", ['pipLocationEditDialog'])\r\n        .component('pipLocationEdit', LocationEdit);\r\n\r\n}","declare let google: any;\r\n\r\n{\r\n    interface ILocationIpBindings {\r\n        [key: string]: any;\r\n\r\n        pipIpaddress: any;\r\n        pipExtraInfo: any;\r\n        pipRebind: any;\r\n    }\r\n\r\n    const LocationIpBindings: ILocationIpBindings = {\r\n        pipIpaddress: '<',\r\n        pipExtraInfo: '&',\r\n        pipRebind: '<'\r\n    }\r\n\r\n    interface IIpResponseInfo {\r\n        city: string;\r\n        regionCode: string | number;\r\n        regionName: string;\r\n        zipCode: string | number;\r\n        countryCode: string | number;\r\n        countryName: string;\r\n        latitude: string | number;\r\n        longitude: string | number;\r\n    }\r\n\r\n    class LocationIpBindingsChanges implements ng.IOnChangesObject, ILocationIpBindings {\r\n        [key: string]: any;\r\n\r\n        pipExtraInfo: any;\r\n\r\n        pipIpaddress: ng.IChangesObject < string > ;\r\n        pipRebind: ng.IChangesObject < boolean >\r\n    }\r\n\r\n    class LocationIpController implements ng.IController, ILocationIpBindings {\r\n        private mapContainer: JQuery;\r\n        private mapControl: any;\r\n\r\n        public pipExtraInfo: any;\r\n        public pipIpaddress: string;\r\n        public pipRebind: boolean;\r\n\r\n        constructor(\r\n            $element: JQuery,\r\n            private $http: ng.IHttpService\r\n        ) {\r\n            \"ngInject\";\r\n            this.mapContainer = $element.children('.pip-location-container');\r\n            $element.addClass('pip-location-ip');\r\n            this.defineCoordinates();\r\n        }\r\n\r\n        public $onChanges(changes: LocationIpBindingsChanges) {\r\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\r\n\r\n            if (this.pipRebind === true) {\r\n                this.pipIpaddress = changes.pipIpaddress ? changes.pipIpaddress.currentValue : this.pipIpaddress;\r\n                this.defineCoordinates();\r\n            }\r\n        }\r\n\r\n        private clearMap() {\r\n            // Remove map control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = null;\r\n        }\r\n\r\n        private generateMap(latitude, longitude) {\r\n            // Safeguard for bad coordinates\r\n            if (latitude == null || longitude == null) {\r\n                this.clearMap();\r\n                return;\r\n            }\r\n\r\n            // Determine map coordinates\r\n            var coordinates = new google.maps.LatLng(\r\n                latitude,\r\n                longitude\r\n            );\r\n\r\n            // Clean up the control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = $('<div></div>');\r\n            this.mapControl.appendTo(this.mapContainer);\r\n\r\n            // Create the map with point marker\r\n            const\r\n                mapOptions = {\r\n                    center: coordinates,\r\n                    zoom: 12,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true,\r\n                    disableDoubleClickZoom: true,\r\n                    scrollwheel: false,\r\n                    draggable: false\r\n                },\r\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\r\n\r\n            new google.maps.Marker({\r\n                position: coordinates,\r\n                map: map\r\n            });\r\n        }\r\n\r\n        private defineCoordinates() {\r\n            const ipAddress = this.pipIpaddress;\r\n\r\n            if (ipAddress == '') {\r\n                this.clearMap();\r\n                return;\r\n            }\r\n\r\n            this.$http.get('https://freegeoip.net/json/' + ipAddress)\r\n                .success((response: IIpResponseInfo) => {\r\n                    if (response != null &&\r\n                        response.latitude != null &&\r\n                        response.longitude != null) {\r\n\r\n                        this.generateMap(response.latitude, response.longitude);\r\n\r\n                        if (this.pipExtraInfo) {\r\n                            const extraInfo = {\r\n                                city: response.city,\r\n                                regionCode: response.regionCode,\r\n                                region: response.regionName,\r\n                                zipCode: response.zipCode,\r\n                                countryCode: response.countryCode,\r\n                                country: response.countryName\r\n                            };\r\n                            this.pipExtraInfo({\r\n                                extraInfo: extraInfo\r\n                            });\r\n                        }\r\n                    } else {\r\n                        this.clearMap();\r\n                    }\r\n                })\r\n                .error((response) => {\r\n                    this.clearMap();\r\n                });\r\n        }\r\n    }\r\n\r\n    const LocationIp: ng.IComponentOptions = {\r\n        bindings: LocationIpBindings,\r\n        template: '<div class=\"pip-location-container\"></div>',\r\n        controller: LocationIpController\r\n    }\r\n\r\n    angular\r\n        .module(\"pipLocationIp\", [])\r\n        .component('pipLocationIp', LocationIp);\r\n}","{\r\n\r\n    interface ILocationMapBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationPos: any;\r\n        pipIconPath: any;\r\n        pipInteractive: any;\r\n        pipStretch: any;\r\n        pipRebind: any;\r\n    }\r\n\r\n    const LocationMapBindings: ILocationMapBindings = {\r\n        pipLocationPos: '<',\r\n        pipIconPath: '<',\r\n        pipInteractive: '<',\r\n        pipStretch: '<',\r\n        pipRebind: '<'\r\n    }\r\n\r\n    class LocationMapBindingsChanges implements ng.IOnChangesObject, ILocationMapBindings {\r\n        [key: string]: any;\r\n\r\n        pipLocationPos: ng.IChangesObject<any>;\r\n        pipIconPath: ng.IChangesObject<string>;\r\n        pipInteractive: ng.IChangesObject<boolean>;\r\n        pipStretch: ng.IChangesObject<boolean>;\r\n        pipRebind: ng.IChangesObject<boolean>;\r\n    }\r\n\r\n    class LocationMapController implements ng.IController, ILocationMapBindings {\r\n        public pipLocationPos: any;\r\n        public pipIconPath: string;\r\n        public pipInteractive: boolean;\r\n        public pipStretch: boolean;\r\n        public pipRebind: boolean;\r\n\r\n        private mapContainer: JQuery;\r\n        private mapControl: any = null;\r\n\r\n        constructor(\r\n            private $element: JQuery\r\n        ) {\r\n            \"ngInject\";\r\n            this.mapContainer = $element.children('.pip-location-container');\r\n            $element.addClass('pip-location-map');\r\n        }\r\n\r\n        public $onChanges(changes: LocationMapBindingsChanges) {\r\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\r\n            this.pipInteractive = changes.pipInteractive ? changes.pipInteractive.currentValue || false : false;\r\n            this.pipStretch = changes.pipStretch ? changes.pipStretch.currentValue || false : false;\r\n\r\n            if (this.pipStretch === true)  {\r\n                this.mapContainer.addClass('stretch');\r\n            } else {\r\n                this.mapContainer.removeClass('stretch');\r\n            }\r\n\r\n            if (this.pipRebind === true) {\r\n                this.pipLocationPos = changes.pipLocationPos ? changes.pipLocationPos.currentValue : this.pipLocationPos;\r\n                this.pipIconPath = changes.pipIconPath ? changes.pipIconPath.currentValue : this.pipIconPath;\r\n\r\n                this.generateMap();\r\n            }\r\n        }\r\n\r\n        private clearMap() {\r\n            // Remove map control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = null;\r\n        }\r\n\r\n        private checkLocation(loc) {\r\n            return !(loc == null || loc.coordinates == null || loc.coordinates.length < 0);\r\n        }\r\n\r\n        private determineCoordinates(loc) {\r\n            const point = new google.maps.LatLng(\r\n                loc.coordinates[0],\r\n                loc.coordinates[1]\r\n            );\r\n\r\n            point.fill = loc.fill;\r\n            point.stroke = loc.stroke;\r\n\r\n            return point;\r\n        }\r\n\r\n        private generateMap() {\r\n            const locations = this.pipLocationPos,\r\n                points = [],\r\n                interactive = this.pipInteractive || false;\r\n\r\n            // Safeguard for bad coordinates\r\n            if (this.checkLocation(locations) && !_.isArray(locations)) {\r\n                points.push(this.determineCoordinates(locations));\r\n            } else {\r\n                if (locations && _.isArray(locations) && locations.length > 0) {\r\n                    _.each(locations, (loc) => {\r\n                        if (this.checkLocation(loc)) {\r\n                            points.push(this.determineCoordinates(loc));\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (points.length === 0) {\r\n                this.clearMap();\r\n                return;\r\n            }\r\n\r\n            // Clean up the control\r\n            if (this.mapControl) this.mapControl.remove();\r\n            this.mapControl = $('<div></div>');\r\n            this.mapControl.appendTo(this.mapContainer);\r\n\r\n            // Create the map\r\n            const mapOptions = {\r\n                    center: points[0],\r\n                    zoom: 12,\r\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                    disableDefaultUI: true,\r\n                    disableDoubleClickZoom: true,\r\n                    scrollwheel: interactive,\r\n                    draggable: interactive\r\n                },\r\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\r\n                bounds = new google.maps.LatLngBounds();\r\n\r\n            // Create markers\r\n            _.each(points, (point) => {\r\n                const icon = {\r\n                    path: this.pipIconPath,\r\n                    fillColor: point.fill || '#EF5350',\r\n                    fillOpacity: 1,\r\n                    scale: 1,\r\n                    strokeColor: point.stroke || 'white',\r\n                    strokeWeight: 5\r\n                };\r\n\r\n                new google.maps.Marker({\r\n                    position: point,\r\n                    map: map,\r\n                    icon: this.pipIconPath ? icon : null\r\n                });\r\n                bounds.extend(point);\r\n            });\r\n\r\n            // Auto-config of zoom and center\r\n            if (points.length > 1) map.fitBounds(bounds);\r\n        }\r\n    }\r\n\r\n    const LocationMap: ng.IComponentOptions = {\r\n        bindings: LocationMapBindings,\r\n        template: '<div class=\"pip-location-container\"></div>',\r\n        controller: LocationMapController\r\n    }\r\n\r\n    angular\r\n        .module(\"pipLocationMap\", [])\r\n        .component('pipLocationMap', LocationMap);\r\n}","(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location/Location.html',\n    '<div class=\"pip-location-name location-collapse\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"!$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"><md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon><span class=\"pip-location-text\">{{$ctrl.pipLocationName}}</span></div><md-button class=\"pip-location-name\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"><div class=\"layout-align-start-center layout-row w-stretch\"><md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon><span class=\"pip-location-text flex\">{{$ctrl.pipLocationName}}</span><md-icon md-svg-icon=\"icons:triangle-down\" class=\"flex-fixed\" ng-show=\"!$ctrl.showMap\"></md-icon><md-icon md-svg-icon=\"icons:triangle-up\" class=\"flex-fixed\" ng-show=\"$ctrl.showMap\"></md-icon></div></md-button><div class=\"pip-location-container\"></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_dialog/LocationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-location-edit-dialog layout-column\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-header layout-column layout-align-start-start\"><md-progress-linear ng-show=\"$ctrl.transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h3 class=\"flex\">{{ \\'LOCATION_SET_LOCATION\\' | translate }}</h3></div><div class=\"pip-footer\"><div class=\"layout-row layout-align-start-center\"><md-button class=\"md-accent\" ng-click=\"$ctrl.onAddPin()\" ng-show=\"$ctrl.locationPos == null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_ADD_PIN\\' }}\">{{ ::\\'LOCATION_ADD_PIN\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onRemovePin()\" ng-show=\"$ctrl.locationPos != null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_REMOVE_PIN\\' }}\">{{ ::\\'LOCATION_REMOVE_PIN\\' | translate }}</md-button></div><div class=\"flex\"></div><div class=\"layout-row layout-align-end-center\"><md-button ng-click=\"$ctrl.onCancel()\" aria-label=\"{{ ::\\'CANCEL\\' }}\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'APPLY\\' }}\">{{ ::\\'APPLY\\' | translate }}</md-button></div></div><div class=\"pip-body\"><div class=\"pip-location-container\"></div><md-button class=\"md-icon-button md-fab pip-zoom-in\" ng-click=\"$ctrl.onZoomIn()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_IN\\' }}\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-zoom-out\" ng-click=\"$ctrl.onZoomOut()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_OUT\\' }}\"><md-icon md-svg-icon=\"icons:minus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-set-location\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"{{ ::\\'LOCATION_SET_LOCATION\\' }}\" ng-show=\"supportSet\" ng-disabled=\"transaction.busy()\"><md-icon md-svg-icon=\"icons:target\"></md-icon></md-button></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_edit/LocationEdit.html',\n    '<md-input-container class=\"md-block\"><label>{{ \\'LOCATION\\' | translate }}</label> <input ng-model=\"$ctrl.pipLocationName\" ng-disabled=\"$ctrl.ngDisabled\"></md-input-container><div class=\"pip-location-empty\" layout=\"column\" layout-align=\"center center\"><md-button class=\"md-raised\" ng-disabled=\"$ctrl.ngDisabled\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"LOCATION_ADD_LOCATION\"><span class=\"icon-location\"></span> {{\\'LOCATION_ADD_LOCATION\\' | translate }}</md-button></div><div class=\"pip-location-container\" tabindex=\"{{ $ctrl.ngDisabled ? -1 : 0 }}\" ng-click=\"$ctrl.onMapClick($event)\" ng-keypress=\"$ctrl.onMapKeyPress($event)\"></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-locations-html.min.js.map\n"]}