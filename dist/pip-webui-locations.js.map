{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/TranslateFilter.ts","src/index.ts","src/location/Location.ts","src/location_dialog/LocationDialog.ts","src/location_dialog/LocationDialogParams.ts","src/location_dialog/index.ts","src/location_edit/LocationEdit.ts","src/location_ip/LocationIp.ts","src/location_map/locationMap.ts","temp/pip-webui-locations-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-locations.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\n    function translateFilter($injector) {\n        let pipTranslate = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return function (key) {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    }\n\n    angular\n        .module('pipLocations.Translate', [])\n        .filter('translate', translateFilter);\n}","﻿angular.module('pipLocations', [\n    'pipLocation',\n    'pipLocationMap',\n    'pipLocationIp',\n    'pipLocationEditDialog',\n    'pipLocationEdit',\n    'pipLocations.Translate'\n]);","{\n    interface ILocationBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipShowLocationIcon: any;\n        pipCollapse: any;\n        pipRebind: any;\n        pipDisabled: any;\n        pipLocationResize: any;\n    }\n\n    const LocationBindings: ILocationBindings = {\n        pipLocationName: '<',\n        pipLocationPos: '<',\n        pipShowLocationIcon: '<',\n        pipCollapse: '<',\n        pipRebind: '<',\n        pipDisabled: '<',\n        pipLocationResize: '&'\n    }\n\n    class LocationBindingsChanges implements ng.IOnChangesObject, ILocationBindings {\n        [key: string]: any;\n\n        pipLocationName: ng.IChangesObject < string > ;\n        pipLocationPos: ng.IChangesObject < any > ;\n        pipShowLocationIcon: ng.IChangesObject < boolean > ;\n        pipCollapse: ng.IChangesObject < boolean > ;\n        pipRebind: ng.IChangesObject < boolean > ;\n        pipDisabled: ng.IChangesObject < boolean > ;\n\n        pipLocationResize: any;\n    }\n\n    class LocationController implements ng.IController, ILocationBindings {\n        public pipLocationName: string;\n        public pipLocationPos: any;\n        public pipShowLocationIcon: boolean;\n        public pipCollapse: boolean;\n        public pipRebind: boolean;\n        public pipDisabled: boolean;\n        public showMap: boolean = true;\n        public pipLocationResize: Function;\n\n        private name: JQuery;\n        private mapContainer: JQuery;\n        private mapControl: JQuery;\n\n        constructor(\n            private $element: JQuery,\n            private $timeout: ng.ITimeoutService,\n            private $scope: ng.IScope\n        ) {\n            \"ngInject\";\n            // Add class\n            $element.addClass('pip-location');\n        }\n\n        public $postLink() {\n            this.$timeout(() => {\n                this.name = this.$element.find('.pip-location-name');\n                this.mapContainer = this.$element.find('.pip-location-container');\n\n                if (this.pipCollapse === true) {\n                    this.mapContainer.hide();\n                    this.showMap = false;\n\n                    // Process user click\n                    this.name.click((event) => {\n                        event.stopPropagation();\n                        if (this.pipDisabled) return;\n                        this.showMap = !this.showMap;\n                        this.mapContainer[this.showMap ? 'show' : 'hide']();\n                        if (this.showMap) this.generateMap();\n                        if (!this.$scope.$$phase) this.$scope.$apply();\n                    });\n                }\n\n                this.redrawMap();\n            });\n        }\n\n        private redrawMap() {\n            if (!this.mapContainer) return;\n\n            // Visualize map\n            if (this.pipLocationPos && this.showMap === true) {\n                this.generateMap();\n            } else {\n                this.clearMap();\n            }\n        }\n\n        public $onChanges(changes: LocationBindingsChanges) {\n            this.pipRebind = changes.pipRebind \n                ? changes.pipRebind.currentValue || false : false;\n            this.pipShowLocationIcon = changes.pipShowLocationIcon \n                ? changes.pipShowLocationIcon.currentValue || false : false;\n            this.pipCollapse = changes.pipCollapse \n                ? changes.pipCollapse.currentValue || false : false;\n            this.pipDisabled = changes.pipDisabled \n                ? changes.pipDisabled.currentValue || false : false;\n\n            if (this.pipRebind) {\n                this.pipLocationName = changes.pipLocationName \n                    ? changes.pipLocationName.currentValue : null;\n                this.pipLocationPos = changes.pipLocationPos \n                    ? changes.pipLocationPos.currentValue : null;\n                this.redrawMap();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n            this.mapContainer.hide();\n        }\n\n        private generateMap() {\n            const location = this.pipLocationPos;\n\n            // Safeguard for bad coordinates\n            if (this.showMap === false \n                || location == null \n                || location.coordinates == null \n                || location.coordinates.length < 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            const coordinates = new google.maps.LatLng(\n                location.coordinates[0],\n                location.coordinates[1]\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapContainer.show();\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const\n                mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\n\n            new google.maps.Marker({\n                position: coordinates,\n                map: map\n            });\n        };\n    }\n\n    const LocationComponent: ng.IComponentOptions = {\n        bindings: LocationBindings,\n        templateUrl: 'location/Location.html',\n        controller: LocationController\n    }\n\n    angular\n        .module(\"pipLocation\", [])\n        .component('pipLocation', LocationComponent);\n}","import { ILocationDialogService } from './ILocationDialogService';\nimport { LocationDialogParams } from './LocationDialogParams';\n\n{\n    class LocationEditDialogController {\n        private _map = null;\n        private _marker = null;\n\n        public theme: string;\n        public locationPos;\n        public locationName;\n        public supportSet: boolean;\n\n        constructor(\n            private $scope: ng.IScope,\n            $rootScope: ng.IRootScopeService,\n            $timeout: angular.ITimeoutService,\n            private $mdDialog: angular.material.IDialogService,\n            locationPos: any,\n            locationName: string\n        ) {\n            this.theme = $rootScope['$theme'];\n            this.locationPos = locationPos && locationPos.type == 'Point' &&\n                locationPos.coordinates && locationPos.coordinates.length == 2 ?\n                locationPos : null;\n            this.locationName = locationName;\n            this.supportSet = navigator.geolocation != null;\n\n            // Wait until dialog is initialized\n            $timeout(() => {\n                let mapContainer = $('.pip-location-edit-dialog .pip-location-container');\n                // Calculate coordinate of the center\n                let coordinates = this.locationPos ?\n                    new google.maps.LatLng(\n                        this.locationPos.coordinates[0],\n                        this.locationPos.coordinates[1]\n                    ) : null;\n\n                // Create the map with point marker\n                const mapOptions = {\n                    center: new google.maps.LatLng(0, 0),\n                    zoom: 1,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true\n                }\n                if (coordinates != null) {\n                    mapOptions.center = coordinates;\n                    mapOptions.zoom = 12;\n                }\n\n                this._map = new google.maps.Map(mapContainer[0], mapOptions);\n                this._marker = this.createMarker(coordinates);\n\n                // Fix resizing issue\n                $timeout(() => {\n                    google.maps.event.trigger(this._map, 'resize');\n                }, 1000);\n            }, 0);\n\n            $scope.$on('pipLayoutResized', () => {\n                if (this._map == null) return;\n                google.maps.event.trigger(this._map, 'resize');\n            });\n\n        }\n\n        private createMarker(coordinates) {\n            if (this._marker) this._marker.setMap(null);\n            if (coordinates) {\n                this._marker = new google.maps.Marker({\n                    position: coordinates,\n                    map: this._map,\n                    draggable: true,\n                    animation: google.maps.Animation.DROP\n                });\n\n                let thisMarker = this._marker;\n                google.maps.event.addListener(thisMarker, 'dragend', () => {\n                    let coordinates = thisMarker.getPosition();\n                    this.changeLocation(coordinates, null);\n                });\n            } else {\n                this._marker = null;\n            }\n\n            return this._marker;\n        }\n\n        private changeLocation(coordinates, tid) {\n            this.locationPos = {\n                type: 'Point',\n                coordinates: [coordinates.lat(), coordinates.lng()]\n            };\n            this.locationName = null;\n            // Read address\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode({\n                latLng: coordinates\n            }, (results, status) => {\n                // Process positive response\n                if (results && results.length > 0) {\n                    this.locationName = results[0].formatted_address;\n                }\n\n                this.$scope.$apply();\n            })\n        }\n        // Describe user actions\n        public onAddPin() {\n            if (this._map === null) return;\n\n            const coordinates = this._map.getCenter();\n            this._marker = this.createMarker(coordinates);\n            this.changeLocation(coordinates, null);\n        }\n\n        public onRemovePin() {\n            if (this._map === null) return;\n            this._marker = this.createMarker(null);\n            this.locationPos = null;\n            this.locationName = null;\n        }\n\n        public onZoomIn() {\n            if (this._map === null) return;\n            const zoom = this._map.getZoom();\n            this._map.setZoom(zoom + 1);\n        }\n\n        public onZoomOut() {\n            if (this._map === null) return;\n            const zoom = this._map.getZoom();\n            this._map.setZoom(zoom > 1 ? zoom - 1 : zoom);\n        }\n\n        public onSetLocation = function () {\n            if (this._map === null) return;\n\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const coordinates = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                    this._marker = this.createMarker(coordinates);\n                    this._map.setCenter(coordinates);\n                    this._map.setZoom(12);\n                    this.changeLocation(coordinates, null);\n                },\n                () => {\n                    this.$scope.$apply();\n                }, {\n                    maximumAge: 0,\n                    enableHighAccuracy: true,\n                    timeout: 5000\n                });\n        }\n\n        public onCancel(): void {\n            this.$mdDialog.cancel();\n        }\n\n        public onApply(): void {\n            this.$mdDialog.hide({\n                location: this.locationPos,\n                locationPos: this.locationPos,\n                locationName: this.locationName\n            })\n        }\n    }\n    \n    class LocationDialogService implements ILocationDialogService {\n        constructor(\n            private $mdDialog: angular.material.IDialogService\n        ) {}\n\n        public show(params: LocationDialogParams, successCallback?, cancelCallback?) {\n            this.$mdDialog.show({\n                    controller: LocationEditDialogController,\n                    controllerAs: '$ctrl',\n                    templateUrl: 'location_dialog/LocationDialog.html',\n                    locals: {\n                        locationName: params.locationName,\n                        locationPos: params.locationPos\n                    },\n                    clickOutsideToClose: true\n                })\n                .then((result) => {\n                    if (successCallback) {\n                        successCallback(result);\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    const LocationDialogRun = function($injector: ng.auto.IInjectorService) {\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            ( < any > pipTranslate).setTranslations('en', {\n                'LOCATION_ADD_LOCATION': 'Add location',\n                'LOCATION_SET_LOCATION': 'Set location',\n                'LOCATION_ADD_PIN': 'Add pin',\n                'LOCATION_REMOVE_PIN': 'Remove pin'\n            });\n            ( < any > pipTranslate).setTranslations('ru', {\n                'LOCATION_ADD_LOCATION': 'Добавить местоположение',\n                'LOCATION_SET_LOCATION': 'Определить положение',\n                'LOCATION_ADD_PIN': 'Добавить точку',\n                'LOCATION_REMOVE_PIN': 'Убрать точку'\n            });\n        }\n    }\n\n\n    angular\n        .module('pipLocationEditDialog')\n        .run(LocationDialogRun)\n        .service('pipLocationEditDialog', LocationDialogService);\n}","export class LocationDialogParams {\n    // Locations position\n    locationPos: any;\n    // Location name\n    locationName: string;\n}","angular.module('pipLocationEditDialog', ['ngMaterial', 'pipLocations.Templates']);\n\nimport './LocationDialog'","import { ILocationDialogService } from '../location_dialog/ILocationDialogService';\n\n{\n    interface ILocationEditBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipLocationHolder: any;\n        ngDisabled: any;\n        pipChanged: any;\n    }\n\n    const LocationEditBindings: ILocationEditBindings = {\n        pipLocationName: '=',\n        pipLocationPos: '=',\n        pipLocationHolder: '=',\n        ngDisabled: '<',\n        pipChanged: '&'\n    }\n\n    class LocationEditBindingsChanges implements ng.IOnChangesObject, ILocationEditBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipLocationHolder: any;\n        pipChanged: any;\n\n        ngDisabled: ng.IChangesObject<boolean>;\n    }\n\n    class LocationEditController implements ng.IController, ILocationEditBindings {\n        public pipLocationName: string;\n        public pipLocationPos: any;\n        public pipLocationHolder: boolean;\n        public ngDisabled: boolean;\n        public pipChanged: Function;\n\n        private empty: JQuery;\n        private mapContainer: JQuery;\n        private mapControl: any;\n        private defineCoordinatesDebounced: Function;\n\n        constructor(\n            private $element: JQuery,\n            private $scope: ng.IScope,\n            private pipLocationEditDialog: ILocationDialogService\n        ) {\n            this.defineCoordinatesDebounced = _.debounce(() => {\n                this.defineCoordinates\n            }, 2000);\n        }\n\n        public $postLink() {\n            this.$element.find('md-input-container').attr('md-no-float', (!!this.pipLocationHolder).toString());\n            // Set containers\n            this.empty = this.$element.children('.pip-location-empty');\n            this.mapContainer = this.$element.children('.pip-location-container');\n            this.mapControl = null;\n\n            // Add watchers\n            this.$scope.$watch('$ctrl.pipLocationName',\n                (newValue, oldValue) => {\n                    if (newValue !== oldValue) {\n                        this.defineCoordinatesDebounced();\n                    }\n                }\n            );\n            this.$scope.$watch('$ctrl.pipLocationPos',\n                () => {\n                    this.generateMap();\n                }\n            );\n\n            // Add class\n            this.$element.addClass('pip-location-edit');\n\n            // Visualize map\n            if (this.pipLocationPos) {\n                this.generateMap();\n            } else {\n                this.clearMap();\n            }\n        }\n\n        public $onChanges(changes: LocationEditBindingsChanges) {\n            this.ngDisabled = changes.ngDisabled ? changes.ngDisabled.currentValue : false; \n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n\n            // Toggle control visibility\n            this.mapContainer.hide();\n            this.empty.show();\n        }\n\n        private generateMap() {\n            // Safeguard for bad coordinates\n            const location = this.pipLocationPos;\n            if (location == null || location.coordinates == null || location.coordinates.length < 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            const coordinates = new google.maps.LatLng(\n                location.coordinates[0],\n                location.coordinates[1]\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n\n            // Toggle control visibility\n            this.mapContainer.show();\n            this.empty.hide();\n\n            // Add a new map\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\n                marker = new google.maps.Marker({\n                    position: coordinates,\n                    map: map\n                });\n        }\n\n        private defineCoordinates() {\n            const locationName = this.pipLocationName;\n\n            if (locationName == '') {\n                this.pipLocationPos = null;\n                this.clearMap();\n                this.$scope.$apply();\n                return;\n            }\n\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode({\n                address: locationName\n            }, function (results, status) {\n                this.$scope.$apply(function () {\n                    // Process response\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        // Check for empty results\n                        if (results === null || results.length === 0) {\n                            this.pipLocationPos = null;\n                            this.clearMap();\n                            return;\n                        }\n\n                        const geometry = results[0].geometry || {},\n                            location = geometry.location || {};\n\n                        // Check for empty results again\n                        if (location.lat === null || location.lng === null) {\n                            this.pipLocationPos = null;\n                            this.clearMap();\n                            return;\n                        }\n\n                        this.pipLocationPos = {\n                            type: 'Point',\n                            coordinates: {\n                                latitude: location.lat(),\n                                longtitude: location.lng()\n                            }\n                        };\n                        this.generateMap();\n                    }\n                    else {\n                        this.pipLocationPos = null;\n                        this.clearMap();\n                    }\n                });\n            });\n        };\n\n        public onSetLocation() {\n            if (this.ngDisabled) return;\n\n            this.pipLocationEditDialog.show({\n                    locationName: this.pipLocationName,\n                    locationPos: this.pipLocationPos\n                },\n                (result) => {\n                    const\n                        location = result.location,\n                        locationName = result.locationName;\n\n                    // Do not change anything if location is about the same\n                    if (this.pipLocationPos && this.pipLocationPos.type == 'Point' &&\n                        this.pipLocationPos.coordinates.length == 2 &&\n                        location && location.coordinates.length == 2 &&\n                        (this.pipLocationPos.coordinates[0] - location.coordinates[0]) < 0.0001 &&\n                        (this.pipLocationPos.coordinates[1] - location.coordinates[1]) < 0.0001 &&\n                        (locationName === this.pipLocationName)) {\n                        return;\n                    }\n\n                    this.pipLocationPos = location;\n                    this.pipLocationName = locationName;\n\n                    if (locationName === null && location !== null) {\n                        this.pipLocationName =\n                            '(' + result.location.coordinates[0] +\n                            ',' + result.location.coordinates[1] + ')';\n                    }\n                    this.pipChanged();\n                    this.mapContainer[0].focus();\n                }\n            );\n        };\n\n        public onMapClick($event) {\n            if (this.ngDisabled) return;\n\n            this.mapContainer[0].focus();\n            this.onSetLocation();\n            //$event.stopPropagation();\n        };\n\n        public onMapKeyPress($event) {\n            if (this.ngDisabled) return;\n\n            if ($event.keyCode == 13 || $event.keyCode == 32) {\n                this.onSetLocation();\n                //$event.stopPropagation();\n            }\n        };\n    }\n\n    const LocationEdit: ng.IComponentOptions = {\n        bindings: LocationEditBindings,\n        templateUrl: 'location_edit/LocationEdit.html',\n        controller: LocationEditController\n    }\n\n    angular\n        .module(\"pipLocationEdit\", ['pipLocationEditDialog'])\n        .component('pipLocationEdit', LocationEdit);\n\n}","declare let google: any;\n\n{\n    interface ILocationIpBindings {\n        [key: string]: any;\n\n        pipIpaddress: any;\n        pipExtraInfo: any;\n        pipRebind: any;\n    }\n\n    const LocationIpBindings: ILocationIpBindings = {\n        pipIpaddress: '<',\n        pipExtraInfo: '&',\n        pipRebind: '<'\n    }\n\n    interface IIpResponseInfo {\n        city: string;\n        regionCode: string | number;\n        regionName: string;\n        zipCode: string | number;\n        countryCode: string | number;\n        countryName: string;\n        latitude: string | number;\n        longitude: string | number;\n    }\n\n    class LocationIpBindingsChanges implements ng.IOnChangesObject, ILocationIpBindings {\n        [key: string]: any;\n\n        pipExtraInfo: any;\n\n        pipIpaddress: ng.IChangesObject < string > ;\n        pipRebind: ng.IChangesObject < boolean >\n    }\n\n    class LocationIpController implements ng.IController, ILocationIpBindings {\n        private mapContainer: JQuery;\n        private mapControl: any;\n\n        public pipExtraInfo: any;\n        public pipIpaddress: string;\n        public pipRebind: boolean;\n\n        constructor(\n            $element: JQuery,\n            private $http: ng.IHttpService\n        ) {\n            this.mapContainer = $element.children('.pip-location-container');\n            $element.addClass('pip-location-ip');\n            this.defineCoordinates();\n        }\n\n        public $onChanges(changes: LocationIpBindingsChanges) {\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\n\n            if (this.pipRebind === true) {\n                this.pipIpaddress = changes.pipIpaddress ? changes.pipIpaddress.currentValue : this.pipIpaddress;\n                this.defineCoordinates();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n        }\n\n        private generateMap(latitude, longitude) {\n            // Safeguard for bad coordinates\n            if (latitude == null || longitude == null) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            var coordinates = new google.maps.LatLng(\n                latitude,\n                longitude\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const\n                mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\n\n            new google.maps.Marker({\n                position: coordinates,\n                map: map\n            });\n        }\n\n        private defineCoordinates() {\n            const ipAddress = this.pipIpaddress;\n\n            if (ipAddress == '') {\n                this.clearMap();\n                return;\n            }\n\n            this.$http.get('https://freegeoip.net/json/' + ipAddress)\n                .success((response: IIpResponseInfo) => {\n                    if (response != null &&\n                        response.latitude != null &&\n                        response.longitude != null) {\n\n                        this.generateMap(response.latitude, response.longitude);\n\n                        if (this.pipExtraInfo) {\n                            const extraInfo = {\n                                city: response.city,\n                                regionCode: response.regionCode,\n                                region: response.regionName,\n                                zipCode: response.zipCode,\n                                countryCode: response.countryCode,\n                                country: response.countryName\n                            };\n                            this.pipExtraInfo({\n                                extraInfo: extraInfo\n                            });\n                        }\n                    } else {\n                        this.clearMap();\n                    }\n                })\n                .error((response) => {\n                    this.clearMap();\n                });\n        }\n    }\n\n    const LocationIp: ng.IComponentOptions = {\n        bindings: LocationIpBindings,\n        template: '<div class=\"pip-location-container\"></div>',\n        controller: LocationIpController\n    }\n\n    angular\n        .module(\"pipLocationIp\", [])\n        .component('pipLocationIp', LocationIp);\n}","{\n\n    interface ILocationMapBindings {\n        [key: string]: any;\n\n        pipLocationPos: any;\n        pipIconPath: any;\n        pipInteractive: any;\n        pipStretch: any;\n        pipRebind: any;\n    }\n\n    const LocationMapBindings: ILocationMapBindings = {\n        pipLocationPos: '<',\n        pipIconPath: '<',\n        pipInteractive: '<',\n        pipStretch: '<',\n        pipRebind: '<'\n    }\n\n    class LocationMapBindingsChanges implements ng.IOnChangesObject, ILocationMapBindings {\n        [key: string]: any;\n\n        pipLocationPos: ng.IChangesObject<any>;\n        pipIconPath: ng.IChangesObject<string>;\n        pipInteractive: ng.IChangesObject<boolean>;\n        pipStretch: ng.IChangesObject<boolean>;\n        pipRebind: ng.IChangesObject<boolean>;\n    }\n\n    class LocationMapController implements ng.IController, ILocationMapBindings {\n        public pipLocationPos: any;\n        public pipIconPath: string;\n        public pipInteractive: boolean;\n        public pipStretch: boolean;\n        public pipRebind: boolean;\n\n        private mapContainer: JQuery;\n        private mapControl: any = null;\n\n        constructor(\n            private $element: JQuery\n        ) {\n            this.mapContainer = $element.children('.pip-location-container');\n            $element.addClass('pip-location-map');\n        }\n\n        public $onChanges(changes: LocationMapBindingsChanges) {\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\n            this.pipInteractive = changes.pipInteractive ? changes.pipInteractive.currentValue || false : false;\n            this.pipStretch = changes.pipStretch ? changes.pipStretch.currentValue || false : false;\n\n            if (this.pipStretch === true)  {\n                this.mapContainer.addClass('stretch');\n            } else {\n                this.mapContainer.removeClass('stretch');\n            }\n\n            if (this.pipRebind === true) {\n                this.pipLocationPos = changes.pipLocationPos ? changes.pipLocationPos.currentValue : this.pipLocationPos;\n                this.pipIconPath = changes.pipIconPath ? changes.pipIconPath.currentValue : this.pipIconPath;\n\n                this.generateMap();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n        }\n\n        private checkLocation(loc) {\n            return !(loc == null || loc.coordinates == null || loc.coordinates.length < 0);\n        }\n\n        private determineCoordinates(loc) {\n            const point = new google.maps.LatLng(\n                loc.coordinates[0],\n                loc.coordinates[1]\n            );\n\n            point.fill = loc.fill;\n            point.stroke = loc.stroke;\n\n            return point;\n        }\n\n        private generateMap() {\n            const locations = this.pipLocationPos,\n                points = [],\n                interactive = this.pipInteractive || false;\n\n            // Safeguard for bad coordinates\n            if (this.checkLocation(locations) && !_.isArray(locations)) {\n                points.push(this.determineCoordinates(locations));\n            } else {\n                if (locations && _.isArray(locations) && locations.length > 0) {\n                    _.each(locations, (loc) => {\n                        if (this.checkLocation(loc)) {\n                            points.push(this.determineCoordinates(loc));\n                        }\n                    });\n                }\n            }\n\n            if (points.length === 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map\n            const mapOptions = {\n                    center: points[0],\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: interactive,\n                    draggable: interactive\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\n                bounds = new google.maps.LatLngBounds();\n\n            // Create markers\n            _.each(points, (point) => {\n                const icon = {\n                    path: this.pipIconPath,\n                    fillColor: point.fill || '#EF5350',\n                    fillOpacity: 1,\n                    scale: 1,\n                    strokeColor: point.stroke || 'white',\n                    strokeWeight: 5\n                };\n\n                new google.maps.Marker({\n                    position: point,\n                    map: map,\n                    icon: this.pipIconPath ? icon : null\n                });\n                bounds.extend(point);\n            });\n\n            // Auto-config of zoom and center\n            if (points.length > 1) map.fitBounds(bounds);\n        }\n    }\n\n    const LocationMap: ng.IComponentOptions = {\n        bindings: LocationMapBindings,\n        template: '<div class=\"pip-location-container\"></div>',\n        controller: LocationMapController\n    }\n\n    angular\n        .module(\"pipLocationMap\", [])\n        .component('pipLocationMap', LocationMap);\n}","(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location/Location.html',\n    '<div class=\"pip-location-name location-collapse\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"!$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"><md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon><span class=\"pip-location-text\">{{$ctrl.pipLocationName}}</span></div><md-button class=\"pip-location-name\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"$ctrl.pipCollapse\" ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"><div class=\"layout-align-start-center layout-row w-stretch\"><md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon><span class=\"pip-location-text flex\">{{$ctrl.pipLocationName}}</span><md-icon md-svg-icon=\"icons:triangle-down\" class=\"flex-fixed\" ng-show=\"!$ctrl.showMap\"></md-icon><md-icon md-svg-icon=\"icons:triangle-up\" class=\"flex-fixed\" ng-show=\"$ctrl.showMap\"></md-icon></div></md-button><div class=\"pip-location-container\"></div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_dialog/LocationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-location-edit-dialog layout-column\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-header layout-column layout-align-start-start\"><md-progress-linear ng-show=\"$ctrl.transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h3 class=\"flex\">{{ \\'LOCATION_SET_LOCATION\\' | translate }}</h3></div><div class=\"pip-footer\"><div class=\"layout-row layout-align-start-center\"><md-button class=\"md-accent\" ng-click=\"$ctrl.onAddPin()\" ng-show=\"$ctrl.locationPos == null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_ADD_PIN\\' }}\">{{ ::\\'LOCATION_ADD_PIN\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onRemovePin()\" ng-show=\"$ctrl.locationPos != null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_REMOVE_PIN\\' }}\">{{ ::\\'LOCATION_REMOVE_PIN\\' | translate }}</md-button></div><div class=\"flex\"></div><div class=\"layout-row layout-align-end-center\"><md-button ng-click=\"$ctrl.onCancel()\" aria-label=\"{{ ::\\'CANCEL\\' }}\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'APPLY\\' }}\">{{ ::\\'APPLY\\' | translate }}</md-button></div></div><div class=\"pip-body\"><div class=\"pip-location-container\"></div><md-button class=\"md-icon-button md-fab pip-zoom-in\" ng-click=\"$ctrl.onZoomIn()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_IN\\' }}\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-zoom-out\" ng-click=\"$ctrl.onZoomOut()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_OUT\\' }}\"><md-icon md-svg-icon=\"icons:minus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-set-location\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"{{ ::\\'LOCATION_SET_LOCATION\\' }}\" ng-show=\"supportSet\" ng-disabled=\"transaction.busy()\"><md-icon md-svg-icon=\"icons:target\"></md-icon></md-button></div></md-dialog>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_edit/LocationEdit.html',\n    '<md-input-container class=\"md-block\"><label>{{ \\'LOCATION\\' | translate }}</label> <input ng-model=\"$ctrl.pipLocationName\" ng-disabled=\"$ctrl.ngDisabled\"></md-input-container><div class=\"pip-location-empty\" layout=\"column\" layout-align=\"center center\"><md-button class=\"md-raised\" ng-disabled=\"$ctrl.ngDisabled\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"LOCATION_ADD_LOCATION\"><span class=\"icon-location\"></span> {{\\'LOCATION_ADD_LOCATION\\' | translate }}</md-button></div><div class=\"pip-location-container\" tabindex=\"{{ $ctrl.ngDisabled ? -1 : 0 }}\" ng-click=\"$ctrl.onMapClick($event)\" ng-keypress=\"$ctrl.onMapKeyPress($event)\"></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-locations-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvZGVwZW5kZW5jaWVzL1RyYW5zbGF0ZUZpbHRlci50cyIsInNyYy9pbmRleC50cyIsInNyYy9sb2NhdGlvbi9Mb2NhdGlvbi50cyIsInNyYy9sb2NhdGlvbl9kaWFsb2cvTG9jYXRpb25EaWFsb2cudHMiLCJzcmMvbG9jYXRpb25fZGlhbG9nL0xvY2F0aW9uRGlhbG9nUGFyYW1zLnRzIiwic3JjL2xvY2F0aW9uX2RpYWxvZy9pbmRleC50cyIsInNyYy9sb2NhdGlvbl9lZGl0L0xvY2F0aW9uRWRpdC50cyIsInNyYy9sb2NhdGlvbl9pcC9Mb2NhdGlvbklwLnRzIiwic3JjL2xvY2F0aW9uX21hcC9sb2NhdGlvbk1hcC50cyIsInRlbXAvcGlwLXdlYnVpLWxvY2F0aW9ucy1odG1sLm1pbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBLENBQUM7SUFDRyx5QkFBeUIsU0FBUztRQUM5QixJQUFJLFlBQVksR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQztjQUMxQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUUzQyxNQUFNLENBQUMsVUFBVSxHQUFHO1lBQ2hCLE1BQU0sQ0FBQyxZQUFZLEdBQUksWUFBWSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLEdBQUcsR0FBRyxDQUFDO1FBQ3BFLENBQUMsQ0FBQTtJQUNMLENBQUM7SUFFRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLHdCQUF3QixFQUFFLEVBQUUsQ0FBQztTQUNwQyxNQUFNLENBQUMsV0FBVyxFQUFFLGVBQWUsQ0FBQyxDQUFDO0FBQzlDLENBQUM7OztBQ2JBLE9BQU8sQ0FBQyxNQUFNLENBQUMsY0FBYyxFQUFFO0lBQzVCLGFBQWE7SUFDYixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLHVCQUF1QjtJQUN2QixpQkFBaUI7SUFDakIsd0JB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aUJBQ3ZDLENBQUMsQ0FBQztnQkFDSCxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3pCLENBQUMsQ0FBQyxDQUFDO1lBR0gsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7Z0JBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNqRCxDQUFDO1FBQ0wsNEJBQUM7SUFBRCxDQXpIQSxBQXlIQyxJQUFBO0lBRUQsSUFBTSxXQUFXLEdBQXlCO1FBQ3RDLFFBQVEsRUFBRSxtQkFBbUI7UUFDN0IsUUFBUSxFQUFFLDRDQUE0QztRQUN0RCxVQUFVLEVBQUUscUJBQXFCO0tBQ3BDLENBQUE7SUFFRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLGdCQUFnQixFQUFFLEVBQUUsQ0FBQztTQUM1QixTQUFTLENBQUMsZ0JBQWdCLEVBQUUsV0FBVyxDQUFDLENBQUM7QUFDbEQsQ0FBQzs7O0FDbEtEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwie1xuICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZUZpbHRlcigkaW5qZWN0b3IpIHtcbiAgICAgICAgbGV0IHBpcFRyYW5zbGF0ZSA9ICRpbmplY3Rvci5oYXMoJ3BpcFRyYW5zbGF0ZScpIFxuICAgICAgICAgICAgPyAkaW5qZWN0b3IuZ2V0KCdwaXBUcmFuc2xhdGUnKSA6IG51bGw7XG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIHJldHVybiBwaXBUcmFuc2xhdGUgID8gcGlwVHJhbnNsYXRlLnRyYW5zbGF0ZShrZXkpIHx8IGtleSA6IGtleTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZSgncGlwTG9jYXRpb25zLlRyYW5zbGF0ZScsIFtdKVxuICAgICAgICAuZmlsdGVyKCd0cmFuc2xhdGUnLCB0cmFuc2xhdGVGaWx0ZXIpO1xufSIsIu+7v2FuZ3VsYXIubW9kdWxlKCdwaXBMb2NhdGlvbnMnLCBbXG4gICAgJ3BpcExvY2F0aW9uJyxcbiAgICAncGlwTG9jYXRpb25NYXAnLFxuICAgICdwaXBMb2NhdGlvbklwJyxcbiAgICAncGlwTG9jYXRpb25FZGl0RGlhbG9nJyxcbiAgICAncGlwTG9jYXRpb25FZGl0JyxcbiAgICAncGlwTG9jYXRpb25zLlRyYW5zbGF0ZSdcbl0pOyIsIntcbiAgICBpbnRlcmZhY2UgSUxvY2F0aW9uQmluZGluZ3Mge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG5cbiAgICAgICAgcGlwTG9jYXRpb25OYW1lOiBhbnk7XG4gICAgICAgIHBpcExvY2F0aW9uUG9zOiBhbnk7XG4gICAgICAgIHBpcFNob3dMb2NhdGlvbkljb246IGFueTtcbiAgICAgICAgcGlwQ29sbGFwc2U6IGFueTtcbiAgICAgICAgcGlwUmViaW5kOiBhbnk7XG4gICAgICAgIHBpcERpc2FibGVkOiBhbnk7XG4gICAgICAgIHBpcExvY2F0aW9uUmVzaXplOiBhbnk7XG4gICAgfVxuXG4gICAgY29uc3QgTG9jYXRpb25CaW5kaW5nczogSUxvY2F0aW9uQmluZGluZ3MgPSB7XG4gICAgICAgIHBpcExvY2F0aW9uTmFtZTogJzwnLFxuICAgICAgICBwaXBMb2NhdGlvblBvczogJzwnLFxuICAgICAgICBwaXBTaG93TG9jYXRpb25JY29uOiAnPCcsXG4gICAgICAgIHBpcENvbGxhcHNlOiAnPCcsXG4gICAgICAgIHBpcFJlYmluZDogJzwnLFxuICAgICAgICBwaXBEaXNhYmxlZDogJzwnLFxuICAgICAgICBwaXBMb2NhdGlvblJlc2l6ZTogJyYnXG4gICAgfVxuXG4gICAgY2xhc3MgTG9jYXRpb25CaW5kaW5nc0NoYW5nZXMgaW1wbGVtZW50cyBuZy5JT25DaGFuZ2VzT2JqZWN0LCBJTG9jYXRpb25CaW5kaW5ncyB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IGFueTtcblxuICAgICAgICBwaXBMb2NhdGlvbk5hbWU6IG5nLklDaGFuZ2VzT2JqZWN0IDwgc3RyaW5nID4gO1xuICAgICAgICBwaXBMb2NhdGlvblBvczogbmcuSUNoYW5nZXNPYmplY3QgPCBhbnkgPiA7XG4gICAgICAgIHBpcFNob3dMb2NhdGlvbkljb246IG5nLklDaGFuZ2VzT2JqZWN0IDwgYm9vbGVhbiA+IDtcbiAgICAgICAgcGlwQ29sbGFwc2U6IG5nLklDaGFuZ2VzT2JqZWN0IDwgYm9vbGVhbiA+IDtcbiAgICAgICAgcGlwUmViaW5kOiBuZy5JQ2hhbmdlc09iamVjdCA8IGJvb2xlYW4gPiA7XG4gICAgICAgIHBpcERpc2FibGVkOiBuZy5JQ2hhbmdlc09iamVjdCA8IGJvb2xlYW4gPiA7XG5cbiAgICAgICAgcGlwTG9jYXRpb25SZXNpemU6IGFueTtcbiAgICB9XG5cbiAgICBjbGFzcyBMb2NhdGlvbkNvbnRyb2xsZXIgaW1wbGVtZW50cyBuZy5JQ29udHJvbGxlciwgSUxvY2F0aW9uQmluZGluZ3Mge1xuICAgICAgICBwdWJsaWMgcGlwTG9jYXRpb25OYW1lOiBzdHJpbmc7XG4gICAgICAgIHB1YmxpYyBwaXBMb2NhdGlvblBvczogYW55O1xuICAgICAgICBwdWJsaWMgcGlwU2hvd0xvY2F0aW9uSWNvbjogYm9vbGVhbjtcbiAgICAgICAgcHVibGljIHBpcENvbGxhcHNlOiBib29sZWFuO1xuICAgICAgICBwdWJsaWMgcGlwUmViaW5kOiBib29sZWFuO1xuICAgICAgICBwdWJsaWMgcGlwRGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgICAgIHB1YmxpYyBzaG93TWFwOiBib29sZWFuID0gdHJ1ZTtcbiAgICAgICAgcHVibGljIHBpcExvY2F0aW9uUmVzaXplOiBGdW5jdGlvbjtcblxuICAgICAgICBwcml2YXRlIG5hbWU6IEpRdWVyeTtcbiAgICAgICAgcHJpdmF0ZSBtYXBDb250YWluZXI6IEpRdWVyeTtcbiAgICAgICAgcHJpdmF0ZSBtYXBDb250cm9sOiBKUXVlcnk7XG5cbiAgICAgICAgY29uc3RydWN0b3IoXG4gICAgICAgICAgICBwcml2YXRlICRlbGVtZW50OiBKUXVlcnksXG4gICAgICAgICAgICBwcml2YXRlICR0aW1lb3V0OiBuZy5JVGltZW91dFNlcnZpY2UsXG4gICAgICAgICAgICBwcml2YXRlICRzY29wZTogbmcuSVNjb3BlXG4gICAgICAgICkge1xuICAgICAgICAgICAgXCJuZ0luamVjdFwiO1xuICAgICAgICAgICAgLy8gQWRkIGNsYXNzXG4gICAgICAgICAgICAkZWxlbWVudC5hZGRDbGFzcygncGlwLWxvY2F0aW9uJyk7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgJHBvc3RMaW5rKCkge1xuICAgICAgICAgICAgdGhpcy4kdGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5uYW1lID0gdGhpcy4kZWxlbWVudC5maW5kKCcucGlwLWxvY2F0aW9uLW5hbWUnKTtcbiAgICAgICAgICAgICAgICB0aGlzLm1hcENvbnRhaW5lciA9IHRoaXMuJGVsZW1lbnQuZmluZCgnLnBpcC1sb2NhdGlvbi1jb250YWluZXInKTtcblxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnBpcENvbGxhcHNlID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWFwQ29udGFpbmVyLmhpZGUoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93TWFwID0gZmFsc2U7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gUHJvY2VzcyB1c2VyIGNsaWNrXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubmFtZS5jbGljaygoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucGlwRGlzYWJsZWQpIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2hvd01hcCA9ICF0aGlzLnNob3dNYXA7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1hcENvbnRhaW5lclt0aGlzLnNob3dNYXAgPyAnc2hvdycgOiAnaGlkZSddKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zaG93TWFwKSB0aGlzLmdlbmVyYXRlTWFwKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuJHNjb3BlLiQkcGhhc2UpIHRoaXMuJHNjb3BlLiRhcHBseSgpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLnJlZHJhd01hcCgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIHJlZHJhd01hcCgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5tYXBDb250YWluZXIpIHJldHVybjtcblxuICAgICAgICAgICAgLy8gVmlzdWFsaXplIG1hcFxuICAgICAgICAgICAgaWYgKHRoaXMucGlwTG9jYXRpb25Qb3MgJiYgdGhpcy5zaG93TWFwID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZU1hcCgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsZWFyTWFwKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgJG9uQ2hhbmdlcyhjaGFuZ2VzOiBMb2NhdGlvbkJpbmRpbmdzQ2hhbmdlcykge1xuICAgICAgICAgICAgdGhpcy5waXBSZWJpbmQgPSBjaGFuZ2VzLnBpcFJlYmluZCBcbiAgICAgICAgICAgICAgICA/IGNoYW5nZXMucGlwUmViaW5kLmN1cnJlbnRWYWx1ZSB8fCBmYWxzZSA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5waXBTaG93TG9jYXRpb25JY29uID0gY2hhbmdlcy5waXBTaG93TG9jYXRpb25JY29uIFxuICAgICAgICAgICAgICAgID8gY2hhbmdlcy5waXBTaG93TG9jYXRpb25JY29uLmN1cnJlbnRWYWx1ZSB8fCBmYWxzZSA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5waXBDb2xsYXBzZSA9IGNoYW5nZXMucGlwQ29sbGFwc2UgXG4gICAgICAgICAgICAgICAgPyBjaGFuZ2VzLnBpcENvbGxhcHNlLmN1cnJlbnRWYWx1ZSB8fCBmYWxzZSA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5waXBEaXNhYmxlZCA9IGNoYW5nZXMucGlwRGlzYWJsZWQgXG4gICAgICAgICAgICAgICAgPyBjaGFuZ2VzLnBpcERpc2FibGVkLmN1cnJlbnRWYWx1ZSB8fCBmYWxzZSA6IGZhbHNlO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5waXBSZWJpbmQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBpcExvY2F0aW9uTmFtZSA9IGNoYW5nZXMucGlwTG9jYXRpb25OYW1lIFxuICAgICAgICAgICAgICAgICAgICA/IGNoYW5nZXMucGlwTG9jYXRpb25OYW1lLmN1cnJlbnRWYWx1ZSA6IG51bGw7XG4gICAgICAgICAgICAgICAgdGhpcy5waXBMb2NhdGlvblBvcyA9IGNoYW5nZXMucGlwTG9jYXRpb25Qb3MgXG4gICAgICAgICAgICAgICAgICAgID8gY2hhbmdlcy5waXBMb2NhdGlvblBvcy5jdXJyZW50VmFsdWUgOiBudWxsO1xuICAgICAgICAgICAgICAgIHRoaXMucmVkcmF3TWFwKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGNsZWFyTWFwKCkge1xuICAgICAgICAgICAgLy8gUmVtb3ZlIG1hcCBjb250cm9sXG4gICAgICAgICAgICBpZiAodGhpcy5tYXBDb250cm9sKSB0aGlzLm1hcENvbnRyb2wucmVtb3ZlKCk7XG4gICAgICAgICAgICB0aGlzLm1hcENvbnRyb2wgPSBudWxsO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXIuaGlkZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBnZW5lcmF0ZU1hcCgpIHtcbiAgICAgICAgICAgIGNvbnN0IGxvY2F0aW9uID0gdGhpcy5waXBMb2NhdGlvblBvcztcblxuICAgICAgICAgICAgLy8gU2FmZWd1YXJkIGZvciBiYWQgY29vcmRpbmF0ZXNcbiAgICAgICAgICAgIGlmICh0aGlzLnNob3dNYXAgPT09IGZhbHNlIFxuICAgICAgICAgICAgICAgIHx8IGxvY2F0aW9uID09IG51bGwgXG4gICAgICAgICAgICAgICAgfHwgbG9jYXRpb24uY29vcmRpbmF0ZXMgPT0gbnVsbCBcbiAgICAgICAgICAgICAgICB8fCBsb2NhdGlvbi5jb29yZGluYXRlcy5sZW5ndGggPCAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhck1hcCgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gRGV0ZXJtaW5lIG1hcCBjb29yZGluYXRlc1xuICAgICAgICAgICAgY29uc3QgY29vcmRpbmF0ZXMgPSBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKFxuICAgICAgICAgICAgICAgIGxvY2F0aW9uLmNvb3JkaW5hdGVzWzBdLFxuICAgICAgICAgICAgICAgIGxvY2F0aW9uLmNvb3JkaW5hdGVzWzFdXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAvLyBDbGVhbiB1cCB0aGUgY29udHJvbFxuICAgICAgICAgICAgaWYgKHRoaXMubWFwQ29udHJvbCkgdGhpcy5tYXBDb250cm9sLnJlbW92ZSgpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250cm9sID0gJCgnPGRpdj48L2Rpdj4nKTtcbiAgICAgICAgICAgIHRoaXMubWFwQ29udGFpbmVyLnNob3coKTtcbiAgICAgICAgICAgIHRoaXMubWFwQ29udHJvbC5hcHBlbmRUbyh0aGlzLm1hcENvbnRhaW5lcik7XG5cbiAgICAgICAgICAgIC8vIENyZWF0ZSB0aGUgbWFwIHdpdGggcG9pbnQgbWFya2VyXG4gICAgICAgICAgICBjb25zdFxuICAgICAgICAgICAgICAgIG1hcE9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGNlbnRlcjogY29vcmRpbmF0ZXMsXG4gICAgICAgICAgICAgICAgICAgIHpvb206IDEyLFxuICAgICAgICAgICAgICAgICAgICBtYXBUeXBlSWQ6IGdvb2dsZS5tYXBzLk1hcFR5cGVJZC5ST0FETUFQLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlRGVmYXVsdFVJOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlRG91YmxlQ2xpY2tab29tOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBzY3JvbGx3aGVlbDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGRyYWdnYWJsZTogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAodGhpcy5tYXBDb250cm9sWzBdLCBtYXBPcHRpb25zKTtcblxuICAgICAgICAgICAgbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGNvb3JkaW5hdGVzLFxuICAgICAgICAgICAgICAgIG1hcDogbWFwXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBjb25zdCBMb2NhdGlvbkNvbXBvbmVudDogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XG4gICAgICAgIGJpbmRpbmdzOiBMb2NhdGlvbkJpbmRpbmdzLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ2xvY2F0aW9uL0xvY2F0aW9uLmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiBMb2NhdGlvbkNvbnRyb2xsZXJcbiAgICB9XG5cbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoXCJwaXBMb2NhdGlvblwiLCBbXSlcbiAgICAgICAgLmNvbXBvbmVudCgncGlwTG9jYXRpb24nLCBMb2NhdGlvbkNvbXBvbmVudCk7XG59IiwiaW1wb3J0IHsgSUxvY2F0aW9uRGlhbG9nU2VydmljZSB9IGZyb20gJy4vSUxvY2F0aW9uRGlhbG9nU2VydmljZSc7XG5pbXBvcnQgeyBMb2NhdGlvbkRpYWxvZ1BhcmFtcyB9IGZyb20gJy4vTG9jYXRpb25EaWFsb2dQYXJhbXMnO1xuXG57XG4gICAgY2xhc3MgTG9jYXRpb25FZGl0RGlhbG9nQ29udHJvbGxlciB7XG4gICAgICAgIHByaXZhdGUgX21hcCA9IG51bGw7XG4gICAgICAgIHByaXZhdGUgX21hcmtlciA9IG51bGw7XG5cbiAgICAgICAgcHVibGljIHRoZW1lOiBzdHJpbmc7XG4gICAgICAgIHB1YmxpYyBsb2NhdGlvblBvcztcbiAgICAgICAgcHVibGljIGxvY2F0aW9uTmFtZTtcbiAgICAgICAgcHVibGljIHN1cHBvcnRTZXQ6IGJvb2xlYW47XG5cbiAgICAgICAgY29uc3RydWN0b3IoXG4gICAgICAgICAgICBwcml2YXRlICRzY29wZTogbmcuSVNjb3BlLFxuICAgICAgICAgICAgJHJvb3RTY29wZTogbmcuSVJvb3RTY29wZVNlcnZpY2UsXG4gICAgICAgICAgICAkdGltZW91dDogYW5ndWxhci5JVGltZW91dFNlcnZpY2UsXG4gICAgICAgICAgICBwcml2YXRlICRtZERpYWxvZzogYW5ndWxhci5tYXRlcmlhbC5JRGlhbG9nU2VydmljZSxcbiAgICAgICAgICAgIGxvY2F0aW9uUG9zOiBhbnksXG4gICAgICAgICAgICBsb2NhdGlvbk5hbWU6IHN0cmluZ1xuICAgICAgICApIHtcbiAgICAgICAgICAgIHRoaXMudGhlbWUgPSAkcm9vdFNjb3BlWyckdGhlbWUnXTtcbiAgICAgICAgICAgIHRoaXMubG9jYXRpb25Qb3MgPSBsb2NhdGlvblBvcyAmJiBsb2NhdGlvblBvcy50eXBlID09ICdQb2ludCcgJiZcbiAgICAgICAgICAgICAgICBsb2NhdGlvblBvcy5jb29yZGluYXRlcyAmJiBsb2NhdGlvblBvcy5jb29yZGluYXRlcy5sZW5ndGggPT0gMiA/XG4gICAgICAgICAgICAgICAgbG9jYXRpb25Qb3MgOiBudWxsO1xuICAgICAgICAgICAgdGhpcy5sb2NhdGlvbk5hbWUgPSBsb2NhdGlvbk5hbWU7XG4gICAgICAgICAgICB0aGlzLnN1cHBvcnRTZXQgPSBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24gIT0gbnVsbDtcblxuICAgICAgICAgICAgLy8gV2FpdCB1bnRpbCBkaWFsb2cgaXMgaW5pdGlhbGl6ZWRcbiAgICAgICAgICAgICR0aW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgbWFwQ29udGFpbmVyID0gJCgnLnBpcC1sb2NhdGlvbi1lZGl0LWRpYWxvZyAucGlwLWxvY2F0aW9uLWNvbnRhaW5lcicpO1xuICAgICAgICAgICAgICAgIC8vIENhbGN1bGF0ZSBjb29yZGluYXRlIG9mIHRoZSBjZW50ZXJcbiAgICAgICAgICAgICAgICBsZXQgY29vcmRpbmF0ZXMgPSB0aGlzLmxvY2F0aW9uUG9zID9cbiAgICAgICAgICAgICAgICAgICAgbmV3IGdvb2dsZS5tYXBzLkxhdExuZyhcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubG9jYXRpb25Qb3MuY29vcmRpbmF0ZXNbMF0sXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmxvY2F0aW9uUG9zLmNvb3JkaW5hdGVzWzFdXG4gICAgICAgICAgICAgICAgICAgICkgOiBudWxsO1xuXG4gICAgICAgICAgICAgICAgLy8gQ3JlYXRlIHRoZSBtYXAgd2l0aCBwb2ludCBtYXJrZXJcbiAgICAgICAgICAgICAgICBjb25zdCBtYXBPcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgICBjZW50ZXI6IG5ldyBnb29nbGUubWFwcy5MYXRMbmcoMCwgMCksXG4gICAgICAgICAgICAgICAgICAgIHpvb206IDEsXG4gICAgICAgICAgICAgICAgICAgIG1hcFR5cGVJZDogZ29vZ2xlLm1hcHMuTWFwVHlwZUlkLlJPQURNQVAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVEZWZhdWx0VUk6IHRydWVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGNvb3JkaW5hdGVzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgbWFwT3B0aW9ucy5jZW50ZXIgPSBjb29yZGluYXRlcztcbiAgICAgICAgICAgICAgICAgICAgbWFwT3B0aW9ucy56b29tID0gMTI7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdGhpcy5fbWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChtYXBDb250YWluZXJbMF0sIG1hcE9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIHRoaXMuX21hcmtlciA9IHRoaXMuY3JlYXRlTWFya2VyKGNvb3JkaW5hdGVzKTtcblxuICAgICAgICAgICAgICAgIC8vIEZpeCByZXNpemluZyBpc3N1ZVxuICAgICAgICAgICAgICAgICR0aW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZ29vZ2xlLm1hcHMuZXZlbnQudHJpZ2dlcih0aGlzLl9tYXAsICdyZXNpemUnKTtcbiAgICAgICAgICAgICAgICB9LCAxMDAwKTtcbiAgICAgICAgICAgIH0sIDApO1xuXG4gICAgICAgICAgICAkc2NvcGUuJG9uKCdwaXBMYXlvdXRSZXNpemVkJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9tYXAgPT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgIGdvb2dsZS5tYXBzLmV2ZW50LnRyaWdnZXIodGhpcy5fbWFwLCAncmVzaXplJyk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBjcmVhdGVNYXJrZXIoY29vcmRpbmF0ZXMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9tYXJrZXIpIHRoaXMuX21hcmtlci5zZXRNYXAobnVsbCk7XG4gICAgICAgICAgICBpZiAoY29vcmRpbmF0ZXMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9tYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGNvb3JkaW5hdGVzLFxuICAgICAgICAgICAgICAgICAgICBtYXA6IHRoaXMuX21hcCxcbiAgICAgICAgICAgICAgICAgICAgZHJhZ2dhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBhbmltYXRpb246IGdvb2dsZS5tYXBzLkFuaW1hdGlvbi5EUk9QXG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICBsZXQgdGhpc01hcmtlciA9IHRoaXMuX21hcmtlcjtcbiAgICAgICAgICAgICAgICBnb29nbGUubWFwcy5ldmVudC5hZGRMaXN0ZW5lcih0aGlzTWFya2VyLCAnZHJhZ2VuZCcsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNvb3JkaW5hdGVzID0gdGhpc01hcmtlci5nZXRQb3NpdGlvbigpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUxvY2F0aW9uKGNvb3JkaW5hdGVzLCBudWxsKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbWFya2VyID0gbnVsbDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21hcmtlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgY2hhbmdlTG9jYXRpb24oY29vcmRpbmF0ZXMsIHRpZCkge1xuICAgICAgICAgICAgdGhpcy5sb2NhdGlvblBvcyA9IHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnUG9pbnQnLFxuICAgICAgICAgICAgICAgIGNvb3JkaW5hdGVzOiBbY29vcmRpbmF0ZXMubGF0KCksIGNvb3JkaW5hdGVzLmxuZygpXVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMubG9jYXRpb25OYW1lID0gbnVsbDtcbiAgICAgICAgICAgIC8vIFJlYWQgYWRkcmVzc1xuICAgICAgICAgICAgY29uc3QgZ2VvY29kZXIgPSBuZXcgZ29vZ2xlLm1hcHMuR2VvY29kZXIoKTtcbiAgICAgICAgICAgIGdlb2NvZGVyLmdlb2NvZGUoe1xuICAgICAgICAgICAgICAgIGxhdExuZzogY29vcmRpbmF0ZXNcbiAgICAgICAgICAgIH0sIChyZXN1bHRzLCBzdGF0dXMpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBQcm9jZXNzIHBvc2l0aXZlIHJlc3BvbnNlXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdHMgJiYgcmVzdWx0cy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9jYXRpb25OYW1lID0gcmVzdWx0c1swXS5mb3JtYXR0ZWRfYWRkcmVzcztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS4kYXBwbHkoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgLy8gRGVzY3JpYmUgdXNlciBhY3Rpb25zXG4gICAgICAgIHB1YmxpYyBvbkFkZFBpbigpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9tYXAgPT09IG51bGwpIHJldHVybjtcblxuICAgICAgICAgICAgY29uc3QgY29vcmRpbmF0ZXMgPSB0aGlzLl9tYXAuZ2V0Q2VudGVyKCk7XG4gICAgICAgICAgICB0aGlzLl9tYXJrZXIgPSB0aGlzLmNyZWF0ZU1hcmtlcihjb29yZGluYXRlcyk7XG4gICAgICAgICAgICB0aGlzLmNoYW5nZUxvY2F0aW9uKGNvb3JkaW5hdGVzLCBudWxsKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBvblJlbW92ZVBpbigpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9tYXAgPT09IG51bGwpIHJldHVybjtcbiAgICAgICAgICAgIHRoaXMuX21hcmtlciA9IHRoaXMuY3JlYXRlTWFya2VyKG51bGwpO1xuICAgICAgICAgICAgdGhpcy5sb2NhdGlvblBvcyA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLmxvY2F0aW9uTmFtZSA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgb25ab29tSW4oKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fbWFwID09PSBudWxsKSByZXR1cm47XG4gICAgICAgICAgICBjb25zdCB6b29tID0gdGhpcy5fbWFwLmdldFpvb20oKTtcbiAgICAgICAgICAgIHRoaXMuX21hcC5zZXRab29tKHpvb20gKyAxKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBvblpvb21PdXQoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fbWFwID09PSBudWxsKSByZXR1cm47XG4gICAgICAgICAgICBjb25zdCB6b29tID0gdGhpcy5fbWFwLmdldFpvb20oKTtcbiAgICAgICAgICAgIHRoaXMuX21hcC5zZXRab29tKHpvb20gPiAxID8gem9vbSAtIDEgOiB6b29tKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBvblNldExvY2F0aW9uID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX21hcCA9PT0gbnVsbCkgcmV0dXJuO1xuXG4gICAgICAgICAgICBuYXZpZ2F0b3IuZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKFxuICAgICAgICAgICAgICAgIChwb3NpdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjb29yZGluYXRlcyA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmcocG9zaXRpb24uY29vcmRzLmxhdGl0dWRlLCBwb3NpdGlvbi5jb29yZHMubG9uZ2l0dWRlKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWFya2VyID0gdGhpcy5jcmVhdGVNYXJrZXIoY29vcmRpbmF0ZXMpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXAuc2V0Q2VudGVyKGNvb3JkaW5hdGVzKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWFwLnNldFpvb20oMTIpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYW5nZUxvY2F0aW9uKGNvb3JkaW5hdGVzLCBudWxsKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuJGFwcGx5KCk7XG4gICAgICAgICAgICAgICAgfSwge1xuICAgICAgICAgICAgICAgICAgICBtYXhpbXVtQWdlOiAwLFxuICAgICAgICAgICAgICAgICAgICBlbmFibGVIaWdoQWNjdXJhY3k6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDUwMDBcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBvbkNhbmNlbCgpOiB2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJG1kRGlhbG9nLmNhbmNlbCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIG9uQXBwbHkoKTogdm9pZCB7XG4gICAgICAgICAgICB0aGlzLiRtZERpYWxvZy5oaWRlKHtcbiAgICAgICAgICAgICAgICBsb2NhdGlvbjogdGhpcy5sb2NhdGlvblBvcyxcbiAgICAgICAgICAgICAgICBsb2NhdGlvblBvczogdGhpcy5sb2NhdGlvblBvcyxcbiAgICAgICAgICAgICAgICBsb2NhdGlvbk5hbWU6IHRoaXMubG9jYXRpb25OYW1lXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuICAgIFxuICAgIGNsYXNzIExvY2F0aW9uRGlhbG9nU2VydmljZSBpbXBsZW1lbnRzIElMb2NhdGlvbkRpYWxvZ1NlcnZpY2Uge1xuICAgICAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgICAgIHByaXZhdGUgJG1kRGlhbG9nOiBhbmd1bGFyLm1hdGVyaWFsLklEaWFsb2dTZXJ2aWNlXG4gICAgICAgICkge31cblxuICAgICAgICBwdWJsaWMgc2hvdyhwYXJhbXM6IExvY2F0aW9uRGlhbG9nUGFyYW1zLCBzdWNjZXNzQ2FsbGJhY2s/LCBjYW5jZWxDYWxsYmFjaz8pIHtcbiAgICAgICAgICAgIHRoaXMuJG1kRGlhbG9nLnNob3coe1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyOiBMb2NhdGlvbkVkaXREaWFsb2dDb250cm9sbGVyLFxuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICckY3RybCcsXG4gICAgICAgICAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnbG9jYXRpb25fZGlhbG9nL0xvY2F0aW9uRGlhbG9nLmh0bWwnLFxuICAgICAgICAgICAgICAgICAgICBsb2NhbHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uTmFtZTogcGFyYW1zLmxvY2F0aW9uTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uUG9zOiBwYXJhbXMubG9jYXRpb25Qb3NcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgY2xpY2tPdXRzaWRlVG9DbG9zZTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzc0NhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzQ2FsbGJhY2socmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhbmNlbENhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYW5jZWxDYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBMb2NhdGlvbkRpYWxvZ1J1biA9IGZ1bmN0aW9uKCRpbmplY3RvcjogbmcuYXV0by5JSW5qZWN0b3JTZXJ2aWNlKSB7XG4gICAgICAgIGxldCBwaXBUcmFuc2xhdGUgPSAkaW5qZWN0b3IuaGFzKCdwaXBUcmFuc2xhdGUnKSA/ICRpbmplY3Rvci5nZXQoJ3BpcFRyYW5zbGF0ZScpIDogbnVsbDtcblxuICAgICAgICBpZiAocGlwVHJhbnNsYXRlKSB7XG4gICAgICAgICAgICAoIDwgYW55ID4gcGlwVHJhbnNsYXRlKS5zZXRUcmFuc2xhdGlvbnMoJ2VuJywge1xuICAgICAgICAgICAgICAgICdMT0NBVElPTl9BRERfTE9DQVRJT04nOiAnQWRkIGxvY2F0aW9uJyxcbiAgICAgICAgICAgICAgICAnTE9DQVRJT05fU0VUX0xPQ0FUSU9OJzogJ1NldCBsb2NhdGlvbicsXG4gICAgICAgICAgICAgICAgJ0xPQ0FUSU9OX0FERF9QSU4nOiAnQWRkIHBpbicsXG4gICAgICAgICAgICAgICAgJ0xPQ0FUSU9OX1JFTU9WRV9QSU4nOiAnUmVtb3ZlIHBpbidcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgKCA8IGFueSA+IHBpcFRyYW5zbGF0ZSkuc2V0VHJhbnNsYXRpb25zKCdydScsIHtcbiAgICAgICAgICAgICAgICAnTE9DQVRJT05fQUREX0xPQ0FUSU9OJzogJ9CU0L7QsdCw0LLQuNGC0Ywg0LzQtdGB0YLQvtC/0L7Qu9C+0LbQtdC90LjQtScsXG4gICAgICAgICAgICAgICAgJ0xPQ0FUSU9OX1NFVF9MT0NBVElPTic6ICfQntC/0YDQtdC00LXQu9C40YLRjCDQv9C+0LvQvtC20LXQvdC40LUnLFxuICAgICAgICAgICAgICAgICdMT0NBVElPTl9BRERfUElOJzogJ9CU0L7QsdCw0LLQuNGC0Ywg0YLQvtGH0LrRgycsXG4gICAgICAgICAgICAgICAgJ0xPQ0FUSU9OX1JFTU9WRV9QSU4nOiAn0KPQsdGA0LDRgtGMINGC0L7Rh9C60YMnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuXG4gICAgYW5ndWxhclxuICAgICAgICAubW9kdWxlKCdwaXBMb2NhdGlvbkVkaXREaWFsb2cnKVxuICAgICAgICAucnVuKExvY2F0aW9uRGlhbG9nUnVuKVxuICAgICAgICAuc2VydmljZSgncGlwTG9jYXRpb25FZGl0RGlhbG9nJywgTG9jYXRpb25EaWFsb2dTZXJ2aWNlKTtcbn0iLCJleHBvcnQgY2xhc3MgTG9jYXRpb25EaWFsb2dQYXJhbXMge1xuICAgIC8vIExvY2F0aW9ucyBwb3NpdGlvblxuICAgIGxvY2F0aW9uUG9zOiBhbnk7XG4gICAgLy8gTG9jYXRpb24gbmFtZVxuICAgIGxvY2F0aW9uTmFtZTogc3RyaW5nO1xufSIsImFuZ3VsYXIubW9kdWxlKCdwaXBMb2NhdGlvbkVkaXREaWFsb2cnLCBbJ25nTWF0ZXJpYWwnLCAncGlwTG9jYXRpb25zLlRlbXBsYXRlcyddKTtcblxuaW1wb3J0ICcuL0xvY2F0aW9uRGlhbG9nJyIsImltcG9ydCB7IElMb2NhdGlvbkRpYWxvZ1NlcnZpY2UgfSBmcm9tICcuLi9sb2NhdGlvbl9kaWFsb2cvSUxvY2F0aW9uRGlhbG9nU2VydmljZSc7XG5cbntcbiAgICBpbnRlcmZhY2UgSUxvY2F0aW9uRWRpdEJpbmRpbmdzIHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuXG4gICAgICAgIHBpcExvY2F0aW9uTmFtZTogYW55O1xuICAgICAgICBwaXBMb2NhdGlvblBvczogYW55O1xuICAgICAgICBwaXBMb2NhdGlvbkhvbGRlcjogYW55O1xuICAgICAgICBuZ0Rpc2FibGVkOiBhbnk7XG4gICAgICAgIHBpcENoYW5nZWQ6IGFueTtcbiAgICB9XG5cbiAgICBjb25zdCBMb2NhdGlvbkVkaXRCaW5kaW5nczogSUxvY2F0aW9uRWRpdEJpbmRpbmdzID0ge1xuICAgICAgICBwaXBMb2NhdGlvbk5hbWU6ICc9JyxcbiAgICAgICAgcGlwTG9jYXRpb25Qb3M6ICc9JyxcbiAgICAgICAgcGlwTG9jYXRpb25Ib2xkZXI6ICc9JyxcbiAgICAgICAgbmdEaXNhYmxlZDogJzwnLFxuICAgICAgICBwaXBDaGFuZ2VkOiAnJidcbiAgICB9XG5cbiAgICBjbGFzcyBMb2NhdGlvbkVkaXRCaW5kaW5nc0NoYW5nZXMgaW1wbGVtZW50cyBuZy5JT25DaGFuZ2VzT2JqZWN0LCBJTG9jYXRpb25FZGl0QmluZGluZ3Mge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG5cbiAgICAgICAgcGlwTG9jYXRpb25OYW1lOiBhbnk7XG4gICAgICAgIHBpcExvY2F0aW9uUG9zOiBhbnk7XG4gICAgICAgIHBpcExvY2F0aW9uSG9sZGVyOiBhbnk7XG4gICAgICAgIHBpcENoYW5nZWQ6IGFueTtcblxuICAgICAgICBuZ0Rpc2FibGVkOiBuZy5JQ2hhbmdlc09iamVjdDxib29sZWFuPjtcbiAgICB9XG5cbiAgICBjbGFzcyBMb2NhdGlvbkVkaXRDb250cm9sbGVyIGltcGxlbWVudHMgbmcuSUNvbnRyb2xsZXIsIElMb2NhdGlvbkVkaXRCaW5kaW5ncyB7XG4gICAgICAgIHB1YmxpYyBwaXBMb2NhdGlvbk5hbWU6IHN0cmluZztcbiAgICAgICAgcHVibGljIHBpcExvY2F0aW9uUG9zOiBhbnk7XG4gICAgICAgIHB1YmxpYyBwaXBMb2NhdGlvbkhvbGRlcjogYm9vbGVhbjtcbiAgICAgICAgcHVibGljIG5nRGlzYWJsZWQ6IGJvb2xlYW47XG4gICAgICAgIHB1YmxpYyBwaXBDaGFuZ2VkOiBGdW5jdGlvbjtcblxuICAgICAgICBwcml2YXRlIGVtcHR5OiBKUXVlcnk7XG4gICAgICAgIHByaXZhdGUgbWFwQ29udGFpbmVyOiBKUXVlcnk7XG4gICAgICAgIHByaXZhdGUgbWFwQ29udHJvbDogYW55O1xuICAgICAgICBwcml2YXRlIGRlZmluZUNvb3JkaW5hdGVzRGVib3VuY2VkOiBGdW5jdGlvbjtcblxuICAgICAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgICAgIHByaXZhdGUgJGVsZW1lbnQ6IEpRdWVyeSxcbiAgICAgICAgICAgIHByaXZhdGUgJHNjb3BlOiBuZy5JU2NvcGUsXG4gICAgICAgICAgICBwcml2YXRlIHBpcExvY2F0aW9uRWRpdERpYWxvZzogSUxvY2F0aW9uRGlhbG9nU2VydmljZVxuICAgICAgICApIHtcbiAgICAgICAgICAgIHRoaXMuZGVmaW5lQ29vcmRpbmF0ZXNEZWJvdW5jZWQgPSBfLmRlYm91bmNlKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRlZmluZUNvb3JkaW5hdGVzXG4gICAgICAgICAgICB9LCAyMDAwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyAkcG9zdExpbmsoKSB7XG4gICAgICAgICAgICB0aGlzLiRlbGVtZW50LmZpbmQoJ21kLWlucHV0LWNvbnRhaW5lcicpLmF0dHIoJ21kLW5vLWZsb2F0JywgKCEhdGhpcy5waXBMb2NhdGlvbkhvbGRlcikudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAvLyBTZXQgY29udGFpbmVyc1xuICAgICAgICAgICAgdGhpcy5lbXB0eSA9IHRoaXMuJGVsZW1lbnQuY2hpbGRyZW4oJy5waXAtbG9jYXRpb24tZW1wdHknKTtcbiAgICAgICAgICAgIHRoaXMubWFwQ29udGFpbmVyID0gdGhpcy4kZWxlbWVudC5jaGlsZHJlbignLnBpcC1sb2NhdGlvbi1jb250YWluZXInKTtcbiAgICAgICAgICAgIHRoaXMubWFwQ29udHJvbCA9IG51bGw7XG5cbiAgICAgICAgICAgIC8vIEFkZCB3YXRjaGVyc1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuJHdhdGNoKCckY3RybC5waXBMb2NhdGlvbk5hbWUnLFxuICAgICAgICAgICAgICAgIChuZXdWYWx1ZSwgb2xkVmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld1ZhbHVlICE9PSBvbGRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5kZWZpbmVDb29yZGluYXRlc0RlYm91bmNlZCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHRoaXMuJHNjb3BlLiR3YXRjaCgnJGN0cmwucGlwTG9jYXRpb25Qb3MnLFxuICAgICAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZU1hcCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIC8vIEFkZCBjbGFzc1xuICAgICAgICAgICAgdGhpcy4kZWxlbWVudC5hZGRDbGFzcygncGlwLWxvY2F0aW9uLWVkaXQnKTtcblxuICAgICAgICAgICAgLy8gVmlzdWFsaXplIG1hcFxuICAgICAgICAgICAgaWYgKHRoaXMucGlwTG9jYXRpb25Qb3MpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTWFwKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJNYXAoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyAkb25DaGFuZ2VzKGNoYW5nZXM6IExvY2F0aW9uRWRpdEJpbmRpbmdzQ2hhbmdlcykge1xuICAgICAgICAgICAgdGhpcy5uZ0Rpc2FibGVkID0gY2hhbmdlcy5uZ0Rpc2FibGVkID8gY2hhbmdlcy5uZ0Rpc2FibGVkLmN1cnJlbnRWYWx1ZSA6IGZhbHNlOyBcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgY2xlYXJNYXAoKSB7XG4gICAgICAgICAgICAvLyBSZW1vdmUgbWFwIGNvbnRyb2xcbiAgICAgICAgICAgIGlmICh0aGlzLm1hcENvbnRyb2wpIHRoaXMubWFwQ29udHJvbC5yZW1vdmUoKTtcbiAgICAgICAgICAgIHRoaXMubWFwQ29udHJvbCA9IG51bGw7XG5cbiAgICAgICAgICAgIC8vIFRvZ2dsZSBjb250cm9sIHZpc2liaWxpdHlcbiAgICAgICAgICAgIHRoaXMubWFwQ29udGFpbmVyLmhpZGUoKTtcbiAgICAgICAgICAgIHRoaXMuZW1wdHkuc2hvdygpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBnZW5lcmF0ZU1hcCgpIHtcbiAgICAgICAgICAgIC8vIFNhZmVndWFyZCBmb3IgYmFkIGNvb3JkaW5hdGVzXG4gICAgICAgICAgICBjb25zdCBsb2NhdGlvbiA9IHRoaXMucGlwTG9jYXRpb25Qb3M7XG4gICAgICAgICAgICBpZiAobG9jYXRpb24gPT0gbnVsbCB8fCBsb2NhdGlvbi5jb29yZGluYXRlcyA9PSBudWxsIHx8IGxvY2F0aW9uLmNvb3JkaW5hdGVzLmxlbmd0aCA8IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsZWFyTWFwKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBEZXRlcm1pbmUgbWFwIGNvb3JkaW5hdGVzXG4gICAgICAgICAgICBjb25zdCBjb29yZGluYXRlcyA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmcoXG4gICAgICAgICAgICAgICAgbG9jYXRpb24uY29vcmRpbmF0ZXNbMF0sXG4gICAgICAgICAgICAgICAgbG9jYXRpb24uY29vcmRpbmF0ZXNbMV1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIC8vIENsZWFuIHVwIHRoZSBjb250cm9sXG4gICAgICAgICAgICBpZiAodGhpcy5tYXBDb250cm9sKSB0aGlzLm1hcENvbnRyb2wucmVtb3ZlKCk7XG5cbiAgICAgICAgICAgIC8vIFRvZ2dsZSBjb250cm9sIHZpc2liaWxpdHlcbiAgICAgICAgICAgIHRoaXMubWFwQ29udGFpbmVyLnNob3coKTtcbiAgICAgICAgICAgIHRoaXMuZW1wdHkuaGlkZSgpO1xuXG4gICAgICAgICAgICAvLyBBZGQgYSBuZXcgbWFwXG4gICAgICAgICAgICB0aGlzLm1hcENvbnRyb2wgPSAkKCc8ZGl2PjwvZGl2PicpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250cm9sLmFwcGVuZFRvKHRoaXMubWFwQ29udGFpbmVyKTtcblxuICAgICAgICAgICAgLy8gQ3JlYXRlIHRoZSBtYXAgd2l0aCBwb2ludCBtYXJrZXJcbiAgICAgICAgICAgIGNvbnN0IG1hcE9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGNlbnRlcjogY29vcmRpbmF0ZXMsXG4gICAgICAgICAgICAgICAgICAgIHpvb206IDEyLFxuICAgICAgICAgICAgICAgICAgICBtYXBUeXBlSWQ6IGdvb2dsZS5tYXBzLk1hcFR5cGVJZC5ST0FETUFQLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlRGVmYXVsdFVJOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlRG91YmxlQ2xpY2tab29tOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBzY3JvbGx3aGVlbDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGRyYWdnYWJsZTogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAodGhpcy5tYXBDb250cm9sWzBdLCBtYXBPcHRpb25zKSxcbiAgICAgICAgICAgICAgICBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGNvb3JkaW5hdGVzLFxuICAgICAgICAgICAgICAgICAgICBtYXA6IG1hcFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBkZWZpbmVDb29yZGluYXRlcygpIHtcbiAgICAgICAgICAgIGNvbnN0IGxvY2F0aW9uTmFtZSA9IHRoaXMucGlwTG9jYXRpb25OYW1lO1xuXG4gICAgICAgICAgICBpZiAobG9jYXRpb25OYW1lID09ICcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5waXBMb2NhdGlvblBvcyA9IG51bGw7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhck1hcCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLiRhcHBseSgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgZ2VvY29kZXIgPSBuZXcgZ29vZ2xlLm1hcHMuR2VvY29kZXIoKTtcbiAgICAgICAgICAgIGdlb2NvZGVyLmdlb2NvZGUoe1xuICAgICAgICAgICAgICAgIGFkZHJlc3M6IGxvY2F0aW9uTmFtZVxuICAgICAgICAgICAgfSwgZnVuY3Rpb24gKHJlc3VsdHMsIHN0YXR1cykge1xuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLiRhcHBseShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIFByb2Nlc3MgcmVzcG9uc2VcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gZ29vZ2xlLm1hcHMuR2VvY29kZXJTdGF0dXMuT0spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIENoZWNrIGZvciBlbXB0eSByZXN1bHRzXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0cyA9PT0gbnVsbCB8fCByZXN1bHRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGlwTG9jYXRpb25Qb3MgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJNYXAoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGdlb21ldHJ5ID0gcmVzdWx0c1swXS5nZW9tZXRyeSB8fCB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbiA9IGdlb21ldHJ5LmxvY2F0aW9uIHx8IHt9O1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBDaGVjayBmb3IgZW1wdHkgcmVzdWx0cyBhZ2FpblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxvY2F0aW9uLmxhdCA9PT0gbnVsbCB8fCBsb2NhdGlvbi5sbmcgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBpcExvY2F0aW9uUG9zID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNsZWFyTWFwKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBpcExvY2F0aW9uUG9zID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICdQb2ludCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29vcmRpbmF0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGF0aXR1ZGU6IGxvY2F0aW9uLmxhdCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb25ndGl0dWRlOiBsb2NhdGlvbi5sbmcoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTWFwKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBpcExvY2F0aW9uUG9zID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJNYXAoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgcHVibGljIG9uU2V0TG9jYXRpb24oKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5uZ0Rpc2FibGVkKSByZXR1cm47XG5cbiAgICAgICAgICAgIHRoaXMucGlwTG9jYXRpb25FZGl0RGlhbG9nLnNob3coe1xuICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbk5hbWU6IHRoaXMucGlwTG9jYXRpb25OYW1lLFxuICAgICAgICAgICAgICAgICAgICBsb2NhdGlvblBvczogdGhpcy5waXBMb2NhdGlvblBvc1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdFxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb24gPSByZXN1bHQubG9jYXRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbk5hbWUgPSByZXN1bHQubG9jYXRpb25OYW1lO1xuXG4gICAgICAgICAgICAgICAgICAgIC8vIERvIG5vdCBjaGFuZ2UgYW55dGhpbmcgaWYgbG9jYXRpb24gaXMgYWJvdXQgdGhlIHNhbWVcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMucGlwTG9jYXRpb25Qb3MgJiYgdGhpcy5waXBMb2NhdGlvblBvcy50eXBlID09ICdQb2ludCcgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGlwTG9jYXRpb25Qb3MuY29vcmRpbmF0ZXMubGVuZ3RoID09IDIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uICYmIGxvY2F0aW9uLmNvb3JkaW5hdGVzLmxlbmd0aCA9PSAyICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAodGhpcy5waXBMb2NhdGlvblBvcy5jb29yZGluYXRlc1swXSAtIGxvY2F0aW9uLmNvb3JkaW5hdGVzWzBdKSA8IDAuMDAwMSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgKHRoaXMucGlwTG9jYXRpb25Qb3MuY29vcmRpbmF0ZXNbMV0gLSBsb2NhdGlvbi5jb29yZGluYXRlc1sxXSkgPCAwLjAwMDEgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIChsb2NhdGlvbk5hbWUgPT09IHRoaXMucGlwTG9jYXRpb25OYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5waXBMb2NhdGlvblBvcyA9IGxvY2F0aW9uO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBpcExvY2F0aW9uTmFtZSA9IGxvY2F0aW9uTmFtZTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAobG9jYXRpb25OYW1lID09PSBudWxsICYmIGxvY2F0aW9uICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBpcExvY2F0aW9uTmFtZSA9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJygnICsgcmVzdWx0LmxvY2F0aW9uLmNvb3JkaW5hdGVzWzBdICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLCcgKyByZXN1bHQubG9jYXRpb24uY29vcmRpbmF0ZXNbMV0gKyAnKSc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5waXBDaGFuZ2VkKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWFwQ29udGFpbmVyWzBdLmZvY3VzKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfTtcblxuICAgICAgICBwdWJsaWMgb25NYXBDbGljaygkZXZlbnQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm5nRGlzYWJsZWQpIHJldHVybjtcblxuICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXJbMF0uZm9jdXMoKTtcbiAgICAgICAgICAgIHRoaXMub25TZXRMb2NhdGlvbigpO1xuICAgICAgICAgICAgLy8kZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgIH07XG5cbiAgICAgICAgcHVibGljIG9uTWFwS2V5UHJlc3MoJGV2ZW50KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5uZ0Rpc2FibGVkKSByZXR1cm47XG5cbiAgICAgICAgICAgIGlmICgkZXZlbnQua2V5Q29kZSA9PSAxMyB8fCAkZXZlbnQua2V5Q29kZSA9PSAzMikge1xuICAgICAgICAgICAgICAgIHRoaXMub25TZXRMb2NhdGlvbigpO1xuICAgICAgICAgICAgICAgIC8vJGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbnN0IExvY2F0aW9uRWRpdDogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XG4gICAgICAgIGJpbmRpbmdzOiBMb2NhdGlvbkVkaXRCaW5kaW5ncyxcbiAgICAgICAgdGVtcGxhdGVVcmw6ICdsb2NhdGlvbl9lZGl0L0xvY2F0aW9uRWRpdC5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogTG9jYXRpb25FZGl0Q29udHJvbGxlclxuICAgIH1cblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZShcInBpcExvY2F0aW9uRWRpdFwiLCBbJ3BpcExvY2F0aW9uRWRpdERpYWxvZyddKVxuICAgICAgICAuY29tcG9uZW50KCdwaXBMb2NhdGlvbkVkaXQnLCBMb2NhdGlvbkVkaXQpO1xuXG59IiwiZGVjbGFyZSBsZXQgZ29vZ2xlOiBhbnk7XG5cbntcbiAgICBpbnRlcmZhY2UgSUxvY2F0aW9uSXBCaW5kaW5ncyB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IGFueTtcblxuICAgICAgICBwaXBJcGFkZHJlc3M6IGFueTtcbiAgICAgICAgcGlwRXh0cmFJbmZvOiBhbnk7XG4gICAgICAgIHBpcFJlYmluZDogYW55O1xuICAgIH1cblxuICAgIGNvbnN0IExvY2F0aW9uSXBCaW5kaW5nczogSUxvY2F0aW9uSXBCaW5kaW5ncyA9IHtcbiAgICAgICAgcGlwSXBhZGRyZXNzOiAnPCcsXG4gICAgICAgIHBpcEV4dHJhSW5mbzogJyYnLFxuICAgICAgICBwaXBSZWJpbmQ6ICc8J1xuICAgIH1cblxuICAgIGludGVyZmFjZSBJSXBSZXNwb25zZUluZm8ge1xuICAgICAgICBjaXR5OiBzdHJpbmc7XG4gICAgICAgIHJlZ2lvbkNvZGU6IHN0cmluZyB8IG51bWJlcjtcbiAgICAgICAgcmVnaW9uTmFtZTogc3RyaW5nO1xuICAgICAgICB6aXBDb2RlOiBzdHJpbmcgfCBudW1iZXI7XG4gICAgICAgIGNvdW50cnlDb2RlOiBzdHJpbmcgfCBudW1iZXI7XG4gICAgICAgIGNvdW50cnlOYW1lOiBzdHJpbmc7XG4gICAgICAgIGxhdGl0dWRlOiBzdHJpbmcgfCBudW1iZXI7XG4gICAgICAgIGxvbmdpdHVkZTogc3RyaW5nIHwgbnVtYmVyO1xuICAgIH1cblxuICAgIGNsYXNzIExvY2F0aW9uSXBCaW5kaW5nc0NoYW5nZXMgaW1wbGVtZW50cyBuZy5JT25DaGFuZ2VzT2JqZWN0LCBJTG9jYXRpb25JcEJpbmRpbmdzIHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuXG4gICAgICAgIHBpcEV4dHJhSW5mbzogYW55O1xuXG4gICAgICAgIHBpcElwYWRkcmVzczogbmcuSUNoYW5nZXNPYmplY3QgPCBzdHJpbmcgPiA7XG4gICAgICAgIHBpcFJlYmluZDogbmcuSUNoYW5nZXNPYmplY3QgPCBib29sZWFuID5cbiAgICB9XG5cbiAgICBjbGFzcyBMb2NhdGlvbklwQ29udHJvbGxlciBpbXBsZW1lbnRzIG5nLklDb250cm9sbGVyLCBJTG9jYXRpb25JcEJpbmRpbmdzIHtcbiAgICAgICAgcHJpdmF0ZSBtYXBDb250YWluZXI6IEpRdWVyeTtcbiAgICAgICAgcHJpdmF0ZSBtYXBDb250cm9sOiBhbnk7XG5cbiAgICAgICAgcHVibGljIHBpcEV4dHJhSW5mbzogYW55O1xuICAgICAgICBwdWJsaWMgcGlwSXBhZGRyZXNzOiBzdHJpbmc7XG4gICAgICAgIHB1YmxpYyBwaXBSZWJpbmQ6IGJvb2xlYW47XG5cbiAgICAgICAgY29uc3RydWN0b3IoXG4gICAgICAgICAgICAkZWxlbWVudDogSlF1ZXJ5LFxuICAgICAgICAgICAgcHJpdmF0ZSAkaHR0cDogbmcuSUh0dHBTZXJ2aWNlXG4gICAgICAgICkge1xuICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXIgPSAkZWxlbWVudC5jaGlsZHJlbignLnBpcC1sb2NhdGlvbi1jb250YWluZXInKTtcbiAgICAgICAgICAgICRlbGVtZW50LmFkZENsYXNzKCdwaXAtbG9jYXRpb24taXAnKTtcbiAgICAgICAgICAgIHRoaXMuZGVmaW5lQ29vcmRpbmF0ZXMoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyAkb25DaGFuZ2VzKGNoYW5nZXM6IExvY2F0aW9uSXBCaW5kaW5nc0NoYW5nZXMpIHtcbiAgICAgICAgICAgIHRoaXMucGlwUmViaW5kID0gY2hhbmdlcy5waXBSZWJpbmQgPyBjaGFuZ2VzLnBpcFJlYmluZC5jdXJyZW50VmFsdWUgfHwgZmFsc2UgOiBmYWxzZTtcblxuICAgICAgICAgICAgaWYgKHRoaXMucGlwUmViaW5kID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5waXBJcGFkZHJlc3MgPSBjaGFuZ2VzLnBpcElwYWRkcmVzcyA/IGNoYW5nZXMucGlwSXBhZGRyZXNzLmN1cnJlbnRWYWx1ZSA6IHRoaXMucGlwSXBhZGRyZXNzO1xuICAgICAgICAgICAgICAgIHRoaXMuZGVmaW5lQ29vcmRpbmF0ZXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgY2xlYXJNYXAoKSB7XG4gICAgICAgICAgICAvLyBSZW1vdmUgbWFwIGNvbnRyb2xcbiAgICAgICAgICAgIGlmICh0aGlzLm1hcENvbnRyb2wpIHRoaXMubWFwQ29udHJvbC5yZW1vdmUoKTtcbiAgICAgICAgICAgIHRoaXMubWFwQ29udHJvbCA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGdlbmVyYXRlTWFwKGxhdGl0dWRlLCBsb25naXR1ZGUpIHtcbiAgICAgICAgICAgIC8vIFNhZmVndWFyZCBmb3IgYmFkIGNvb3JkaW5hdGVzXG4gICAgICAgICAgICBpZiAobGF0aXR1ZGUgPT0gbnVsbCB8fCBsb25naXR1ZGUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJNYXAoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIERldGVybWluZSBtYXAgY29vcmRpbmF0ZXNcbiAgICAgICAgICAgIHZhciBjb29yZGluYXRlcyA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmcoXG4gICAgICAgICAgICAgICAgbGF0aXR1ZGUsXG4gICAgICAgICAgICAgICAgbG9uZ2l0dWRlXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAvLyBDbGVhbiB1cCB0aGUgY29udHJvbFxuICAgICAgICAgICAgaWYgKHRoaXMubWFwQ29udHJvbCkgdGhpcy5tYXBDb250cm9sLnJlbW92ZSgpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250cm9sID0gJCgnPGRpdj48L2Rpdj4nKTtcbiAgICAgICAgICAgIHRoaXMubWFwQ29udHJvbC5hcHBlbmRUbyh0aGlzLm1hcENvbnRhaW5lcik7XG5cbiAgICAgICAgICAgIC8vIENyZWF0ZSB0aGUgbWFwIHdpdGggcG9pbnQgbWFya2VyXG4gICAgICAgICAgICBjb25zdFxuICAgICAgICAgICAgICAgIG1hcE9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGNlbnRlcjogY29vcmRpbmF0ZXMsXG4gICAgICAgICAgICAgICAgICAgIHpvb206IDEyLFxuICAgICAgICAgICAgICAgICAgICBtYXBUeXBlSWQ6IGdvb2dsZS5tYXBzLk1hcFR5cGVJZC5ST0FETUFQLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlRGVmYXVsdFVJOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlRG91YmxlQ2xpY2tab29tOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBzY3JvbGx3aGVlbDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgIGRyYWdnYWJsZTogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAodGhpcy5tYXBDb250cm9sWzBdLCBtYXBPcHRpb25zKTtcblxuICAgICAgICAgICAgbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGNvb3JkaW5hdGVzLFxuICAgICAgICAgICAgICAgIG1hcDogbWFwXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgZGVmaW5lQ29vcmRpbmF0ZXMoKSB7XG4gICAgICAgICAgICBjb25zdCBpcEFkZHJlc3MgPSB0aGlzLnBpcElwYWRkcmVzcztcblxuICAgICAgICAgICAgaWYgKGlwQWRkcmVzcyA9PSAnJykge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJNYXAoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuJGh0dHAuZ2V0KCdodHRwczovL2ZyZWVnZW9pcC5uZXQvanNvbi8nICsgaXBBZGRyZXNzKVxuICAgICAgICAgICAgICAgIC5zdWNjZXNzKChyZXNwb25zZTogSUlwUmVzcG9uc2VJbmZvKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZSAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5sYXRpdHVkZSAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5sb25naXR1ZGUgIT0gbnVsbCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTWFwKHJlc3BvbnNlLmxhdGl0dWRlLCByZXNwb25zZS5sb25naXR1ZGUpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5waXBFeHRyYUluZm8pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBleHRyYUluZm8gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNpdHk6IHJlc3BvbnNlLmNpdHksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2lvbkNvZGU6IHJlc3BvbnNlLnJlZ2lvbkNvZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2lvbjogcmVzcG9uc2UucmVnaW9uTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgemlwQ29kZTogcmVzcG9uc2UuemlwQ29kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRyeUNvZGU6IHJlc3BvbnNlLmNvdW50cnlDb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudHJ5OiByZXNwb25zZS5jb3VudHJ5TmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5waXBFeHRyYUluZm8oe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRyYUluZm86IGV4dHJhSW5mb1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhck1hcCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuZXJyb3IoKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJNYXAoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IExvY2F0aW9uSXA6IG5nLklDb21wb25lbnRPcHRpb25zID0ge1xuICAgICAgICBiaW5kaW5nczogTG9jYXRpb25JcEJpbmRpbmdzLFxuICAgICAgICB0ZW1wbGF0ZTogJzxkaXYgY2xhc3M9XCJwaXAtbG9jYXRpb24tY29udGFpbmVyXCI+PC9kaXY+JyxcbiAgICAgICAgY29udHJvbGxlcjogTG9jYXRpb25JcENvbnRyb2xsZXJcbiAgICB9XG5cbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoXCJwaXBMb2NhdGlvbklwXCIsIFtdKVxuICAgICAgICAuY29tcG9uZW50KCdwaXBMb2NhdGlvbklwJywgTG9jYXRpb25JcCk7XG59Iiwie1xuXG4gICAgaW50ZXJmYWNlIElMb2NhdGlvbk1hcEJpbmRpbmdzIHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuXG4gICAgICAgIHBpcExvY2F0aW9uUG9zOiBhbnk7XG4gICAgICAgIHBpcEljb25QYXRoOiBhbnk7XG4gICAgICAgIHBpcEludGVyYWN0aXZlOiBhbnk7XG4gICAgICAgIHBpcFN0cmV0Y2g6IGFueTtcbiAgICAgICAgcGlwUmViaW5kOiBhbnk7XG4gICAgfVxuXG4gICAgY29uc3QgTG9jYXRpb25NYXBCaW5kaW5nczogSUxvY2F0aW9uTWFwQmluZGluZ3MgPSB7XG4gICAgICAgIHBpcExvY2F0aW9uUG9zOiAnPCcsXG4gICAgICAgIHBpcEljb25QYXRoOiAnPCcsXG4gICAgICAgIHBpcEludGVyYWN0aXZlOiAnPCcsXG4gICAgICAgIHBpcFN0cmV0Y2g6ICc8JyxcbiAgICAgICAgcGlwUmViaW5kOiAnPCdcbiAgICB9XG5cbiAgICBjbGFzcyBMb2NhdGlvbk1hcEJpbmRpbmdzQ2hhbmdlcyBpbXBsZW1lbnRzIG5nLklPbkNoYW5nZXNPYmplY3QsIElMb2NhdGlvbk1hcEJpbmRpbmdzIHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuXG4gICAgICAgIHBpcExvY2F0aW9uUG9zOiBuZy5JQ2hhbmdlc09iamVjdDxhbnk+O1xuICAgICAgICBwaXBJY29uUGF0aDogbmcuSUNoYW5nZXNPYmplY3Q8c3RyaW5nPjtcbiAgICAgICAgcGlwSW50ZXJhY3RpdmU6IG5nLklDaGFuZ2VzT2JqZWN0PGJvb2xlYW4+O1xuICAgICAgICBwaXBTdHJldGNoOiBuZy5JQ2hhbmdlc09iamVjdDxib29sZWFuPjtcbiAgICAgICAgcGlwUmViaW5kOiBuZy5JQ2hhbmdlc09iamVjdDxib29sZWFuPjtcbiAgICB9XG5cbiAgICBjbGFzcyBMb2NhdGlvbk1hcENvbnRyb2xsZXIgaW1wbGVtZW50cyBuZy5JQ29udHJvbGxlciwgSUxvY2F0aW9uTWFwQmluZGluZ3Mge1xuICAgICAgICBwdWJsaWMgcGlwTG9jYXRpb25Qb3M6IGFueTtcbiAgICAgICAgcHVibGljIHBpcEljb25QYXRoOiBzdHJpbmc7XG4gICAgICAgIHB1YmxpYyBwaXBJbnRlcmFjdGl2ZTogYm9vbGVhbjtcbiAgICAgICAgcHVibGljIHBpcFN0cmV0Y2g6IGJvb2xlYW47XG4gICAgICAgIHB1YmxpYyBwaXBSZWJpbmQ6IGJvb2xlYW47XG5cbiAgICAgICAgcHJpdmF0ZSBtYXBDb250YWluZXI6IEpRdWVyeTtcbiAgICAgICAgcHJpdmF0ZSBtYXBDb250cm9sOiBhbnkgPSBudWxsO1xuXG4gICAgICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICAgICAgcHJpdmF0ZSAkZWxlbWVudDogSlF1ZXJ5XG4gICAgICAgICkge1xuICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXIgPSAkZWxlbWVudC5jaGlsZHJlbignLnBpcC1sb2NhdGlvbi1jb250YWluZXInKTtcbiAgICAgICAgICAgICRlbGVtZW50LmFkZENsYXNzKCdwaXAtbG9jYXRpb24tbWFwJyk7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgJG9uQ2hhbmdlcyhjaGFuZ2VzOiBMb2NhdGlvbk1hcEJpbmRpbmdzQ2hhbmdlcykge1xuICAgICAgICAgICAgdGhpcy5waXBSZWJpbmQgPSBjaGFuZ2VzLnBpcFJlYmluZCA/IGNoYW5nZXMucGlwUmViaW5kLmN1cnJlbnRWYWx1ZSB8fCBmYWxzZSA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5waXBJbnRlcmFjdGl2ZSA9IGNoYW5nZXMucGlwSW50ZXJhY3RpdmUgPyBjaGFuZ2VzLnBpcEludGVyYWN0aXZlLmN1cnJlbnRWYWx1ZSB8fCBmYWxzZSA6IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5waXBTdHJldGNoID0gY2hhbmdlcy5waXBTdHJldGNoID8gY2hhbmdlcy5waXBTdHJldGNoLmN1cnJlbnRWYWx1ZSB8fCBmYWxzZSA6IGZhbHNlO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5waXBTdHJldGNoID09PSB0cnVlKSAge1xuICAgICAgICAgICAgICAgIHRoaXMubWFwQ29udGFpbmVyLmFkZENsYXNzKCdzdHJldGNoJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMubWFwQ29udGFpbmVyLnJlbW92ZUNsYXNzKCdzdHJldGNoJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnBpcFJlYmluZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHRoaXMucGlwTG9jYXRpb25Qb3MgPSBjaGFuZ2VzLnBpcExvY2F0aW9uUG9zID8gY2hhbmdlcy5waXBMb2NhdGlvblBvcy5jdXJyZW50VmFsdWUgOiB0aGlzLnBpcExvY2F0aW9uUG9zO1xuICAgICAgICAgICAgICAgIHRoaXMucGlwSWNvblBhdGggPSBjaGFuZ2VzLnBpcEljb25QYXRoID8gY2hhbmdlcy5waXBJY29uUGF0aC5jdXJyZW50VmFsdWUgOiB0aGlzLnBpcEljb25QYXRoO1xuXG4gICAgICAgICAgICAgICAgdGhpcy5nZW5lcmF0ZU1hcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBjbGVhck1hcCgpIHtcbiAgICAgICAgICAgIC8vIFJlbW92ZSBtYXAgY29udHJvbFxuICAgICAgICAgICAgaWYgKHRoaXMubWFwQ29udHJvbCkgdGhpcy5tYXBDb250cm9sLnJlbW92ZSgpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250cm9sID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgY2hlY2tMb2NhdGlvbihsb2MpIHtcbiAgICAgICAgICAgIHJldHVybiAhKGxvYyA9PSBudWxsIHx8IGxvYy5jb29yZGluYXRlcyA9PSBudWxsIHx8IGxvYy5jb29yZGluYXRlcy5sZW5ndGggPCAwKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgZGV0ZXJtaW5lQ29vcmRpbmF0ZXMobG9jKSB7XG4gICAgICAgICAgICBjb25zdCBwb2ludCA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmcoXG4gICAgICAgICAgICAgICAgbG9jLmNvb3JkaW5hdGVzWzBdLFxuICAgICAgICAgICAgICAgIGxvYy5jb29yZGluYXRlc1sxXVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgcG9pbnQuZmlsbCA9IGxvYy5maWxsO1xuICAgICAgICAgICAgcG9pbnQuc3Ryb2tlID0gbG9jLnN0cm9rZTtcblxuICAgICAgICAgICAgcmV0dXJuIHBvaW50O1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBnZW5lcmF0ZU1hcCgpIHtcbiAgICAgICAgICAgIGNvbnN0IGxvY2F0aW9ucyA9IHRoaXMucGlwTG9jYXRpb25Qb3MsXG4gICAgICAgICAgICAgICAgcG9pbnRzID0gW10sXG4gICAgICAgICAgICAgICAgaW50ZXJhY3RpdmUgPSB0aGlzLnBpcEludGVyYWN0aXZlIHx8IGZhbHNlO1xuXG4gICAgICAgICAgICAvLyBTYWZlZ3VhcmQgZm9yIGJhZCBjb29yZGluYXRlc1xuICAgICAgICAgICAgaWYgKHRoaXMuY2hlY2tMb2NhdGlvbihsb2NhdGlvbnMpICYmICFfLmlzQXJyYXkobG9jYXRpb25zKSkge1xuICAgICAgICAgICAgICAgIHBvaW50cy5wdXNoKHRoaXMuZGV0ZXJtaW5lQ29vcmRpbmF0ZXMobG9jYXRpb25zKSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChsb2NhdGlvbnMgJiYgXy5pc0FycmF5KGxvY2F0aW9ucykgJiYgbG9jYXRpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgXy5lYWNoKGxvY2F0aW9ucywgKGxvYykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuY2hlY2tMb2NhdGlvbihsb2MpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9pbnRzLnB1c2godGhpcy5kZXRlcm1pbmVDb29yZGluYXRlcyhsb2MpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocG9pbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJNYXAoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIENsZWFuIHVwIHRoZSBjb250cm9sXG4gICAgICAgICAgICBpZiAodGhpcy5tYXBDb250cm9sKSB0aGlzLm1hcENvbnRyb2wucmVtb3ZlKCk7XG4gICAgICAgICAgICB0aGlzLm1hcENvbnRyb2wgPSAkKCc8ZGl2PjwvZGl2PicpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250cm9sLmFwcGVuZFRvKHRoaXMubWFwQ29udGFpbmVyKTtcblxuICAgICAgICAgICAgLy8gQ3JlYXRlIHRoZSBtYXBcbiAgICAgICAgICAgIGNvbnN0IG1hcE9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGNlbnRlcjogcG9pbnRzWzBdLFxuICAgICAgICAgICAgICAgICAgICB6b29tOiAxMixcbiAgICAgICAgICAgICAgICAgICAgbWFwVHlwZUlkOiBnb29nbGUubWFwcy5NYXBUeXBlSWQuUk9BRE1BUCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZURlZmF1bHRVSTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZURvdWJsZUNsaWNrWm9vbTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgc2Nyb2xsd2hlZWw6IGludGVyYWN0aXZlLFxuICAgICAgICAgICAgICAgICAgICBkcmFnZ2FibGU6IGludGVyYWN0aXZlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBtYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKHRoaXMubWFwQ29udHJvbFswXSwgbWFwT3B0aW9ucyksXG4gICAgICAgICAgICAgICAgYm91bmRzID0gbmV3IGdvb2dsZS5tYXBzLkxhdExuZ0JvdW5kcygpO1xuXG4gICAgICAgICAgICAvLyBDcmVhdGUgbWFya2Vyc1xuICAgICAgICAgICAgXy5lYWNoKHBvaW50cywgKHBvaW50KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWNvbiA9IHtcbiAgICAgICAgICAgICAgICAgICAgcGF0aDogdGhpcy5waXBJY29uUGF0aCxcbiAgICAgICAgICAgICAgICAgICAgZmlsbENvbG9yOiBwb2ludC5maWxsIHx8ICcjRUY1MzUwJyxcbiAgICAgICAgICAgICAgICAgICAgZmlsbE9wYWNpdHk6IDEsXG4gICAgICAgICAgICAgICAgICAgIHNjYWxlOiAxLFxuICAgICAgICAgICAgICAgICAgICBzdHJva2VDb2xvcjogcG9pbnQuc3Ryb2tlIHx8ICd3aGl0ZScsXG4gICAgICAgICAgICAgICAgICAgIHN0cm9rZVdlaWdodDogNVxuICAgICAgICAgICAgICAgIH07XG5cbiAgICAgICAgICAgICAgICBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHBvaW50LFxuICAgICAgICAgICAgICAgICAgICBtYXA6IG1hcCxcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogdGhpcy5waXBJY29uUGF0aCA/IGljb24gOiBudWxsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgYm91bmRzLmV4dGVuZChwb2ludCk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy8gQXV0by1jb25maWcgb2Ygem9vbSBhbmQgY2VudGVyXG4gICAgICAgICAgICBpZiAocG9pbnRzLmxlbmd0aCA+IDEpIG1hcC5maXRCb3VuZHMoYm91bmRzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IExvY2F0aW9uTWFwOiBuZy5JQ29tcG9uZW50T3B0aW9ucyA9IHtcbiAgICAgICAgYmluZGluZ3M6IExvY2F0aW9uTWFwQmluZGluZ3MsXG4gICAgICAgIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cInBpcC1sb2NhdGlvbi1jb250YWluZXJcIj48L2Rpdj4nLFxuICAgICAgICBjb250cm9sbGVyOiBMb2NhdGlvbk1hcENvbnRyb2xsZXJcbiAgICB9XG5cbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoXCJwaXBMb2NhdGlvbk1hcFwiLCBbXSlcbiAgICAgICAgLmNvbXBvbmVudCgncGlwTG9jYXRpb25NYXAnLCBMb2NhdGlvbk1hcCk7XG59IiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcExvY2F0aW9ucy5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcExvY2F0aW9ucy5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2xvY2F0aW9uL0xvY2F0aW9uLmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwicGlwLWxvY2F0aW9uLW5hbWUgbG9jYXRpb24tY29sbGFwc2VcIiBuZy1jbGljaz1cIiRjdHJsLnBpcExvY2F0aW9uUmVzaXplKClcIiBuZy1pZj1cIiEkY3RybC5waXBDb2xsYXBzZVwiIG5nLWNsYXNzPVwiJGN0cmwucGlwU2hvd0xvY2F0aW9uSWNvbiA/IFxcJ3BpcC1sb2NhdGlvbi1pY29uLXNwYWNlXFwnIDogXFwnXFwnXCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpsb2NhdGlvblwiIGNsYXNzPVwiZmxleC1maXhlZCBwaXAtaWNvblwiIG5nLWlmPVwiJGN0cmwucGlwU2hvd0xvY2F0aW9uSWNvblwiPjwvbWQtaWNvbj48c3BhbiBjbGFzcz1cInBpcC1sb2NhdGlvbi10ZXh0XCI+e3skY3RybC5waXBMb2NhdGlvbk5hbWV9fTwvc3Bhbj48L2Rpdj48bWQtYnV0dG9uIGNsYXNzPVwicGlwLWxvY2F0aW9uLW5hbWVcIiBuZy1jbGljaz1cIiRjdHJsLnBpcExvY2F0aW9uUmVzaXplKClcIiBuZy1pZj1cIiRjdHJsLnBpcENvbGxhcHNlXCIgbmctY2xhc3M9XCIkY3RybC5waXBTaG93TG9jYXRpb25JY29uID8gXFwncGlwLWxvY2F0aW9uLWljb24tc3BhY2VcXCcgOiBcXCdcXCdcIj48ZGl2IGNsYXNzPVwibGF5b3V0LWFsaWduLXN0YXJ0LWNlbnRlciBsYXlvdXQtcm93IHctc3RyZXRjaFwiPjxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6bG9jYXRpb25cIiBjbGFzcz1cImZsZXgtZml4ZWQgcGlwLWljb25cIiBuZy1pZj1cIiRjdHJsLnBpcFNob3dMb2NhdGlvbkljb25cIj48L21kLWljb24+PHNwYW4gY2xhc3M9XCJwaXAtbG9jYXRpb24tdGV4dCBmbGV4XCI+e3skY3RybC5waXBMb2NhdGlvbk5hbWV9fTwvc3Bhbj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOnRyaWFuZ2xlLWRvd25cIiBjbGFzcz1cImZsZXgtZml4ZWRcIiBuZy1zaG93PVwiISRjdHJsLnNob3dNYXBcIj48L21kLWljb24+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczp0cmlhbmdsZS11cFwiIGNsYXNzPVwiZmxleC1maXhlZFwiIG5nLXNob3c9XCIkY3RybC5zaG93TWFwXCI+PC9tZC1pY29uPjwvZGl2PjwvbWQtYnV0dG9uPjxkaXYgY2xhc3M9XCJwaXAtbG9jYXRpb24tY29udGFpbmVyXCI+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4oZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTG9jYXRpb25zLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTG9jYXRpb25zLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnbG9jYXRpb25fZGlhbG9nL0xvY2F0aW9uRGlhbG9nLmh0bWwnLFxuICAgICc8bWQtZGlhbG9nIGNsYXNzPVwicGlwLWRpYWxvZyBwaXAtbG9jYXRpb24tZWRpdC1kaWFsb2cgbGF5b3V0LWNvbHVtblwiIG1kLXRoZW1lPVwie3skY3RybC50aGVtZX19XCI+PGRpdiBjbGFzcz1cInBpcC1oZWFkZXIgbGF5b3V0LWNvbHVtbiBsYXlvdXQtYWxpZ24tc3RhcnQtc3RhcnRcIj48bWQtcHJvZ3Jlc3MtbGluZWFyIG5nLXNob3c9XCIkY3RybC50cmFuc2FjdGlvbi5idXN5KClcIiBtZC1tb2RlPVwiaW5kZXRlcm1pbmF0ZVwiIGNsYXNzPVwicGlwLXByb2dyZXNzLXRvcFwiPjwvbWQtcHJvZ3Jlc3MtbGluZWFyPjxoMyBjbGFzcz1cImZsZXhcIj57eyBcXCdMT0NBVElPTl9TRVRfTE9DQVRJT05cXCcgfCB0cmFuc2xhdGUgfX08L2gzPjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtZm9vdGVyXCI+PGRpdiBjbGFzcz1cImxheW91dC1yb3cgbGF5b3V0LWFsaWduLXN0YXJ0LWNlbnRlclwiPjxtZC1idXR0b24gY2xhc3M9XCJtZC1hY2NlbnRcIiBuZy1jbGljaz1cIiRjdHJsLm9uQWRkUGluKClcIiBuZy1zaG93PVwiJGN0cmwubG9jYXRpb25Qb3MgPT0gbnVsbFwiIG5nLWRpc2FibGVkPVwiJGN0cmwudHJhbnNhY3Rpb24uYnVzeSgpXCIgYXJpYS1sYWJlbD1cInt7IDo6XFwnTE9DQVRJT05fQUREX1BJTlxcJyB9fVwiPnt7IDo6XFwnTE9DQVRJT05fQUREX1BJTlxcJyB8IHRyYW5zbGF0ZSB9fTwvbWQtYnV0dG9uPjxtZC1idXR0b24gY2xhc3M9XCJtZC1hY2NlbnRcIiBuZy1jbGljaz1cIiRjdHJsLm9uUmVtb3ZlUGluKClcIiBuZy1zaG93PVwiJGN0cmwubG9jYXRpb25Qb3MgIT0gbnVsbFwiIG5nLWRpc2FibGVkPVwiJGN0cmwudHJhbnNhY3Rpb24uYnVzeSgpXCIgYXJpYS1sYWJlbD1cInt7IDo6XFwnTE9DQVRJT05fUkVNT1ZFX1BJTlxcJyB9fVwiPnt7IDo6XFwnTE9DQVRJT05fUkVNT1ZFX1BJTlxcJyB8IHRyYW5zbGF0ZSB9fTwvbWQtYnV0dG9uPjwvZGl2PjxkaXYgY2xhc3M9XCJmbGV4XCI+PC9kaXY+PGRpdiBjbGFzcz1cImxheW91dC1yb3cgbGF5b3V0LWFsaWduLWVuZC1jZW50ZXJcIj48bWQtYnV0dG9uIG5nLWNsaWNrPVwiJGN0cmwub25DYW5jZWwoKVwiIGFyaWEtbGFiZWw9XCJ7eyA6OlxcJ0NBTkNFTFxcJyB9fVwiPnt7IDo6XFwnQ0FOQ0VMXFwnIHwgdHJhbnNsYXRlIH19PC9tZC1idXR0b24+PG1kLWJ1dHRvbiBjbGFzcz1cIm1kLWFjY2VudFwiIG5nLWNsaWNrPVwiJGN0cmwub25BcHBseSgpXCIgbmctZGlzYWJsZWQ9XCIkY3RybC50cmFuc2FjdGlvbi5idXN5KClcIiBhcmlhLWxhYmVsPVwie3sgOjpcXCdBUFBMWVxcJyB9fVwiPnt7IDo6XFwnQVBQTFlcXCcgfCB0cmFuc2xhdGUgfX08L21kLWJ1dHRvbj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLWJvZHlcIj48ZGl2IGNsYXNzPVwicGlwLWxvY2F0aW9uLWNvbnRhaW5lclwiPjwvZGl2PjxtZC1idXR0b24gY2xhc3M9XCJtZC1pY29uLWJ1dHRvbiBtZC1mYWIgcGlwLXpvb20taW5cIiBuZy1jbGljaz1cIiRjdHJsLm9uWm9vbUluKClcIiBhcmlhLWxhYmVsPVwie3sgOjpcXCdMT0NBVElPTl9aT09NX0lOXFwnIH19XCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczpwbHVzXCI+PC9tZC1pY29uPjwvbWQtYnV0dG9uPjxtZC1idXR0b24gY2xhc3M9XCJtZC1pY29uLWJ1dHRvbiBtZC1mYWIgcGlwLXpvb20tb3V0XCIgbmctY2xpY2s9XCIkY3RybC5vblpvb21PdXQoKVwiIGFyaWEtbGFiZWw9XCJ7eyA6OlxcJ0xPQ0FUSU9OX1pPT01fT1VUXFwnIH19XCI+PG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczptaW51c1wiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48bWQtYnV0dG9uIGNsYXNzPVwibWQtaWNvbi1idXR0b24gbWQtZmFiIHBpcC1zZXQtbG9jYXRpb25cIiBuZy1jbGljaz1cIiRjdHJsLm9uU2V0TG9jYXRpb24oKVwiIGFyaWEtbGFiZWw9XCJ7eyA6OlxcJ0xPQ0FUSU9OX1NFVF9MT0NBVElPTlxcJyB9fVwiIG5nLXNob3c9XCJzdXBwb3J0U2V0XCIgbmctZGlzYWJsZWQ9XCJ0cmFuc2FjdGlvbi5idXN5KClcIj48bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOnRhcmdldFwiPjwvbWQtaWNvbj48L21kLWJ1dHRvbj48L2Rpdj48L21kLWRpYWxvZz4nKTtcbn1dKTtcbn0pKCk7XG5cbihmdW5jdGlvbihtb2R1bGUpIHtcbnRyeSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBMb2NhdGlvbnMuVGVtcGxhdGVzJyk7XG59IGNhdGNoIChlKSB7XG4gIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCdwaXBMb2NhdGlvbnMuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCdsb2NhdGlvbl9lZGl0L0xvY2F0aW9uRWRpdC5odG1sJyxcbiAgICAnPG1kLWlucHV0LWNvbnRhaW5lciBjbGFzcz1cIm1kLWJsb2NrXCI+PGxhYmVsPnt7IFxcJ0xPQ0FUSU9OXFwnIHwgdHJhbnNsYXRlIH19PC9sYWJlbD4gPGlucHV0IG5nLW1vZGVsPVwiJGN0cmwucGlwTG9jYXRpb25OYW1lXCIgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkXCI+PC9tZC1pbnB1dC1jb250YWluZXI+PGRpdiBjbGFzcz1cInBpcC1sb2NhdGlvbi1lbXB0eVwiIGxheW91dD1cImNvbHVtblwiIGxheW91dC1hbGlnbj1cImNlbnRlciBjZW50ZXJcIj48bWQtYnV0dG9uIGNsYXNzPVwibWQtcmFpc2VkXCIgbmctZGlzYWJsZWQ9XCIkY3RybC5uZ0Rpc2FibGVkXCIgbmctY2xpY2s9XCIkY3RybC5vblNldExvY2F0aW9uKClcIiBhcmlhLWxhYmVsPVwiTE9DQVRJT05fQUREX0xPQ0FUSU9OXCI+PHNwYW4gY2xhc3M9XCJpY29uLWxvY2F0aW9uXCI+PC9zcGFuPiB7e1xcJ0xPQ0FUSU9OX0FERF9MT0NBVElPTlxcJyB8IHRyYW5zbGF0ZSB9fTwvbWQtYnV0dG9uPjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtbG9jYXRpb24tY29udGFpbmVyXCIgdGFiaW5kZXg9XCJ7eyAkY3RybC5uZ0Rpc2FibGVkID8gLTEgOiAwIH19XCIgbmctY2xpY2s9XCIkY3RybC5vbk1hcENsaWNrKCRldmVudClcIiBuZy1rZXlwcmVzcz1cIiRjdHJsLm9uTWFwS2V5UHJlc3MoJGV2ZW50KVwiPjwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGlwLXdlYnVpLWxvY2F0aW9ucy1odG1sLm1pbi5qcy5tYXBcbiJdfQ=="}