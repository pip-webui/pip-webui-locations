{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/TranslateFilter.ts","src/index.ts","src/location/Location.ts","src/location_dialog/LocationDialog.ts","src/location_dialog/LocationDialogParams.ts","src/location_dialog/index.ts","src/location_edit/LocationEdit.ts","src/location_ip/LocationIp.ts","src/location_map/LocationMap.ts","temp/pip-webui-locations-html.js"],"names":[],"mappings":"AAAA;ACAA,CAAC;IACG,yBAAyB,SAAS;QAC9B,IAAI,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;cAC1C,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QAE3C,MAAM,CAAC,UAAU,GAAG;YAChB,MAAM,CAAC,YAAY,GAAI,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC;QACpE,CAAC,CAAA;IACL,CAAC;IAED,OAAO;SACF,MAAM,CAAC,wBAAwB,EAAE,EAAE,CAAC;SACpC,MAAM,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;AAC9C,CAAC;;;ACbA,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE;IAC5B,aAAa;IACb,gBAAgB;IAChB,eAAe;IACf,uBAAuB;IACvB,iBAAiB;IACjB,wBAAwB;CAC3B,CAAC,CAAC;;;ACPH,CAAC;IAaG,IAAM,gBAAgB,GAAsB;QACxC,eAAe,EAAE,GAAG;QACpB,cAAc,EAAE,GAAG;QACnB,mBAAmB,EAAE,GAAG;QACxB,WAAW,EAAE,GAAG;QAChB,SAAS,EAAE,GAAG;QACd,WAAW,EAAE,GAAG;QAChB,iBAAiB,EAAE,GAAG;KACzB,CAAA;IAED;QAAA;QAWA,CAAC;QAAD,8BAAC;IAAD,CAXA,AAWC,IAAA;IAED;QAcI,4BACY,QAAgB,EAChB,QAA4B,EAC5B,MAAiB;YAEzB,UAAU,CAAC;YAJH,aAAQ,GAAR,QAAQ,CAAQ;YAChB,aAAQ,GAAR,QAAQ,CAAoB;YAC5B,WAAM,GAAN,MAAM,CAAW;YAVtB,YAAO,GAAY,IAAI,CAAC;YAc3B,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QACtC,CAAC;QAEM,sCAAS,GAAhB;YAAA,iBAsBC;YArBG,IAAI,CAAC,QAAQ,CAAC;gBACV,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;gBACrD,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;gBAElE,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;oBAC5B,KAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;oBACzB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBAGrB,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAC,KAAK;wBAClB,KAAK,CAAC,eAAe,EAAE,CAAC;wBACxB,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC;4BAAC,MAAM,CAAC;wBAC7B,KAAI,CAAC,OAAO,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC;wBAC7B,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC;wBACpD,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC;4BAAC,KAAI,CAAC,WAAW,EAAE,CAAC;wBACrC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC;4BAAC,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;oBACnD,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,KAAI,CAAC,SAAS,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,sCAAS,GAAjB;YACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;gBAAC,MAAM,CAAC;YAG/B,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,CAAC;QACL,CAAC;QAEM,uCAAU,GAAjB,UAAkB,OAAgC;YAC9C,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS;kBAC5B,OAAO,CAAC,SAAS,CAAC,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC;YACtD,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC,mBAAmB;kBAChD,OAAO,CAAC,mBAAmB,CAAC,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC;YAChE,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW;kBAChC,OAAO,CAAC,WAAW,CAAC,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC;YACxD,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW;kBAChC,OAAO,CAAC,WAAW,CAAC,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC;YAExD,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe;sBACxC,OAAO,CAAC,eAAe,CAAC,YAAY,GAAG,IAAI,CAAC;gBAClD,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc;sBACtC,OAAO,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC;gBACjD,IAAI,CAAC,SAAS,EAAE,CAAC;YACrB,CAAC;QACL,CAAC;QAEO,qCAAQ,GAAhB;YAEI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QAC7B,CAAC;QAEO,wCAAW,GAAnB;YACI,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;YAGrC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK;mBACnB,QAAQ,IAAI,IAAI;mBAChB,QAAQ,CAAC,WAAW,IAAI,IAAI;mBAC5B,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,MAAM,CAAC;YACX,CAAC;YAGD,IAAM,WAAW,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CACtC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,EACvB,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAC1B,CAAC;YAGF,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC;YACnC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAG5C,IACI,UAAU,GAAG;gBACT,MAAM,EAAE,WAAW;gBACnB,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;gBACxC,gBAAgB,EAAE,IAAI;gBACtB,sBAAsB,EAAE,IAAI;gBAC5B,WAAW,EAAE,KAAK;gBAClB,SAAS,EAAE,KAAK;aACnB,EACD,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;YAE9D,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBACnB,QAAQ,EAAE,WAAW;gBACrB,GAAG,EAAE,GAAG;aACX,CAAC,CAAC;QACP,CAAC;QAAA,CAAC;QACN,yBAAC;IAAD,CA/HA,AA+HC,IAAA;IAED,IAAM,iBAAiB,GAAyB;QAC5C,QAAQ,EAAE,gBAAgB;QAC1B,WAAW,EAAE,wBAAwB;QACrC,UAAU,EAAE,kBAAkB;KACjC,CAAA;IAED,OAAO;SACF,MAAM,CAAC,aAAa,EAAE,EAAE,CAAC;SACzB,SAAS,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;AACrD,CAAC;;;;;;;;;AC3KD,CAAC;IACG;QASI,wCACY,MAAiB,EACzB,UAAgC,EAChC,QAAiC,EACzB,SAA0C,EAClD,WAAgB,EAChB,YAAoB;YANxB,iBAmDC;YAlDW,WAAM,GAAN,MAAM,CAAW;YAGjB,cAAS,GAAT,SAAS,CAAiC;YAZ9C,SAAI,GAAG,IAAI,CAAC;YACZ,YAAO,GAAG,IAAI,CAAC;YAiIhB,kBAAa,GAAG;gBAAA,iBAkBtB;gBAjBG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;oBAAC,MAAM,CAAC;gBAE/B,SAAS,CAAC,WAAW,CAAC,kBAAkB,CACpC,UAAC,QAAQ;oBACL,IAAM,WAAW,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;oBAChG,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;oBAC9C,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;oBACjC,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;oBACtB,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAC3C,CAAC,EACD;oBACI,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;gBACzB,CAAC,EAAE;oBACC,UAAU,EAAE,CAAC;oBACb,kBAAkB,EAAE,IAAI;oBACxB,OAAO,EAAE,IAAI;iBAChB,CAAC,CAAC;YACX,CAAC,CAAA;YApIG,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,WAAW,IAAI,WAAW,CAAC,IAAI,IAAI,OAAO;gBACzD,WAAW,CAAC,WAAW,IAAI,WAAW,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC;gBAC9D,WAAW,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;YACjC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,WAAW,IAAI,IAAI,CAAC;YAGhD,QAAQ,CAAC;gBACL,IAAI,YAAY,GAAG,CAAC,CAAC,mDAAmD,CAAC,CAAC;gBAE1E,IAAI,WAAW,GAAG,KAAI,CAAC,WAAW;oBAC9B,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAClB,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,EAC/B,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAClC,GAAG,IAAI,CAAC;gBAGb,IAAM,UAAU,GAAG;oBACf,MAAM,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;oBACpC,IAAI,EAAE,CAAC;oBACP,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;oBACxC,gBAAgB,EAAE,IAAI;iBACzB,CAAA;gBACD,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;oBACtB,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;oBAChC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;gBACzB,CAAC;gBAED,KAAI,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;gBAC7D,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;gBAG9C,QAAQ,CAAC;oBACL,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;gBACnD,CAAC,EAAE,IAAI,CAAC,CAAC;YACb,CAAC,EAAE,CAAC,CAAC,CAAC;YAEN,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE;gBAC3B,EAAE,CAAC,CAAC,KAAI,CAAC,IAAI,IAAI,IAAI,CAAC;oBAAC,MAAM,CAAC;gBAC9B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACnD,CAAC,CAAC,CAAC;QAEP,CAAC;QAEO,qDAAY,GAApB,UAAqB,WAAW;YAAhC,iBAoBC;YAnBG,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;gBAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5C,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,IAAI,CAAC,OAAO,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;oBAClC,QAAQ,EAAE,WAAW;oBACrB,GAAG,EAAE,IAAI,CAAC,IAAI;oBACd,SAAS,EAAE,IAAI;oBACf,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI;iBACxC,CAAC,CAAC;gBAEH,IAAI,YAAU,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC9B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAU,EAAE,SAAS,EAAE;oBACjD,IAAI,WAAW,GAAG,YAAU,CAAC,WAAW,EAAE,CAAC;oBAC3C,KAAI,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;gBAC3C,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACxB,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAEO,uDAAc,GAAtB,UAAuB,WAAW,EAAE,GAAG;YAAvC,iBAkBC;YAjBG,IAAI,CAAC,WAAW,GAAG;gBACf,IAAI,EAAE,OAAO;gBACb,WAAW,EAAE,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,WAAW,CAAC,GAAG,EAAE,CAAC;aACtD,CAAC;YACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YAEzB,IAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5C,QAAQ,CAAC,OAAO,CAAC;gBACb,MAAM,EAAE,WAAW;aACtB,EAAE,UAAC,OAAO,EAAE,MAAM;gBAEf,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAChC,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;gBACrD,CAAC;gBAED,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;YACzB,CAAC,CAAC,CAAA;QACN,CAAC;QAEM,iDAAQ,GAAf;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;gBAAC,MAAM,CAAC;YAE/B,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;YAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;YAC9C,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC;QAEM,oDAAW,GAAlB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;gBAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC7B,CAAC;QAEM,iDAAQ,GAAf;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;gBAAC,MAAM,CAAC;YAC/B,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;QAChC,CAAC;QAEM,kDAAS,GAAhB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;gBAAC,MAAM,CAAC;YAC/B,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACjC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;QAClD,CAAC;QAsBM,iDAAQ,GAAf;YACI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QAC5B,CAAC;QAEM,gDAAO,GAAd;YACI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAChB,QAAQ,EAAE,IAAI,CAAC,WAAW;gBAC1B,WAAW,EAAE,IAAI,CAAC,WAAW;gBAC7B,YAAY,EAAE,IAAI,CAAC,YAAY;aAClC,CAAC,CAAA;QACN,CAAC;QACL,qCAAC;IAAD,CAlKA,AAkKC,IAAA;IAED;QACI,+BACY,SAA0C;YAA1C,cAAS,GAAT,SAAS,CAAiC;QACnD,CAAC;QAEG,oCAAI,GAAX,UAAY,MAA4B,EAAE,eAAgB,EAAE,cAAe;YACvE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBACZ,UAAU,EAAE,8BAA4B;gBACxC,YAAY,EAAE,OAAO;gBACrB,WAAW,EAAE,qCAAqC;gBAClD,MAAM,EAAE;oBACJ,YAAY,EAAE,MAAM,CAAC,YAAY;oBACjC,WAAW,EAAE,MAAM,CAAC,WAAW;iBAClC;gBACD,mBAAmB,EAAE,IAAI;aAC5B,CAAC;iBACD,IAAI,CAAC,UAAC,MAAM;gBACT,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;oBAClB,eAAe,CAAC,MAAM,CAAC,CAAC;gBAC5B,CAAC;YACL,CAAC,EAAE;gBACC,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;oBACjB,cAAc,EAAE,CAAC;gBACrB,CAAC;YACL,CAAC,CAAC,CAAC;QACX,CAAC;QACL,4BAAC;IAAD,CA1BA,AA0BC,IAAA;IAED,IAAM,iBAAiB,GAAG,UAAS,SAAmC;QAClE,IAAI,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QAExF,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;YACL,YAAa,CAAC,eAAe,CAAC,IAAI,EAAE;gBAC1C,uBAAuB,EAAE,cAAc;gBACvC,uBAAuB,EAAE,cAAc;gBACvC,kBAAkB,EAAE,SAAS;gBAC7B,qBAAqB,EAAE,YAAY;aACtC,CAAC,CAAC;YACO,YAAa,CAAC,eAAe,CAAC,IAAI,EAAE;gBAC1C,uBAAuB,EAAE,yBAAyB;gBAClD,uBAAuB,EAAE,sBAAsB;gBAC/C,kBAAkB,EAAE,gBAAgB;gBACpC,qBAAqB,EAAE,cAAc;aACxC,CAAC,CAAC;QACP,CAAC;IACL,CAAC,CAAA;IAGD,OAAO;SACF,MAAM,CAAC,uBAAuB,CAAC;SAC/B,GAAG,CAAC,iBAAiB,CAAC;SACtB,OAAO,CAAC,uBAAuB,EAAE,qBAAqB,CAAC,CAAC;AACjE,CAAC;;;;;AC5ND;IAAA;IAKA,CAAC;IAAD,2BAAC;AAAD,CALA,AAKC,IAAA;AALY,oDAAoB;;;;;ACAjC,OAAO,CAAC,MAAM,CAAC,uBAAuB,EAAE,CAAC,YAAY,EAAE,wBAAwB,CAAC,CAAC,CAAC;AAElF,4BAAyB;;;;;ACAzB,CAAC;IAWG,IAAM,oBAAoB,GAA0B;QAChD,eAAe,EAAE,GAAG;QACpB,cAAc,EAAE,GAAG;QACnB,iBAAiB,EAAE,GAAG;QACtB,UAAU,EAAE,GAAG;QACf,UAAU,EAAE,GAAG;KAClB,CAAA;IAED;QAAA;QASA,CAAC;QAAD,kCAAC;IAAD,CATA,AASC,IAAA;IAED;QAYI,gCACY,QAAgB,EAChB,MAAiB,EACjB,qBAA6C;YAHzD,iBAQC;YAPW,aAAQ,GAAR,QAAQ,CAAQ;YAChB,WAAM,GAAN,MAAM,CAAW;YACjB,0BAAqB,GAArB,qBAAqB,CAAwB;YAErD,IAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC,QAAQ,CAAC;gBACzC,KAAI,CAAC,iBAAiB,CAAA;YAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;QACb,CAAC;QAEM,0CAAS,GAAhB;YAAA,iBA8BC;YA7BG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YAEpG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;YAC3D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;YACtE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAGvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,uBAAuB,EACtC,UAAC,QAAQ,EAAE,QAAQ;gBACf,EAAE,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACxB,KAAI,CAAC,0BAA0B,EAAE,CAAC;gBACtC,CAAC;YACL,CAAC,CACJ,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,sBAAsB,EACrC;gBACI,KAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC,CACJ,CAAC;YAGF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;YAG5C,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,CAAC;QACL,CAAC;QAEM,2CAAU,GAAjB,UAAkB,OAAoC;YAClD,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,YAAY,GAAG,KAAK,CAAC;QACnF,CAAC;QAEO,yCAAQ,GAAhB;YAEI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAGvB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC;QAEO,4CAAW,GAAnB;YAEI,IAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC;YACrC,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,WAAW,IAAI,IAAI,IAAI,QAAQ,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACtF,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,MAAM,CAAC;YACX,CAAC;YAGD,IAAM,WAAW,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CACtC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,EACvB,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAC1B,CAAC;YAGF,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAG9C,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;YAGlB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAG5C,IAAM,UAAU,GAAG;gBACX,MAAM,EAAE,WAAW;gBACnB,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;gBACxC,gBAAgB,EAAE,IAAI;gBACtB,sBAAsB,EAAE,IAAI;gBAC5B,WAAW,EAAE,KAAK;gBAClB,SAAS,EAAE,KAAK;aACnB,EACD,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,EACzD,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAC5B,QAAQ,EAAE,WAAW;gBACrB,GAAG,EAAE,GAAG;aACX,CAAC,CAAC;QACX,CAAC;QAEO,kDAAiB,GAAzB;YACI,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC;YAE1C,EAAE,CAAC,CAAC,YAAY,IAAI,EAAE,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;gBACrB,MAAM,CAAC;YACX,CAAC;YAED,IAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5C,QAAQ,CAAC,OAAO,CAAC;gBACb,OAAO,EAAE,YAAY;aACxB,EAAE,UAAU,OAAO,EAAE,MAAM;gBACxB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;oBAEf,EAAE,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;wBAE3C,EAAE,CAAC,CAAC,OAAO,KAAK,IAAI,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;4BAC3B,IAAI,CAAC,QAAQ,EAAE,CAAC;4BAChB,MAAM,CAAC;wBACX,CAAC;wBAED,IAAM,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,EAAE,EACtC,UAAQ,GAAG,QAAQ,CAAC,QAAQ,IAAI,EAAE,CAAC;wBAGvC,EAAE,CAAC,CAAC,UAAQ,CAAC,GAAG,KAAK,IAAI,IAAI,UAAQ,CAAC,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC;4BACjD,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;4BAC3B,IAAI,CAAC,QAAQ,EAAE,CAAC;4BAChB,MAAM,CAAC;wBACX,CAAC;wBAED,IAAI,CAAC,cAAc,GAAG;4BAClB,IAAI,EAAE,OAAO;4BACb,WAAW,EAAE;gCACT,QAAQ,EAAE,UAAQ,CAAC,GAAG,EAAE;gCACxB,UAAU,EAAE,UAAQ,CAAC,GAAG,EAAE;6BAC7B;yBACJ,CAAC;wBACF,IAAI,CAAC,WAAW,EAAE,CAAC;oBACvB,CAAC;oBACD,IAAI,CAAC,CAAC;wBACF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;wBAC3B,IAAI,CAAC,QAAQ,EAAE,CAAC;oBACpB,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QAAA,CAAC;QAEK,8CAAa,GAApB;YAAA,iBAkCC;YAjCG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,MAAM,CAAC;YAE5B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;gBACxB,YAAY,EAAE,IAAI,CAAC,eAAe;gBAClC,WAAW,EAAE,IAAI,CAAC,cAAc;aACnC,EACD,UAAC,MAAM;gBACH,IACI,QAAQ,GAAG,MAAM,CAAC,QAAQ,EAC1B,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;gBAGvC,EAAE,CAAC,CAAC,KAAI,CAAC,cAAc,IAAI,KAAI,CAAC,cAAc,CAAC,IAAI,IAAI,OAAO;oBAC1D,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC;oBAC3C,QAAQ,IAAI,QAAQ,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC;oBAC5C,CAAC,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;oBACvE,CAAC,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM;oBACvE,CAAC,YAAY,KAAK,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBAC1C,MAAM,CAAC;gBACX,CAAC;gBAED,KAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;gBAC/B,KAAI,CAAC,eAAe,GAAG,YAAY,CAAC;gBAEpC,EAAE,CAAC,CAAC,YAAY,KAAK,IAAI,IAAI,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;oBAC7C,KAAI,CAAC,eAAe;wBAChB,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;4BACpC,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBACnD,CAAC;gBACD,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YACjC,CAAC,CACJ,CAAC;QACN,CAAC;QAAA,CAAC;QAEK,2CAAU,GAAjB,UAAkB,MAAM;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,MAAM,CAAC;YAE5B,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;YAC7B,IAAI,CAAC,aAAa,EAAE,CAAC;QAEzB,CAAC;QAAA,CAAC;QAEK,8CAAa,GAApB,UAAqB,MAAM;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,MAAM,CAAC;YAE5B,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,IAAI,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,aAAa,EAAE,CAAC;YAEzB,CAAC;QACL,CAAC;QAAA,CAAC;QACN,6BAAC;IAAD,CArNA,AAqNC,IAAA;IAED,IAAM,YAAY,GAAyB;QACvC,QAAQ,EAAE,oBAAoB;QAC9B,WAAW,EAAE,iCAAiC;QAC9C,UAAU,EAAE,sBAAsB;KACrC,CAAA;IAED,OAAO;SACF,MAAM,CAAC,iBAAiB,EAAE,CAAC,uBAAuB,CAAC,CAAC;SACpD,SAAS,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC;AAEpD,CAAC;;;AC/PD,CAAC;IASG,IAAM,kBAAkB,GAAwB;QAC5C,YAAY,EAAE,GAAG;QACjB,YAAY,EAAE,GAAG;QACjB,SAAS,EAAE,GAAG;KACjB,CAAA;IAaD;QAAA;QAOA,CAAC;QAAD,gCAAC;IAAD,CAPA,AAOC,IAAA;IAED;QAQI,8BACI,QAAgB,EACR,KAAsB;YAAtB,UAAK,GAAL,KAAK,CAAiB;YAE9B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;YACjE,QAAQ,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YACrC,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC;QAEM,yCAAU,GAAjB,UAAkB,OAAkC;YAChD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC;YAErF,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;gBACjG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC7B,CAAC;QACL,CAAC;QAEO,uCAAQ,GAAhB;YAEI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC;QAEO,0CAAW,GAAnB,UAAoB,QAAQ,EAAE,SAAS;YAEnC,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,MAAM,CAAC;YACX,CAAC;YAGD,IAAI,WAAW,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CACpC,QAAQ,EACR,SAAS,CACZ,CAAC;YAGF,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAG5C,IACI,UAAU,GAAG;gBACT,MAAM,EAAE,WAAW;gBACnB,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;gBACxC,gBAAgB,EAAE,IAAI;gBACtB,sBAAsB,EAAE,IAAI;gBAC5B,WAAW,EAAE,KAAK;gBAClB,SAAS,EAAE,KAAK;aACnB,EACD,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;YAE9D,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBACnB,QAAQ,EAAE,WAAW;gBACrB,GAAG,EAAE,GAAG;aACX,CAAC,CAAC;QACP,CAAC;QAEO,gDAAiB,GAAzB;YAAA,iBAoCC;YAnCG,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;YAEpC,EAAE,CAAC,CAAC,SAAS,IAAI,EAAE,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,MAAM,CAAC;YACX,CAAC;YAED,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,6BAA6B,GAAG,SAAS,CAAC;iBACpD,OAAO,CAAC,UAAC,QAAyB;gBAC/B,EAAE,CAAC,CAAC,QAAQ,IAAI,IAAI;oBAChB,QAAQ,CAAC,QAAQ,IAAI,IAAI;oBACzB,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;oBAE7B,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;oBAExD,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;wBACpB,IAAM,SAAS,GAAG;4BACd,IAAI,EAAE,QAAQ,CAAC,IAAI;4BACnB,UAAU,EAAE,QAAQ,CAAC,UAAU;4BAC/B,MAAM,EAAE,QAAQ,CAAC,UAAU;4BAC3B,OAAO,EAAE,QAAQ,CAAC,OAAO;4BACzB,WAAW,EAAE,QAAQ,CAAC,WAAW;4BACjC,OAAO,EAAE,QAAQ,CAAC,WAAW;yBAChC,CAAC;wBACF,KAAI,CAAC,YAAY,CAAC;4BACd,SAAS,EAAE,SAAS;yBACvB,CAAC,CAAC;oBACP,CAAC;gBACL,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,QAAQ,EAAE,CAAC;gBACpB,CAAC;YACL,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,QAAQ;gBACZ,KAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,CAAC,CAAC,CAAC;QACX,CAAC;QACL,2BAAC;IAAD,CA1GA,AA0GC,IAAA;IAED,IAAM,UAAU,GAAyB;QACrC,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,4CAA4C;QACtD,UAAU,EAAE,oBAAoB;KACnC,CAAA;IAED,OAAO;SACF,MAAM,CAAC,eAAe,EAAE,EAAE,CAAC;SAC3B,SAAS,CAAC,eAAe,EAAE,UAAU,CAAC,CAAC;AAChD,CAAC;;;AC1JD,CAAC;IAYG,IAAM,mBAAmB,GAAyB;QAC9C,cAAc,EAAE,GAAG;QACnB,WAAW,EAAE,GAAG;QAChB,cAAc,EAAE,GAAG;QACnB,UAAU,EAAE,GAAG;QACf,SAAS,EAAE,GAAG;KACjB,CAAA;IAED;QAAA;QAQA,CAAC;QAAD,iCAAC;IAAD,CARA,AAQC,IAAA;IAED;QAUI,+BACY,QAAgB;YAAhB,aAAQ,GAAR,QAAQ,CAAQ;YAHpB,eAAU,GAAQ,IAAI,CAAC;YAK3B,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,QAAQ,CAAC,yBAAyB,CAAC,CAAC;YACjE,QAAQ,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAC1C,CAAC;QAEM,0CAAU,GAAjB,UAAkB,OAAmC;YACjD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC;YACrF,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC;YACpG,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC,YAAY,IAAI,KAAK,GAAG,KAAK,CAAC;YAExF,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,CAAE,CAAC;gBAC5B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAC1C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAC7C,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC;gBACzG,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;gBAE7F,IAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC;QACL,CAAC;QAEO,wCAAQ,GAAhB;YAEI,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAC3B,CAAC;QAEO,6CAAa,GAArB,UAAsB,GAAG;YACrB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,WAAW,IAAI,IAAI,IAAI,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACnF,CAAC;QAEO,oDAAoB,GAA5B,UAA6B,GAAG;YAC5B,IAAM,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAChC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,EAClB,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CACrB,CAAC;YAEF,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACtB,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YAE1B,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAEO,2CAAW,GAAnB;YAAA,iBA8DC;YA7DG,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,EACjC,MAAM,GAAG,EAAE,EACX,WAAW,GAAG,IAAI,CAAC,cAAc,IAAI,KAAK,CAAC;YAG/C,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACzD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC,CAAC;YACtD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC5D,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,UAAC,GAAG;wBAClB,EAAE,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;4BAC1B,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;wBAChD,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;YACL,CAAC;YAED,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,QAAQ,EAAE,CAAC;gBAChB,MAAM,CAAC;YACX,CAAC;YAGD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;gBAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;YAC9C,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAG5C,IAAM,UAAU,GAAG;gBACX,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;gBACjB,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;gBACxC,gBAAgB,EAAE,IAAI;gBACtB,sBAAsB,EAAE,IAAI;gBAC5B,WAAW,EAAE,WAAW;gBACxB,SAAS,EAAE,WAAW;aACzB,EACD,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,EACzD,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;YAG5C,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,UAAC,KAAK;gBACjB,IAAM,IAAI,GAAG;oBACT,IAAI,EAAE,KAAI,CAAC,WAAW;oBACtB,SAAS,EAAE,KAAK,CAAC,IAAI,IAAI,SAAS;oBAClC,WAAW,EAAE,CAAC;oBACd,KAAK,EAAE,CAAC;oBACR,WAAW,EAAE,KAAK,CAAC,MAAM,IAAI,OAAO;oBACpC,YAAY,EAAE,CAAC;iBAClB,CAAC;gBAEF,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;oBACnB,QAAQ,EAAE,KAAK;oBACf,GAAG,EAAE,GAAG;oBACR,IAAI,EAAE,KAAI,CAAC,WAAW,GAAG,IAAI,GAAG,IAAI;iBACvC,CAAC,CAAC;gBACH,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YAGH,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;gBAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACjD,CAAC;QACL,4BAAC;IAAD,CAzHA,AAyHC,IAAA;IAED,IAAM,WAAW,GAAyB;QACtC,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE,4CAA4C;QACtD,UAAU,EAAE,qBAAqB;KACpC,CAAA;IAED,OAAO;SACF,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC;SAC5B,SAAS,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;AAClD,CAAC;;;AClfile":"pip-webui-locations.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\n    function translateFilter($injector) {\n        let pipTranslate = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return function (key) {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    }\n\n    angular\n        .module('pipLocations.Translate', [])\n        .filter('translate', translateFilter);\n}","﻿angular.module('pipLocations', [\n    'pipLocation',\n    'pipLocationMap',\n    'pipLocationIp',\n    'pipLocationEditDialog',\n    'pipLocationEdit',\n    'pipLocations.Translate'\n]);","{\n    interface ILocationBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipShowLocationIcon: any;\n        pipCollapse: any;\n        pipRebind: any;\n        pipDisabled: any;\n        pipLocationResize: any;\n    }\n\n    const LocationBindings: ILocationBindings = {\n        pipLocationName: '<',\n        pipLocationPos: '<',\n        pipShowLocationIcon: '<',\n        pipCollapse: '<',\n        pipRebind: '<',\n        pipDisabled: '<',\n        pipLocationResize: '&'\n    }\n\n    class LocationBindingsChanges implements ng.IOnChangesObject, ILocationBindings {\n        [key: string]: any;\n\n        pipLocationName: ng.IChangesObject < string > ;\n        pipLocationPos: ng.IChangesObject < any > ;\n        pipShowLocationIcon: ng.IChangesObject < boolean > ;\n        pipCollapse: ng.IChangesObject < boolean > ;\n        pipRebind: ng.IChangesObject < boolean > ;\n        pipDisabled: ng.IChangesObject < boolean > ;\n\n        pipLocationResize: any;\n    }\n\n    class LocationController implements ng.IController, ILocationBindings {\n        public pipLocationName: string;\n        public pipLocationPos: any;\n        public pipShowLocationIcon: boolean;\n        public pipCollapse: boolean;\n        public pipRebind: boolean;\n        public pipDisabled: boolean;\n        public showMap: boolean = true;\n        public pipLocationResize: Function;\n\n        private name: JQuery;\n        private mapContainer: JQuery;\n        private mapControl: JQuery;\n\n        constructor(\n            private $element: JQuery,\n            private $timeout: ng.ITimeoutService,\n            private $scope: ng.IScope\n        ) {\n            \"ngInject\";\n            // Add class\n            $element.addClass('pip-location');\n        }\n\n        public $postLink() {\n            this.$timeout(() => {\n                this.name = this.$element.find('.pip-location-name');\n                this.mapContainer = this.$element.find('.pip-location-container');\n\n                if (this.pipCollapse === true) {\n                    this.mapContainer.hide();\n                    this.showMap = false;\n\n                    // Process user click\n                    this.name.click((event) => {\n                        event.stopPropagation();\n                        if (this.pipDisabled) return;\n                        this.showMap = !this.showMap;\n                        this.mapContainer[this.showMap ? 'show' : 'hide']();\n                        if (this.showMap) this.generateMap();\n                        if (!this.$scope.$$phase) this.$scope.$apply();\n                    });\n                }\n\n                this.redrawMap();\n            });\n        }\n\n        private redrawMap() {\n            if (!this.mapContainer) return;\n\n            // Visualize map\n            if (this.pipLocationPos && this.showMap === true) {\n                this.generateMap();\n            } else {\n                this.clearMap();\n            }\n        }\n\n        public $onChanges(changes: LocationBindingsChanges) {\n            this.pipRebind = changes.pipRebind \n                ? changes.pipRebind.currentValue || false : false;\n            this.pipShowLocationIcon = changes.pipShowLocationIcon \n                ? changes.pipShowLocationIcon.currentValue || false : false;\n            this.pipCollapse = changes.pipCollapse \n                ? changes.pipCollapse.currentValue || false : false;\n            this.pipDisabled = changes.pipDisabled \n                ? changes.pipDisabled.currentValue || false : false;\n\n            if (this.pipRebind) {\n                this.pipLocationName = changes.pipLocationName \n                    ? changes.pipLocationName.currentValue : null;\n                this.pipLocationPos = changes.pipLocationPos \n                    ? changes.pipLocationPos.currentValue : null;\n                this.redrawMap();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n            this.mapContainer.hide();\n        }\n\n        private generateMap() {\n            const location = this.pipLocationPos;\n\n            // Safeguard for bad coordinates\n            if (this.showMap === false \n                || location == null \n                || location.coordinates == null \n                || location.coordinates.length < 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            const coordinates = new google.maps.LatLng(\n                location.coordinates[0],\n                location.coordinates[1]\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapContainer.show();\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const\n                mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\n\n            new google.maps.Marker({\n                position: coordinates,\n                map: map\n            });\n        };\n    }\n\n    const LocationComponent: ng.IComponentOptions = {\n        bindings: LocationBindings,\n        templateUrl: 'location/Location.html',\n        controller: LocationController\n    }\n\n    angular\n        .module(\"pipLocation\", [])\n        .component('pipLocation', LocationComponent);\n}","import { ILocationDialogService } from './ILocationDialogService';\nimport { LocationDialogParams } from './LocationDialogParams';\n\n{\n    class LocationEditDialogController {\n        private _map = null;\n        private _marker = null;\n\n        public theme: string;\n        public locationPos;\n        public locationName;\n        public supportSet: boolean;\n\n        constructor(\n            private $scope: ng.IScope,\n            $rootScope: ng.IRootScopeService,\n            $timeout: angular.ITimeoutService,\n            private $mdDialog: angular.material.IDialogService,\n            locationPos: any,\n            locationName: string\n        ) {\n            this.theme = $rootScope['$theme'];\n            this.locationPos = locationPos && locationPos.type == 'Point' &&\n                locationPos.coordinates && locationPos.coordinates.length == 2 ?\n                locationPos : null;\n            this.locationName = locationName;\n            this.supportSet = navigator.geolocation != null;\n\n            // Wait until dialog is initialized\n            $timeout(() => {\n                let mapContainer = $('.pip-location-edit-dialog .pip-location-container');\n                // Calculate coordinate of the center\n                let coordinates = this.locationPos ?\n                    new google.maps.LatLng(\n                        this.locationPos.coordinates[0],\n                        this.locationPos.coordinates[1]\n                    ) : null;\n\n                // Create the map with point marker\n                const mapOptions = {\n                    center: new google.maps.LatLng(0, 0),\n                    zoom: 1,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true\n                }\n                if (coordinates != null) {\n                    mapOptions.center = coordinates;\n                    mapOptions.zoom = 12;\n                }\n\n                this._map = new google.maps.Map(mapContainer[0], mapOptions);\n                this._marker = this.createMarker(coordinates);\n\n                // Fix resizing issue\n                $timeout(() => {\n                    google.maps.event.trigger(this._map, 'resize');\n                }, 1000);\n            }, 0);\n\n            $scope.$on('pipLayoutResized', () => {\n                if (this._map == null) return;\n                google.maps.event.trigger(this._map, 'resize');\n            });\n\n        }\n\n        private createMarker(coordinates) {\n            if (this._marker) this._marker.setMap(null);\n            if (coordinates) {\n                this._marker = new google.maps.Marker({\n                    position: coordinates,\n                    map: this._map,\n                    draggable: true,\n                    animation: google.maps.Animation.DROP\n                });\n\n                let thisMarker = this._marker;\n                google.maps.event.addListener(thisMarker, 'dragend', () => {\n                    let coordinates = thisMarker.getPosition();\n                    this.changeLocation(coordinates, null);\n                });\n            } else {\n                this._marker = null;\n            }\n\n            return this._marker;\n        }\n\n        private changeLocation(coordinates, tid) {\n            this.locationPos = {\n                type: 'Point',\n                coordinates: [coordinates.lat(), coordinates.lng()]\n            };\n            this.locationName = null;\n            // Read address\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode({\n                latLng: coordinates\n            }, (results, status) => {\n                // Process positive response\n                if (results && results.length > 0) {\n                    this.locationName = results[0].formatted_address;\n                }\n\n                this.$scope.$apply();\n            })\n        }\n        // Describe user actions\n        public onAddPin() {\n            if (this._map === null) return;\n\n            const coordinates = this._map.getCenter();\n            this._marker = this.createMarker(coordinates);\n            this.changeLocation(coordinates, null);\n        }\n\n        public onRemovePin() {\n            if (this._map === null) return;\n            this._marker = this.createMarker(null);\n            this.locationPos = null;\n            this.locationName = null;\n        }\n\n        public onZoomIn() {\n            if (this._map === null) return;\n            const zoom = this._map.getZoom();\n            this._map.setZoom(zoom + 1);\n        }\n\n        public onZoomOut() {\n            if (this._map === null) return;\n            const zoom = this._map.getZoom();\n            this._map.setZoom(zoom > 1 ? zoom - 1 : zoom);\n        }\n\n        public onSetLocation = function () {\n            if (this._map === null) return;\n\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const coordinates = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                    this._marker = this.createMarker(coordinates);\n                    this._map.setCenter(coordinates);\n                    this._map.setZoom(12);\n                    this.changeLocation(coordinates, null);\n                },\n                () => {\n                    this.$scope.$apply();\n                }, {\n                    maximumAge: 0,\n                    enableHighAccuracy: true,\n                    timeout: 5000\n                });\n        }\n\n        public onCancel(): void {\n            this.$mdDialog.cancel();\n        }\n\n        public onApply(): void {\n            this.$mdDialog.hide({\n                location: this.locationPos,\n                locationPos: this.locationPos,\n                locationName: this.locationName\n            })\n        }\n    }\n    \n    class LocationDialogService implements ILocationDialogService {\n        constructor(\n            private $mdDialog: angular.material.IDialogService\n        ) {}\n\n        public show(params: LocationDialogParams, successCallback?, cancelCallback?) {\n            this.$mdDialog.show({\n                    controller: LocationEditDialogController,\n                    controllerAs: '$ctrl',\n                    templateUrl: 'location_dialog/LocationDialog.html',\n                    locals: {\n                        locationName: params.locationName,\n                        locationPos: params.locationPos\n                    },\n                    clickOutsideToClose: true\n                })\n                .then((result) => {\n                    if (successCallback) {\n                        successCallback(result);\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    const LocationDialogRun = function($injector: ng.auto.IInjectorService) {\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            ( < any > pipTranslate).setTranslations('en', {\n                'LOCATION_ADD_LOCATION': 'Add location',\n                'LOCATION_SET_LOCATION': 'Set location',\n                'LOCATION_ADD_PIN': 'Add pin',\n                'LOCATION_REMOVE_PIN': 'Remove pin'\n            });\n            ( < any > pipTranslate).setTranslations('ru', {\n                'LOCATION_ADD_LOCATION': 'Добавить местоположение',\n                'LOCATION_SET_LOCATION': 'Определить положение',\n                'LOCATION_ADD_PIN': 'Добавить точку',\n                'LOCATION_REMOVE_PIN': 'Убрать точку'\n            });\n        }\n    }\n\n\n    angular\n        .module('pipLocationEditDialog')\n        .run(LocationDialogRun)\n        .service('pipLocationEditDialog', LocationDialogService);\n}","export class LocationDialogParams {\n    // Locations position\n    locationPos: any;\n    // Location name\n    locationName: string;\n}","angular.module('pipLocationEditDialog', ['ngMaterial', 'pipLocations.Templates']);\n\nimport './LocationDialog'","import { ILocationDialogService } from '../location_dialog/ILocationDialogService';\n\n{\n    interface ILocationEditBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipLocationHolder: any;\n        ngDisabled: any;\n        pipChanged: any;\n    }\n\n    const LocationEditBindings: ILocationEditBindings = {\n        pipLocationName: '=',\n        pipLocationPos: '=',\n        pipLocationHolder: '=',\n        ngDisabled: '<',\n        pipChanged: '&'\n    }\n\n    class LocationEditBindingsChanges implements ng.IOnChangesObject, ILocationEditBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipLocationHolder: any;\n        pipChanged: any;\n\n        ngDisabled: ng.IChangesObject<boolean>;\n    }\n\n    class LocationEditController implements ng.IController, ILocationEditBindings {\n        public pipLocationName: string;\n        public pipLocationPos: any;\n        public pipLocationHolder: boolean;\n        public ngDisabled: boolean;\n        public pipChanged: Function;\n\n        private empty: JQuery;\n        private mapContainer: JQuery;\n        private mapControl: any;\n        private defineCoordinatesDebounced: Function;\n\n        constructor(\n            private $element: JQuery,\n            private $scope: ng.IScope,\n            private pipLocationEditDialog: ILocationDialogService\n        ) {\n            this.defineCoordinatesDebounced = _.debounce(() => {\n                this.defineCoordinates\n            }, 2000);\n        }\n\n        public $postLink() {\n            this.$element.find('md-input-container').attr('md-no-float', (!!this.pipLocationHolder).toString());\n            // Set containers\n            this.empty = this.$element.children('.pip-location-empty');\n            this.mapContainer = this.$element.children('.pip-location-container');\n            this.mapControl = null;\n\n            // Add watchers\n            this.$scope.$watch('$ctrl.pipLocationName',\n                (newValue, oldValue) => {\n                    if (newValue !== oldValue) {\n                        this.defineCoordinatesDebounced();\n                    }\n                }\n            );\n            this.$scope.$watch('$ctrl.pipLocationPos',\n                () => {\n                    this.generateMap();\n                }\n            );\n\n            // Add class\n            this.$element.addClass('pip-location-edit');\n\n            // Visualize map\n            if (this.pipLocationPos) {\n                this.generateMap();\n            } else {\n                this.clearMap();\n            }\n        }\n\n        public $onChanges(changes: LocationEditBindingsChanges) {\n            this.ngDisabled = changes.ngDisabled ? changes.ngDisabled.currentValue : false; \n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n\n            // Toggle control visibility\n            this.mapContainer.hide();\n            this.empty.show();\n        }\n\n        private generateMap() {\n            // Safeguard for bad coordinates\n            const location = this.pipLocationPos;\n            if (location == null || location.coordinates == null || location.coordinates.length < 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            const coordinates = new google.maps.LatLng(\n                location.coordinates[0],\n                location.coordinates[1]\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n\n            // Toggle control visibility\n            this.mapContainer.show();\n            this.empty.hide();\n\n            // Add a new map\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\n                marker = new google.maps.Marker({\n                    position: coordinates,\n                    map: map\n                });\n        }\n\n        private defineCoordinates() {\n            const locationName = this.pipLocationName;\n\n            if (locationName == '') {\n                this.pipLocationPos = null;\n                this.clearMap();\n                this.$scope.$apply();\n                return;\n            }\n\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode({\n                address: locationName\n            }, function (results, status) {\n                this.$scope.$apply(function () {\n                    // Process response\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        // Check for empty results\n                        if (results === null || results.length === 0) {\n                            this.pipLocationPos = null;\n                            this.clearMap();\n                            return;\n                        }\n\n                        const geometry = results[0].geometry || {},\n                            location = geometry.location || {};\n\n                        // Check for empty results again\n                        if (location.lat === null || location.lng === null) {\n                            this.pipLocationPos = null;\n                            this.clearMap();\n                            return;\n                        }\n\n                        this.pipLocationPos = {\n                            type: 'Point',\n                            coordinates: {\n                                latitude: location.lat(),\n                                longtitude: location.lng()\n                            }\n                        };\n                        this.generateMap();\n                    }\n                    else {\n                        this.pipLocationPos = null;\n                        this.clearMap();\n                    }\n                });\n            });\n        };\n\n        public onSetLocation() {\n            if (this.ngDisabled) return;\n\n            this.pipLocationEditDialog.show({\n                    locationName: this.pipLocationName,\n                    locationPos: this.pipLocationPos\n                },\n                (result) => {\n                    const\n                        location = result.location,\n                        locationName = result.locationName;\n\n                    // Do not change anything if location is about the same\n                    if (this.pipLocationPos && this.pipLocationPos.type == 'Point' &&\n                        this.pipLocationPos.coordinates.length == 2 &&\n                        location && location.coordinates.length == 2 &&\n                        (this.pipLocationPos.coordinates[0] - location.coordinates[0]) < 0.0001 &&\n                        (this.pipLocationPos.coordinates[1] - location.coordinates[1]) < 0.0001 &&\n                        (locationName === this.pipLocationName)) {\n                        return;\n                    }\n\n                    this.pipLocationPos = location;\n                    this.pipLocationName = locationName;\n\n                    if (locationName === null && location !== null) {\n                        this.pipLocationName =\n                            '(' + result.location.coordinates[0] +\n                            ',' + result.location.coordinates[1] + ')';\n                    }\n                    this.pipChanged();\n                    this.mapContainer[0].focus();\n                }\n            );\n        };\n\n        public onMapClick($event) {\n            if (this.ngDisabled) return;\n\n            this.mapContainer[0].focus();\n            this.onSetLocation();\n            //$event.stopPropagation();\n        };\n\n        public onMapKeyPress($event) {\n            if (this.ngDisabled) return;\n\n            if ($event.keyCode == 13 || $event.keyCode == 32) {\n                this.onSetLocation();\n                //$event.stopPropagation();\n            }\n        };\n    }\n\n    const LocationEdit: ng.IComponentOptions = {\n        bindings: LocationEditBindings,\n        templateUrl: 'location_edit/LocationEdit.html',\n        controller: LocationEditController\n    }\n\n    angular\n        .module(\"pipLocationEdit\", ['pipLocationEditDialog'])\n        .component('pipLocationEdit', LocationEdit);\n\n}","declare let google: any;\n\n{\n    interface ILocationIpBindings {\n        [key: string]: any;\n\n        pipIpaddress: any;\n        pipExtraInfo: any;\n        pipRebind: any;\n    }\n\n    const LocationIpBindings: ILocationIpBindings = {\n        pipIpaddress: '<',\n        pipExtraInfo: '&',\n        pipRebind: '<'\n    }\n\n    interface IIpResponseInfo {\n        city: string;\n        regionCode: string | number;\n        regionName: string;\n        zipCode: string | number;\n        countryCode: string | number;\n        countryName: string;\n        latitude: string | number;\n        longitude: string | number;\n    }\n\n    class LocationIpBindingsChanges implements ng.IOnChangesObject, ILocationIpBindings {\n        [key: string]: any;\n\n        pipExtraInfo: any;\n\n        pipIpaddress: ng.IChangesObject < string > ;\n        pipRebind: ng.IChangesObject < boolean >\n    }\n\n    class LocationIpController implements ng.IController, ILocationIpBindings {\n        private mapContainer: JQuery;\n        private mapControl: any;\n\n        public pipExtraInfo: any;\n        public pipIpaddress: string;\n        public pipRebind: boolean;\n\n        constructor(\n            $element: JQuery,\n            private $http: ng.IHttpService\n        ) {\n            this.mapContainer = $element.children('.pip-location-container');\n            $element.addClass('pip-location-ip');\n            this.defineCoordinates();\n        }\n\n        public $onChanges(changes: LocationIpBindingsChanges) {\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\n\n            if (this.pipRebind === true) {\n                this.pipIpaddress = changes.pipIpaddress ? changes.pipIpaddress.currentValue : this.pipIpaddress;\n                this.defineCoordinates();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n        }\n\n        private generateMap(latitude, longitude) {\n            // Safeguard for bad coordinates\n            if (latitude == null || longitude == null) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            var coordinates = new google.maps.LatLng(\n                latitude,\n                longitude\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const\n                mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\n\n            new google.maps.Marker({\n                position: coordinates,\n                map: map\n            });\n        }\n\n        private defineCoordinates() {\n            const ipAddress = this.pipIpaddress;\n\n            if (ipAddress == '') {\n                this.clearMap();\n                return;\n            }\n\n            this.$http.get('https://freegeoip.net/json/' + ipAddress)\n                .success((response: IIpResponseInfo) => {\n                    if (response != null &&\n                        response.latitude != null &&\n                        response.longitude != null) {\n\n                        this.generateMap(response.latitude, response.longitude);\n\n                        if (this.pipExtraInfo) {\n                            const extraInfo = {\n                                city: response.city,\n                                regionCode: response.regionCode,\n                                region: response.regionName,\n                                zipCode: response.zipCode,\n                                countryCode: response.countryCode,\n                                country: response.countryName\n                            };\n                            this.pipExtraInfo({\n                                extraInfo: extraInfo\n                            });\n                        }\n                    } else {\n                        this.clearMap();\n                    }\n                })\n                .error((response) => {\n                    this.clearMap();\n                });\n        }\n    }\n\n    const LocationIp: ng.IComponentOptions = {\n        bindings: LocationIpBindings,\n        template: '<div class=\"pip-location-container\"></div>',\n        controller: LocationIpController\n    }\n\n    angular\n        .module(\"pipLocationIp\", [])\n        .component('pipLocationIp', LocationIp);\n}","{\n\n    interface ILocationMapBindings {\n        [key: string]: any;\n\n        pipLocationPos: any;\n        pipIconPath: any;\n        pipInteractive: any;\n        pipStretch: any;\n        pipRebind: any;\n    }\n\n    const LocationMapBindings: ILocationMapBindings = {\n        pipLocationPos: '<',\n        pipIconPath: '<',\n        pipInteractive: '<',\n        pipStretch: '<',\n        pipRebind: '<'\n    }\n\n    class LocationMapBindingsChanges implements ng.IOnChangesObject, ILocationMapBindings {\n        [key: string]: any;\n\n        pipLocationPos: ng.IChangesObject<any>;\n        pipIconPath: ng.IChangesObject<string>;\n        pipInteractive: ng.IChangesObject<boolean>;\n        pipStretch: ng.IChangesObject<boolean>;\n        pipRebind: ng.IChangesObject<boolean>;\n    }\n\n    class LocationMapController implements ng.IController, ILocationMapBindings {\n        public pipLocationPos: any;\n        public pipIconPath: string;\n        public pipInteractive: boolean;\n        public pipStretch: boolean;\n        public pipRebind: boolean;\n\n        private mapContainer: JQuery;\n        private mapControl: any = null;\n\n        constructor(\n            private $element: JQuery\n        ) {\n            this.mapContainer = $element.children('.pip-location-container');\n            $element.addClass('pip-location-map');\n        }\n\n        public $onChanges(changes: LocationMapBindingsChanges) {\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\n            this.pipInteractive = changes.pipInteractive ? changes.pipInteractive.currentValue || false : false;\n            this.pipStretch = changes.pipStretch ? changes.pipStretch.currentValue || false : false;\n\n            if (this.pipStretch === true)  {\n                this.mapContainer.addClass('stretch');\n            } else {\n                this.mapContainer.removeClass('stretch');\n            }\n\n            if (this.pipRebind === true) {\n                this.pipLocationPos = changes.pipLocationPos ? changes.pipLocationPos.currentValue : this.pipLocationPos;\n                this.pipIconPath = changes.pipIconPath ? changes.pipIconPath.currentValue : this.pipIconPath;\n\n                this.generateMap();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n        }\n\n        private checkLocation(loc) {\n            return !(loc == null || loc.coordinates == null || loc.coordinates.length < 0);\n        }\n\n        private determineCoordinates(loc) {\n            const point = new google.maps.LatLng(\n                loc.coordinates[0],\n                loc.coordinates[1]\n            );\n\n            point.fill = loc.fill;\n            point.stroke = loc.stroke;\n\n            return point;\n        }\n\n        private generateMap() {\n            const locations = this.pipLocationPos,\n                points = [],\n                interactive = this.pipInteractive || false;\n\n            // Safeguard for bad coordinates\n            if (this.checkLocation(locations) && !_.isArray(locations)) {\n                points.push(this.determineCoordinates(locations));\n            } else {\n                if (locations && _.isArray(locations) && locations.length > 0) {\n                    _.each(locations, (loc) => {\n                        if (this.checkLocation(loc)) {\n                            points.push(this.determineCoordinates(loc));\n                        }\n                    });\n                }\n            }\n\n            if (points.length === 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map\n            const mapOptions = {\n                    center: points[0],\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: interactive,\n                    draggable: interactive\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\n                bounds = new google.maps.LatLngBounds();\n\n            // Create markers\n            _.each(points, (point) => {\n                const icon = {\n                    path: this.pipIconPath,\n                    fillColor: point.fill || '#EF5350',\n                    fillOpacity: 1,\n                    scale: 1,\n                    strokeColor: point.stroke || 'white',\n                    strokeWeight: 5\n                };\n\n                new google.maps.Marker({\n                    position: point,\n                    map: map,\n                    icon: this.pipIconPath ? icon : null\n                });\n                bounds.extend(point);\n            });\n\n            // Auto-config of zoom and center\n            if (points.length > 1) map.fitBounds(bounds);\n        }\n    }\n\n    const LocationMap: ng.IComponentOptions = {\n        bindings: LocationMapBindings,\n        template: '<div class=\"pip-location-container\"></div>',\n        controller: LocationMapController\n    }\n\n    angular\n        .module(\"pipLocationMap\", [])\n        .component('pipLocationMap', LocationMap);\n}","(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location/Location.html',\n    '<div class=\"pip-location-name location-collapse\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"!$ctrl.pipCollapse\"\\n' +\n    '    ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\">\\n' +\n    '    <md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon>\\n' +\n    '    <span class=\"pip-location-text\">{{$ctrl.pipLocationName}}</span>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<md-button class=\"pip-location-name\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"$ctrl.pipCollapse\"\\n' +\n    '    ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\">\\n' +\n    '    <div class=\"layout-align-start-center layout-row w-stretch\">\\n' +\n    '        <md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon>\\n' +\n    '        <span class=\"pip-location-text flex\">{{$ctrl.pipLocationName}}</span>\\n' +\n    '        <md-icon md-svg-icon=\"icons:triangle-down\" class=\"flex-fixed\" ng-show=\"!$ctrl.showMap\"></md-icon>\\n' +\n    '        <md-icon md-svg-icon=\"icons:triangle-up\" class=\"flex-fixed\" ng-show=\"$ctrl.showMap\"></md-icon>\\n' +\n    '    </div>\\n' +\n    '</md-button>\\n' +\n    '\\n' +\n    '<div class=\"pip-location-container\">\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_edit/LocationEdit.html',\n    '<md-input-container class=\"md-block\">\\n' +\n    '    <label>{{ \\'LOCATION\\' | translate }}</label>\\n' +\n    '    <input ng-model=\"$ctrl.pipLocationName\" ng-disabled=\"$ctrl.ngDisabled\"/>\\n' +\n    '</md-input-container>\\n' +\n    '<div class=\"pip-location-empty\" layout=\"column\" layout-align=\"center center\">\\n' +\n    '    <md-button class=\"md-raised\" ng-disabled=\"$ctrl.ngDisabled\" ng-click=\"$ctrl.onSetLocation()\"\\n' +\n    '            aria-label=\"LOCATION_ADD_LOCATION\">\\n' +\n    '            <span class=\"icon-location\"></span> {{\\'LOCATION_ADD_LOCATION\\' | translate }}\\n' +\n    '    </md-button>\\n' +\n    '</div>\\n' +\n    '<div class=\"pip-location-container\" tabindex=\"{{ $ctrl.ngDisabled ? -1 : 0 }}\" \\n' +\n    '    ng-click=\"$ctrl.onMapClick($event)\" ng-keypress=\"$ctrl.onMapKeyPress($event)\">\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_dialog/LocationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-location-edit-dialog layout-column\" md-theme=\"{{$ctrl.theme}}\">\\n' +\n    '\\n' +\n    '    <div class=\"pip-header layout-column layout-align-start-start\">\\n' +\n    '        <md-progress-linear ng-show=\"$ctrl.transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\">\\n' +\n    '        </md-progress-linear>\\n' +\n    '        <h3 class=\"flex\">{{ \\'LOCATION_SET_LOCATION\\' | translate }}</h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-footer\">\\n' +\n    '        <div class=\"layout-row layout-align-start-center\">\\n' +\n    '            <md-button class=\"md-accent\" ng-click=\"$ctrl.onAddPin()\" ng-show=\"$ctrl.locationPos == null\"\\n' +\n    '                ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_ADD_PIN\\'  }}\">\\n' +\n    '                {{ ::\\'LOCATION_ADD_PIN\\' | translate }}\\n' +\n    '            </md-button>\\n' +\n    '            <md-button class=\"md-accent\" ng-click=\"$ctrl.onRemovePin()\" ng-show=\"$ctrl.locationPos != null\"\\n' +\n    '                ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_REMOVE_PIN\\'  }}\">\\n' +\n    '                {{ ::\\'LOCATION_REMOVE_PIN\\' | translate }}\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"flex\"></div>\\n' +\n    '        <div class=\"layout-row layout-align-end-center\">\\n' +\n    '            <md-button ng-click=\"$ctrl.onCancel()\" aria-label=\"{{ ::\\'CANCEL\\'  }}\">\\n' +\n    '                {{ ::\\'CANCEL\\' | translate }}\\n' +\n    '            </md-button>\\n' +\n    '            <md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\" ng-disabled=\"$ctrl.transaction.busy()\"\\n' +\n    '                aria-label=\"{{ ::\\'APPLY\\'  }}\">\\n' +\n    '                {{ ::\\'APPLY\\' | translate }}\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-body\">\\n' +\n    '        <div class=\"pip-location-container\"></div>\\n' +\n    '        <md-button class=\"md-icon-button md-fab pip-zoom-in\" ng-click=\"$ctrl.onZoomIn()\"\\n' +\n    '                   aria-label=\"{{ ::\\'LOCATION_ZOOM_IN\\'  }}\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:plus\"></md-icon>\\n' +\n    '        </md-button>\\n' +\n    '        <md-button class=\"md-icon-button md-fab pip-zoom-out\" ng-click=\"$ctrl.onZoomOut()\"\\n' +\n    '                   aria-label=\"{{ ::\\'LOCATION_ZOOM_OUT\\'  }}\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:minus\"></md-icon>\\n' +\n    '        </md-button>\\n' +\n    '        <md-button class=\"md-icon-button md-fab pip-set-location\" ng-click=\"$ctrl.onSetLocation()\"\\n' +\n    '                   aria-label=\"{{ ::\\'LOCATION_SET_LOCATION\\'  }}\"\\n' +\n    '                   ng-show=\"supportSet\" ng-disabled=\"transaction.busy()\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:target\"></md-icon>\\n' +\n    '        </md-button>\\n' +\n    '    </div>\\n' +\n    '</md-dialog>\\n' +\n    '');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-locations-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvZGVwZW5kZW5jaWVzL1RyYW5zbGF0ZUZpbHRlci50cyIsInNyYy9pbmRleC50cyIsInNyYy9sb2NhdGlvbi9Mb2NhdGlvbi50cyIsInNyYy9sb2NhdGlvbl9kaWFsb2cvTG9jYXRpb25EaWFsb2cudHMiLCJzcmMvbG9jYXRpb25fZGlhbG9nL0xvY2F0aW9uRGlhbG9nUGFyYW1zLnRzIiwic3JjL2xvY2F0aW9uX2RpYWxvZy9pbmRleC50cyIsInNyYy9sb2NhdGlvbl9lZGl0L0xvY2F0aW9uRWRpdC50cyIsInNyYy9sb2NhdGlvbl9pcC9Mb2NhdGlvbklwLnRzIiwic3JjL2xvY2F0aW9uX21hcC9Mb2NhdGlvbk1hcC50cyIsInRlbXAvcGlwLXdlYnVpLWxvY2F0aW9ucy1odG1sLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsQ0FBQztJQUNHLHlCQUF5QixTQUFTO1FBQzlCLElBQUksWUFBWSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO2NBQzFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBRTNDLE1BQU0sQ0FBQyxVQUFVLEdBQUc7WUFDaEIsTUFBTSxDQUFDLFlBQVksR0FBSSxZQUFZLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDcEUsQ0FBQyxDQUFBO0lBQ0wsQ0FBQztJQUVELE9BQU87U0FDRixNQUFNLENBQUMsd0JBQXdCLEVBQUUsRUFBRSxDQUFDO1NBQ3BDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsZUFBZSxDQUFDLENBQUM7QUFDOUMsQ0FBQzs7O0FDYkEsT0FBTyxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUU7SUFDNUIsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLGlCQUFpQjtJQUNqQix3QkFBd0I7Q0FDM0IsQ0FBQyxDQUFDOzs7QUNQSCxDQUFDO0lBYUcsSUFBTSxnQkFBZ0IsR0FBc0I7UUFDeEMsZUFBZSxFQUFFLEdBQUc7UUFDcEIsY0FBYyxFQUFFLEdBQUc7UUFDbkIsbUJBQW1CLEVBQUUsR0FBRztRQUN4QixXQUFXLEVBQUUsR0FBRztRQUNoQixTQUFTLEVBQUUsR0FBRztRQUNkLFdBQVcsRUFBRSxHQUFHO1FBQ2hCLGlCQUFpQixFQUFFLEdBQUc7S0FDekIsQ0FBQTtJQUVEO1FBQUE7UUFXQSxDQUFDO1FBQUQsOEJBQUM7SUFBRCxDQVhBLEFBV0MsSUFBQTtJQUVEO1FBY0ksNEJBQ1ksUUFBZ0IsRUFDaEIsUUFBNEIsRUFDNUIsTUFBaUI7WUFFekIsVUFBVSxDQUFDO1lBSkgsYUFBUSxHQUFSLFFBQVEsQ0FBUTtZQUNoQixhQUFRLEdBQVIsUUFBUSxDQUFvQjtZQUM1QixXQUFNLEdBQU4sTUFBTSxDQUFXO1lBVnRCLFlBQU8sR0FBWSxJQUFJLENBQUM7WUFjM0IsUUFBUSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN0QyxDQUFDO1FBRU0sc0NBQVMsR0FBaEI7WUFBQSxpQkFzQkM7WUFyQkcsSUFBSSxDQUFDLFFBQVEsQ0FBQztnQkFDVixLQUFJLENBQUMsSUFBSSxHQUFHLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7Z0JBQ3JELEtBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMseUJBQXlCLENBQUMsQ0FBQztnQkFFbEUsRUFBRSxDQUFDLENBQUMsS0FBSSxDQUFDLFdBQVcsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUM1QixLQUFJLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDO29CQUN6QixLQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztvQkFHckIsS0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBQyxLQUFLO3dCQUNsQixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7d0JBQ3hCLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxXQUFXLENBQUM7NEJBQUMsTUFBTSxDQUFDO3dCQUM3QixLQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsS0FBSSxDQUFDLE9BQU8sQ0FBQzt3QkFDN0IsS0FBSSxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDO3dCQUNwRCxFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsT0FBTyxDQUFDOzRCQUFDLEtBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQzt3QkFDckMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQzs0QkFBQyxLQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO29CQUNuRCxDQUFDLENBQUMsQ0FBQztnQkFDUCxDQUFDO2dCQUVELEtBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUNyQixDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7UUFFTyxzQ0FBUyxHQUFqQjtZQUNJLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztnQkFBQyxNQUFNLENBQUM7WUFHL0IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQy9DLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN2QixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ3BCLENBQUM7UUFDTCxDQUFDO1FBRU0sdUNBQVUsR0FBakIsVUFBa0IsT0FBZ0M7WUFDOUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsU0FBUztrQkFDNUIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxZQUFZLElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQztZQUN0RCxJQUFJLENBQUMsbUJBQW1CLEdBQUcsT0FBTyxDQUFDLG1CQUFtQjtrQkFDaEQsT0FBTyxDQUFDLG1CQUFtQixDQUFDLFlBQVksSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQ2hFLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFdBQVc7a0JBQ2hDLE9BQU8sQ0FBQyxXQUFXLENBQUMsWUFBWSxJQUFJLEtBQUssR0FBRyxLQUFLLENBQUM7WUFDeEQsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsV0FBVztrQkFDaEMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxZQUFZLElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQztZQUV4RCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztnQkFDakIsSUFBSSxDQUFDLGVBQWUsR0FBRyxPQUFPLENBQUMsZUFBZTtzQkFDeEMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO2dCQUNsRCxJQUFJLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxjQUFjO3NCQUN0QyxPQUFPLENBQUMsY0FBYyxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUM7Z0JBQ2pELElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUNyQixDQUFDO1FBQ0wsQ0FBQztRQUVPLHFDQUFRLEdBQWhCO1lBRUksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQzlDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDN0IsQ0FBQztRQUVPLHdDQUFXLEdBQW5CO1lBQ0ksSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztZQUdyQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxLQUFLLEtBQUs7bUJBQ25CLFFBQVEsSUFBSSxJQUFJO21CQUNoQixRQUFRLENBQUMsV0FBVyxJQUFJLElBQUk7bUJBQzVCLFFBQVEsQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDaEIsTUFBTSxDQUFDO1lBQ1gsQ0FBQztZQUdELElBQU0sV0FBVyxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQ3RDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQ3ZCLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQzFCLENBQUM7WUFHRixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO2dCQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDOUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDbkMsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUN6QixJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFHNUMsSUFDSSxVQUFVLEdBQUc7Z0JBQ1QsTUFBTSxFQUFFLFdBQVc7Z0JBQ25CLElBQUksRUFBRSxFQUFFO2dCQUNSLFNBQVMsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPO2dCQUN4QyxnQkFBZ0IsRUFBRSxJQUFJO2dCQUN0QixzQkFBc0IsRUFBRSxJQUFJO2dCQUM1QixXQUFXLEVBQUUsS0FBSztnQkFDbEIsU0FBUyxFQUFFLEtBQUs7YUFDbkIsRUFDRCxHQUFHLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1lBRTlELElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7Z0JBQ25CLFFBQVEsRUFBRSxXQUFXO2dCQUNyQixHQUFHLEVBQUUsR0FBRzthQUNYLENBQUMsQ0FBQztRQUNQLENBQUM7UUFBQSxDQUFDO1FBQ04seUJBQUM7SUFBRCxDQS9IQSxBQStIQyxJQUFBO0lBRUQsSUFBTSxpQkFBaUIsR0FBeUI7UUFDNUMsUUFBUSxFQUFFLGdCQUFnQjtRQUMxQixXQUFXLEVBQUUsd0JBQXdCO1FBQ3JDLFVBQVUsRUFBRSxrQkFBa0I7S0FDakMsQ0FBQTtJQUVELE9BQU87U0FDRixNQUFNLENBQUMsYUFBYSxFQUFFLEVBQUUsQ0FBQztTQUN6QixTQUFTLENBQUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLENBQUM7QUFDckQsQ0FBQzs7Ozs7Ozs7O0FDM0tELENBQUM7SUFDRztRQVNJLHdDQUNZLE1BQWlCLEVBQ3pCLFVBQWdDLEVBQ2hDLFFBQWlDLEVBQ3pCLFNBQTBDLEVBQ2xELFdBQWdCLEVBQ2hCLFlBQW9CO1lBTnhCLGlCQW1EQztZQWxEVyxXQUFNLEdBQU4sTUFBTSxDQUFXO1lBR2pCLGNBQVMsR0FBVCxTQUFTLENBQWlDO1lBWjlDLFNBQUksR0FBRyxJQUFJLENBQUM7WUFDWixZQUFPLEdBQUcsSUFBSSxDQUFDO1lBaUloQixrQkFBYSxHQUFHO2dCQUFBLGlCQWtCdEI7Z0JBakJHLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO29CQUFDLE1BQU0sQ0FBQztnQkFFL0IsU0FBUyxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsQ0FDcEMsVUFBQyxRQUFRO29CQUNMLElBQU0sV0FBVyxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztvQkFDaEcsS0FBSSxDQUFDLE9BQU8sR0FBRyxLQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDO29CQUM5QyxLQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztvQkFDakMsS0FBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7b0JBQ3RCLEtBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUMzQyxDQUFDLEVBQ0Q7b0JBQ0ksS0FBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQztnQkFDekIsQ0FBQyxFQUFFO29CQUNDLFVBQVUsRUFBRSxDQUFDO29CQUNiLGtCQUFrQixFQUFFLElBQUk7b0JBQ3hCLE9BQU8sRUFBRSxJQUFJO2lCQUNoQixDQUFDLENBQUM7WUFDWCxDQUFDLENBQUE7WUFwSUcsSUFBSSxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDbEMsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLElBQUksV0FBVyxDQUFDLElBQUksSUFBSSxPQUFPO2dCQUN6RCxXQUFXLENBQUMsV0FBVyxJQUFJLFdBQVcsQ0FBQyxXQUFXLENBQUMsTUFBTSxJQUFJLENBQUM7Z0JBQzlELFdBQVcsR0FBRyxJQUFJLENBQUM7WUFDdkIsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7WUFDakMsSUFBSSxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQztZQUdoRCxRQUFRLENBQUM7Z0JBQ0wsSUFBSSxZQUFZLEdBQUcsQ0FBQyxDQUFDLG1EQUFtRCxDQUFDLENBQUM7Z0JBRTFFLElBQUksV0FBVyxHQUFHLEtBQUksQ0FBQyxXQUFXO29CQUM5QixJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUNsQixLQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFDL0IsS0FBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQ2xDLEdBQUcsSUFBSSxDQUFDO2dCQUdiLElBQU0sVUFBVSxHQUFHO29CQUNmLE1BQU0sRUFBRSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7b0JBQ3BDLElBQUksRUFBRSxDQUFDO29CQUNQLFNBQVMsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPO29CQUN4QyxnQkFBZ0IsRUFBRSxJQUFJO2lCQUN6QixDQUFBO2dCQUNELEVBQUUsQ0FBQyxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUN0QixVQUFVLENBQUMsTUFBTSxHQUFHLFdBQVcsQ0FBQztvQkFDaEMsVUFBVSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7Z0JBQ3pCLENBQUM7Z0JBRUQsS0FBSSxDQUFDLElBQUksR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsRUFBRSxVQUFVLENBQUMsQ0FBQztnQkFDN0QsS0FBSSxDQUFDLE9BQU8sR0FBRyxLQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxDQUFDO2dCQUc5QyxRQUFRLENBQUM7b0JBQ0wsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7Z0JBQ25ELENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNiLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUVOLE1BQU0sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUU7Z0JBQzNCLEVBQUUsQ0FBQyxDQUFDLEtBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDO29CQUFDLE1BQU0sQ0FBQztnQkFDOUIsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDbkQsQ0FBQyxDQUFDLENBQUM7UUFFUCxDQUFDO1FBRU8scURBQVksR0FBcEIsVUFBcUIsV0FBVztZQUFoQyxpQkFvQkM7WUFuQkcsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztnQkFBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM1QyxFQUFFLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO2dCQUNkLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztvQkFDbEMsUUFBUSxFQUFFLFdBQVc7b0JBQ3JCLEdBQUcsRUFBRSxJQUFJLENBQUMsSUFBSTtvQkFDZCxTQUFTLEVBQUUsSUFBSTtvQkFDZixTQUFTLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSTtpQkFDeEMsQ0FBQyxDQUFDO2dCQUVILElBQUksWUFBVSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQzlCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxZQUFVLEVBQUUsU0FBUyxFQUFFO29CQUNqRCxJQUFJLFdBQVcsR0FBRyxZQUFVLENBQUMsV0FBVyxFQUFFLENBQUM7b0JBQzNDLEtBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxDQUFDO2dCQUMzQyxDQUFDLENBQUMsQ0FBQztZQUNQLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUN4QixDQUFDO1lBRUQsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUM7UUFDeEIsQ0FBQztRQUVPLHVEQUFjLEdBQXRCLFVBQXVCLFdBQVcsRUFBRSxHQUFHO1lBQXZDLGlCQWtCQztZQWpCRyxJQUFJLENBQUMsV0FBVyxHQUFHO2dCQUNmLElBQUksRUFBRSxPQUFPO2dCQUNiLFdBQVcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsRUFBRSxXQUFXLENBQUMsR0FBRyxFQUFFLENBQUM7YUFDdEQsQ0FBQztZQUNGLElBQUksQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDO1lBRXpCLElBQU0sUUFBUSxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUM1QyxRQUFRLENBQUMsT0FBTyxDQUFDO2dCQUNiLE1BQU0sRUFBRSxXQUFXO2FBQ3RCLEVBQUUsVUFBQyxPQUFPLEVBQUUsTUFBTTtnQkFFZixFQUFFLENBQUMsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNoQyxLQUFJLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQztnQkFDckQsQ0FBQztnQkFFRCxLQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQ3pCLENBQUMsQ0FBQyxDQUFBO1FBQ04sQ0FBQztRQUVNLGlEQUFRLEdBQWY7WUFDSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztnQkFBQyxNQUFNLENBQUM7WUFFL0IsSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztZQUMxQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUM7WUFDOUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDM0MsQ0FBQztRQUVNLG9EQUFXLEdBQWxCO1lBQ0ksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxJQUFJLENBQUM7Z0JBQUMsTUFBTSxDQUFDO1lBQy9CLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUN2QyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztZQUN4QixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQztRQUM3QixDQUFDO1FBRU0saURBQVEsR0FBZjtZQUNJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEtBQUssSUFBSSxDQUFDO2dCQUFDLE1BQU0sQ0FBQztZQUMvQixJQUFNLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ2pDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNoQyxDQUFDO1FBRU0sa0RBQVMsR0FBaEI7WUFDSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQztnQkFBQyxNQUFNLENBQUM7WUFDL0IsSUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEdBQUcsQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDbEQsQ0FBQztRQXNCTSxpREFBUSxHQUFmO1lBQ0ksSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUM1QixDQUFDO1FBRU0sZ0RBQU8sR0FBZDtZQUNJLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO2dCQUNoQixRQUFRLEVBQUUsSUFBSSxDQUFDLFdBQVc7Z0JBQzFCLFdBQVcsRUFBRSxJQUFJLENBQUMsV0FBVztnQkFDN0IsWUFBWSxFQUFFLElBQUksQ0FBQyxZQUFZO2FBQ2xDLENBQUMsQ0FBQTtRQUNOLENBQUM7UUFDTCxxQ0FBQztJQUFELENBbEtBLEFBa0tDLElBQUE7SUFFRDtRQUNJLCtCQUNZLFNBQTBDO1lBQTFDLGNBQVMsR0FBVCxTQUFTLENBQWlDO1FBQ25ELENBQUM7UUFFRyxvQ0FBSSxHQUFYLFVBQVksTUFBNEIsRUFBRSxlQUFnQixFQUFFLGNBQWU7WUFDdkUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUM7Z0JBQ1osVUFBVSxFQUFFLDhCQUE0QjtnQkFDeEMsWUFBWSxFQUFFLE9BQU87Z0JBQ3JCLFdBQVcsRUFBRSxxQ0FBcUM7Z0JBQ2xELE1BQU0sRUFBRTtvQkFDSixZQUFZLEVBQUUsTUFBTSxDQUFDLFlBQVk7b0JBQ2pDLFdBQVcsRUFBRSxNQUFNLENBQUMsV0FBVztpQkFDbEM7Z0JBQ0QsbUJBQW1CLEVBQUUsSUFBSTthQUM1QixDQUFDO2lCQUNELElBQUksQ0FBQyxVQUFDLE1BQU07Z0JBQ1QsRUFBRSxDQUFDLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztvQkFDbEIsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUM1QixDQUFDO1lBQ0wsQ0FBQyxFQUFFO2dCQUNDLEVBQUUsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7b0JBQ2pCLGNBQWMsRUFBRSxDQUFDO2dCQUNyQixDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7UUFDWCxDQUFDO1FBQ0wsNEJBQUM7SUFBRCxDQTFCQSxBQTBCQyxJQUFBO0lBRUQsSUFBTSxpQkFBaUIsR0FBRyxVQUFTLFNBQW1DO1FBQ2xFLElBQUksWUFBWSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsR0FBRyxJQUFJLENBQUM7UUFFeEYsRUFBRSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQztZQUNMLFlBQWEsQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFO2dCQUMxQyx1QkFBdUIsRUFBRSxjQUFjO2dCQUN2Qyx1QkFBdUIsRUFBRSxjQUFjO2dCQUN2QyxrQkFBa0IsRUFBRSxTQUFTO2dCQUM3QixxQkFBcUIsRUFBRSxZQUFZO2FBQ3RDLENBQUMsQ0FBQztZQUNPLFlBQWEsQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFO2dCQUMxQyx1QkFBdUIsRUFBRSx5QkFBeUI7Z0JBQ2xELHVCQUF1QixFQUFFLHNCQUFzQjtnQkFDL0Msa0JBQWtCLEVBQUUsZ0JBQWdCO2dCQUNwQyxxQkFBcUIsRUFBRSxjQUFjO2FBQ3hDLENBQUMsQ0FBQztRQUNQLENBQUM7SUFDTCxDQUFDLENBQUE7SUFHRCxPQUFPO1NBQ0YsTUFBTSxDQUFDLHVCQUF1QixDQUFDO1NBQy9CLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQztTQUN0QixPQUFPLENBQUMsdUJBQXVCLEVBQUUscUJBQXFCLENBQUMsQ0FBQztBQUNqRSxDQUFDOzs7OztBQzVORDtJQUFBO0lBS0EsQ0FBQztJQUFELDJCQUFDO0FBQUQsQ0FMQSxBQUtDLElBQUE7QUFMWSxvREFBb0I7Ozs7O0FDQWpDLE9BQU8sQ0FBQyxNQUFNLENBQUMsdUJBQXVCLEVBQUUsQ0FBQyxZQUFZLEVBQUUsd0JBQXdCLENBQUMsQ0FBQyxDQUFDO0FBRWxGLDRCQUF5Qjs7Ozs7QUNBekIsQ0FBQztJQVdHLElBQU0sb0JBQW9CLEdBQTBCO1FBQ2hELGVBQWUsRUFBRSxHQUFHO1FBQ3BCLGNBQWMsRUFBRSxHQUFHO1FBQ25CLGlCQUFpQixFQUFFLEdBQUc7UUFDdEIsVUFBVSxFQUFFLEdBQUc7UUFDZixVQUFVLEVBQUUsR0FBRztLQUNsQixDQUFBO0lBRUQ7UUFBQTtRQVNBLENBQUM7UUFBRCxrQ0FBQztJQUFELENBVEEsQUFTQyxJQUFBO0lBRUQ7UUFZSSxnQ0FDWSxRQUFnQixFQUNoQixNQUFpQixFQUNqQixxQkFBNkM7WUFIekQsaUJBUUM7WUFQVyxhQUFRLEdBQVIsUUFBUSxDQUFRO1lBQ2hCLFdBQU0sR0FBTixNQUFNLENBQVc7WUFDakIsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF3QjtZQUVyRCxJQUFJLENBQUMsMEJBQTBCLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQztnQkFDekMsS0FBSSxDQUFDLGlCQUFpQixDQUFBO1lBQzFCLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNiLENBQUM7UUFFTSwwQ0FBUyxHQUFoQjtZQUFBLGlCQThCQztZQTdCRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztZQUVwRyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLHFCQUFxQixDQUFDLENBQUM7WUFDM0QsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1lBQ3RFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1lBR3ZCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLHVCQUF1QixFQUN0QyxVQUFDLFFBQVEsRUFBRSxRQUFRO2dCQUNmLEVBQUUsQ0FBQyxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDO29CQUN4QixLQUFJLENBQUMsMEJBQTBCLEVBQUUsQ0FBQztnQkFDdEMsQ0FBQztZQUNMLENBQUMsQ0FDSixDQUFDO1lBQ0YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsc0JBQXNCLEVBQ3JDO2dCQUNJLEtBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN2QixDQUFDLENBQ0osQ0FBQztZQUdGLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLG1CQUFtQixDQUFDLENBQUM7WUFHNUMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN2QixDQUFDO1lBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ0osSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ3BCLENBQUM7UUFDTCxDQUFDO1FBRU0sMkNBQVUsR0FBakIsVUFBa0IsT0FBb0M7WUFDbEQsSUFBSSxDQUFDLFVBQVUsR0FBRyxPQUFPLENBQUMsVUFBVSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUNuRixDQUFDO1FBRU8seUNBQVEsR0FBaEI7WUFFSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO2dCQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDOUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7WUFHdkIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUN6QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3RCLENBQUM7UUFFTyw0Q0FBVyxHQUFuQjtZQUVJLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7WUFDckMsRUFBRSxDQUFDLENBQUMsUUFBUSxJQUFJLElBQUksSUFBSSxRQUFRLENBQUMsV0FBVyxJQUFJLElBQUksSUFBSSxRQUFRLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN0RixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQ2hCLE1BQU0sQ0FBQztZQUNYLENBQUM7WUFHRCxJQUFNLFdBQVcsR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUN0QyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUN2QixRQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUMxQixDQUFDO1lBR0YsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBRzlDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDekIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUdsQixJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUNuQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFHNUMsSUFBTSxVQUFVLEdBQUc7Z0JBQ1gsTUFBTSxFQUFFLFdBQVc7Z0JBQ25CLElBQUksRUFBRSxFQUFFO2dCQUNSLFNBQVMsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPO2dCQUN4QyxnQkFBZ0IsRUFBRSxJQUFJO2dCQUN0QixzQkFBc0IsRUFBRSxJQUFJO2dCQUM1QixXQUFXLEVBQUUsS0FBSztnQkFDbEIsU0FBUyxFQUFFLEtBQUs7YUFDbkIsRUFDRCxHQUFHLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxFQUN6RCxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztnQkFDNUIsUUFBUSxFQUFFLFdBQVc7Z0JBQ3JCLEdBQUcsRUFBRSxHQUFHO2FBQ1gsQ0FBQyxDQUFDO1FBQ1gsQ0FBQztRQUVPLGtEQUFpQixHQUF6QjtZQUNJLElBQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUM7WUFFMUMsRUFBRSxDQUFDLENBQUMsWUFBWSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JCLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO2dCQUMzQixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQ2hCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7Z0JBQ3JCLE1BQU0sQ0FBQztZQUNYLENBQUM7WUFFRCxJQUFNLFFBQVEsR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDNUMsUUFBUSxDQUFDLE9BQU8sQ0FBQztnQkFDYixPQUFPLEVBQUUsWUFBWTthQUN4QixFQUFFLFVBQVUsT0FBTyxFQUFFLE1BQU07Z0JBQ3hCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO29CQUVmLEVBQUUsQ0FBQyxDQUFDLE1BQU0sS0FBSyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO3dCQUUzQyxFQUFFLENBQUMsQ0FBQyxPQUFPLEtBQUssSUFBSSxJQUFJLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzs0QkFDM0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLENBQUM7NEJBQzNCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQzs0QkFDaEIsTUFBTSxDQUFDO3dCQUNYLENBQUM7d0JBRUQsSUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsSUFBSSxFQUFFLEVBQ3RDLFVBQVEsR0FBRyxRQUFRLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQzt3QkFHdkMsRUFBRSxDQUFDLENBQUMsVUFBUSxDQUFDLEdBQUcsS0FBSyxJQUFJLElBQUksVUFBUSxDQUFDLEdBQUcsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDOzRCQUNqRCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQzs0QkFDM0IsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDOzRCQUNoQixNQUFNLENBQUM7d0JBQ1gsQ0FBQzt3QkFFRCxJQUFJLENBQUMsY0FBYyxHQUFHOzRCQUNsQixJQUFJLEVBQUUsT0FBTzs0QkFDYixXQUFXLEVBQUU7Z0NBQ1QsUUFBUSxFQUFFLFVBQVEsQ0FBQyxHQUFHLEVBQUU7Z0NBQ3hCLFVBQVUsRUFBRSxVQUFRLENBQUMsR0FBRyxFQUFFOzZCQUM3Qjt5QkFDSixDQUFDO3dCQUNGLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztvQkFDdkIsQ0FBQztvQkFDRCxJQUFJLENBQUMsQ0FBQzt3QkFDRixJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQzt3QkFDM0IsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO29CQUNwQixDQUFDO2dCQUNMLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDO1FBQUEsQ0FBQztRQUVLLDhDQUFhLEdBQXBCO1lBQUEsaUJBa0NDO1lBakNHLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7Z0JBQUMsTUFBTSxDQUFDO1lBRTVCLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUM7Z0JBQ3hCLFlBQVksRUFBRSxJQUFJLENBQUMsZUFBZTtnQkFDbEMsV0FBVyxFQUFFLElBQUksQ0FBQyxjQUFjO2FBQ25DLEVBQ0QsVUFBQyxNQUFNO2dCQUNILElBQ0ksUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLEVBQzFCLFlBQVksR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDO2dCQUd2QyxFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsY0FBYyxJQUFJLEtBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxJQUFJLE9BQU87b0JBQzFELEtBQUksQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLE1BQU0sSUFBSSxDQUFDO29CQUMzQyxRQUFRLElBQUksUUFBUSxDQUFDLFdBQVcsQ0FBQyxNQUFNLElBQUksQ0FBQztvQkFDNUMsQ0FBQyxLQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTTtvQkFDdkUsQ0FBQyxLQUFJLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsR0FBRyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsTUFBTTtvQkFDdkUsQ0FBQyxZQUFZLEtBQUssS0FBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDMUMsTUFBTSxDQUFDO2dCQUNYLENBQUM7Z0JBRUQsS0FBSSxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUM7Z0JBQy9CLEtBQUksQ0FBQyxlQUFlLEdBQUcsWUFBWSxDQUFDO2dCQUVwQyxFQUFFLENBQUMsQ0FBQyxZQUFZLEtBQUssSUFBSSxJQUFJLFFBQVEsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUM3QyxLQUFJLENBQUMsZUFBZTt3QkFDaEIsR0FBRyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQzs0QkFDcEMsR0FBRyxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztnQkFDbkQsQ0FBQztnQkFDRCxLQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7Z0JBQ2xCLEtBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDakMsQ0FBQyxDQUNKLENBQUM7UUFDTixDQUFDO1FBQUEsQ0FBQztRQUVLLDJDQUFVLEdBQWpCLFVBQWtCLE1BQU07WUFDcEIsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFBQyxNQUFNLENBQUM7WUFFNUIsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUM3QixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFFekIsQ0FBQztRQUFBLENBQUM7UUFFSyw4Q0FBYSxHQUFwQixVQUFxQixNQUFNO1lBQ3ZCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7Z0JBQUMsTUFBTSxDQUFDO1lBRTVCLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksRUFBRSxJQUFJLE1BQU0sQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDL0MsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1lBRXpCLENBQUM7UUFDTCxDQUFDO1FBQUEsQ0FBQztRQUNOLDZCQUFDO0lBQUQsQ0FyTkEsQUFxTkMsSUFBQTtJQUVELElBQU0sWUFBWSxHQUF5QjtRQUN2QyxRQUFRLEVBQUUsb0JBQW9CO1FBQzlCLFdBQVcsRUFBRSxpQ0FBaUM7UUFDOUMsVUFBVSxFQUFFLHNCQUFzQjtLQUNyQyxDQUFBO0lBRUQsT0FBTztTQUNGLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLHVCQUF1QixDQUFDLENBQUM7U0FDcEQsU0FBUyxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxDQUFDO0FBRXBELENBQUM7OztBQy9QRCxDQUFDO0lBU0csSUFBTSxrQkFBa0IsR0FBd0I7UUFDNUMsWUFBWSxFQUFFLEdBQUc7UUFDakIsWUFBWSxFQUFFLEdBQUc7UUFDakIsU0FBUyxFQUFFLEdBQUc7S0FDakIsQ0FBQTtJQWFEO1FBQUE7UUFPQSxDQUFDO1FBQUQsZ0NBQUM7SUFBRCxDQVBBLEFBT0MsSUFBQTtJQUVEO1FBUUksOEJBQ0ksUUFBZ0IsRUFDUixLQUFzQjtZQUF0QixVQUFLLEdBQUwsS0FBSyxDQUFpQjtZQUU5QixJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUMseUJBQXlCLENBQUMsQ0FBQztZQUNqRSxRQUFRLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLENBQUM7WUFDckMsSUFBSSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDN0IsQ0FBQztRQUVNLHlDQUFVLEdBQWpCLFVBQWtCLE9BQWtDO1lBQ2hELElBQUksQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLFNBQVMsR0FBRyxPQUFPLENBQUMsU0FBUyxDQUFDLFlBQVksSUFBSSxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBRXJGLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDMUIsSUFBSSxDQUFDLFlBQVksR0FBRyxPQUFPLENBQUMsWUFBWSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUM7Z0JBQ2pHLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1lBQzdCLENBQUM7UUFDTCxDQUFDO1FBRU8sdUNBQVEsR0FBaEI7WUFFSSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO2dCQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDOUMsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDM0IsQ0FBQztRQUVPLDBDQUFXLEdBQW5CLFVBQW9CLFFBQVEsRUFBRSxTQUFTO1lBRW5DLEVBQUUsQ0FBQyxDQUFDLFFBQVEsSUFBSSxJQUFJLElBQUksU0FBUyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ3hDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDaEIsTUFBTSxDQUFDO1lBQ1gsQ0FBQztZQUdELElBQUksV0FBVyxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQ3BDLFFBQVEsRUFDUixTQUFTLENBQ1osQ0FBQztZQUdGLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7Z0JBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUM5QyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUNuQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFHNUMsSUFDSSxVQUFVLEdBQUc7Z0JBQ1QsTUFBTSxFQUFFLFdBQVc7Z0JBQ25CLElBQUksRUFBRSxFQUFFO2dCQUNSLFNBQVMsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPO2dCQUN4QyxnQkFBZ0IsRUFBRSxJQUFJO2dCQUN0QixzQkFBc0IsRUFBRSxJQUFJO2dCQUM1QixXQUFXLEVBQUUsS0FBSztnQkFDbEIsU0FBUyxFQUFFLEtBQUs7YUFDbkIsRUFDRCxHQUFHLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1lBRTlELElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7Z0JBQ25CLFFBQVEsRUFBRSxXQUFXO2dCQUNyQixHQUFHLEVBQUUsR0FBRzthQUNYLENBQUMsQ0FBQztRQUNQLENBQUM7UUFFTyxnREFBaUIsR0FBekI7WUFBQSxpQkFvQ0M7WUFuQ0csSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQztZQUVwQyxFQUFFLENBQUMsQ0FBQyxTQUFTLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztnQkFDbEIsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO2dCQUNoQixNQUFNLENBQUM7WUFDWCxDQUFDO1lBRUQsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsNkJBQTZCLEdBQUcsU0FBUyxDQUFDO2lCQUNwRCxPQUFPLENBQUMsVUFBQyxRQUF5QjtnQkFDL0IsRUFBRSxDQUFDLENBQUMsUUFBUSxJQUFJLElBQUk7b0JBQ2hCLFFBQVEsQ0FBQyxRQUFRLElBQUksSUFBSTtvQkFDekIsUUFBUSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUU3QixLQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO29CQUV4RCxFQUFFLENBQUMsQ0FBQyxLQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQzt3QkFDcEIsSUFBTSxTQUFTLEdBQUc7NEJBQ2QsSUFBSSxFQUFFLFFBQVEsQ0FBQyxJQUFJOzRCQUNuQixVQUFVLEVBQUUsUUFBUSxDQUFDLFVBQVU7NEJBQy9CLE1BQU0sRUFBRSxRQUFRLENBQUMsVUFBVTs0QkFDM0IsT0FBTyxFQUFFLFFBQVEsQ0FBQyxPQUFPOzRCQUN6QixXQUFXLEVBQUUsUUFBUSxDQUFDLFdBQVc7NEJBQ2pDLE9BQU8sRUFBRSxRQUFRLENBQUMsV0FBVzt5QkFDaEMsQ0FBQzt3QkFDRixLQUFJLENBQUMsWUFBWSxDQUFDOzRCQUNkLFNBQVMsRUFBRSxTQUFTO3lCQUN2QixDQUFDLENBQUM7b0JBQ1AsQ0FBQztnQkFDTCxDQUFDO2dCQUFDLElBQUksQ0FBQyxDQUFDO29CQUNKLEtBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDcEIsQ0FBQztZQUNMLENBQUMsQ0FBQztpQkFDRCxLQUFLLENBQUMsVUFBQyxRQUFRO2dCQUNaLEtBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNwQixDQUFDLENBQUMsQ0FBQztRQUNYLENBQUM7UUFDTCwyQkFBQztJQUFELENBMUdBLEFBMEdDLElBQUE7SUFFRCxJQUFNLFVBQVUsR0FBeUI7UUFDckMsUUFBUSxFQUFFLGtCQUFrQjtRQUM1QixRQUFRLEVBQUUsNENBQTRDO1FBQ3RELFVBQVUsRUFBRSxvQkFBb0I7S0FDbkMsQ0FBQTtJQUVELE9BQU87U0FDRixNQUFNLENBQUMsZUFBZSxFQUFFLEVBQUUsQ0FBQztTQUMzQixTQUFTLENBQUMsZUFBZSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ2hELENBQUM7OztBQzFKRCxDQUFDO0lBWUcsSUFBTSxtQkFBbUIsR0FBeUI7UUFDOUMsY0FBYyxFQUFFLEdBQUc7UUFDbkIsV0FBVyxFQUFFLEdBQUc7UUFDaEIsY0FBYyxFQUFFLEdBQUc7UUFDbkIsVUFBVSxFQUFFLEdBQUc7UUFDZixTQUFTLEVBQUUsR0FBRztLQUNqQixDQUFBO0lBRUQ7UUFBQTtRQVFBLENBQUM7UUFBRCxpQ0FBQztJQUFELENBUkEsQUFRQyxJQUFBO0lBRUQ7UUFVSSwrQkFDWSxRQUFnQjtZQUFoQixhQUFRLEdBQVIsUUFBUSxDQUFRO1lBSHBCLGVBQVUsR0FBUSxJQUFJLENBQUM7WUFLM0IsSUFBSSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUMsUUFBUSxDQUFDLHlCQUF5QixDQUFDLENBQUM7WUFDakUsUUFBUSxDQUFDLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQzFDLENBQUM7UUFFTSwwQ0FBVSxHQUFqQixVQUFrQixPQUFtQztZQUNqRCxJQUFJLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxTQUFTLEdBQUcsT0FBTyxDQUFDLFNBQVMsQ0FBQyxZQUFZLElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNyRixJQUFJLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxjQUFjLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxZQUFZLElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNwRyxJQUFJLENBQUMsVUFBVSxHQUFHLE9BQU8sQ0FBQyxVQUFVLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxZQUFZLElBQUksS0FBSyxHQUFHLEtBQUssQ0FBQztZQUV4RixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxLQUFLLElBQUksQ0FBQyxDQUFFLENBQUM7Z0JBQzVCLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzFDLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixJQUFJLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUM3QyxDQUFDO1lBRUQsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUMxQixJQUFJLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxjQUFjLEdBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxZQUFZLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQztnQkFDekcsSUFBSSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7Z0JBRTdGLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUN2QixDQUFDO1FBQ0wsQ0FBQztRQUVPLHdDQUFRLEdBQWhCO1lBRUksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQztnQkFBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDO1lBQzlDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQzNCLENBQUM7UUFFTyw2Q0FBYSxHQUFyQixVQUFzQixHQUFHO1lBQ3JCLE1BQU0sQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLElBQUksSUFBSSxHQUFHLENBQUMsV0FBVyxJQUFJLElBQUksSUFBSSxHQUFHLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztRQUNuRixDQUFDO1FBRU8sb0RBQW9CLEdBQTVCLFVBQTZCLEdBQUc7WUFDNUIsSUFBTSxLQUFLLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FDaEMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFDbEIsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FDckIsQ0FBQztZQUVGLEtBQUssQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQUksQ0FBQztZQUN0QixLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7WUFFMUIsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUNqQixDQUFDO1FBRU8sMkNBQVcsR0FBbkI7WUFBQSxpQkE4REM7WUE3REcsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFDakMsTUFBTSxHQUFHLEVBQUUsRUFDWCxXQUFXLEdBQUcsSUFBSSxDQUFDLGNBQWMsSUFBSSxLQUFLLENBQUM7WUFHL0MsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN6RCxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ3RELENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDSixFQUFFLENBQUMsQ0FBQyxTQUFTLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsSUFBSSxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7b0JBQzVELENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLFVBQUMsR0FBRzt3QkFDbEIsRUFBRSxDQUFDLENBQUMsS0FBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7NEJBQzFCLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLG9CQUFvQixDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7d0JBQ2hELENBQUM7b0JBQ0wsQ0FBQyxDQUFDLENBQUM7Z0JBQ1AsQ0FBQztZQUNMLENBQUM7WUFFRCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3RCLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDaEIsTUFBTSxDQUFDO1lBQ1gsQ0FBQztZQUdELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUM7Z0JBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUM5QyxJQUFJLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQztZQUNuQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFHNUMsSUFBTSxVQUFVLEdBQUc7Z0JBQ1gsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQ2pCLElBQUksRUFBRSxFQUFFO2dCQUNSLFNBQVMsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPO2dCQUN4QyxnQkFBZ0IsRUFBRSxJQUFJO2dCQUN0QixzQkFBc0IsRUFBRSxJQUFJO2dCQUM1QixXQUFXLEVBQUUsV0FBVztnQkFDeEIsU0FBUyxFQUFFLFdBQVc7YUFDekIsRUFDRCxHQUFHLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxFQUN6RCxNQUFNLEdBQUcsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1lBRzVDLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFVBQUMsS0FBSztnQkFDakIsSUFBTSxJQUFJLEdBQUc7b0JBQ1QsSUFBSSxFQUFFLEtBQUksQ0FBQyxXQUFXO29CQUN0QixTQUFTLEVBQUUsS0FBSyxDQUFDLElBQUksSUFBSSxTQUFTO29CQUNsQyxXQUFXLEVBQUUsQ0FBQztvQkFDZCxLQUFLLEVBQUUsQ0FBQztvQkFDUixXQUFXLEVBQUUsS0FBSyxDQUFDLE1BQU0sSUFBSSxPQUFPO29CQUNwQyxZQUFZLEVBQUUsQ0FBQztpQkFDbEIsQ0FBQztnQkFFRixJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO29CQUNuQixRQUFRLEVBQUUsS0FBSztvQkFDZixHQUFHLEVBQUUsR0FBRztvQkFDUixJQUFJLEVBQUUsS0FBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLEdBQUcsSUFBSTtpQkFDdkMsQ0FBQyxDQUFDO2dCQUNILE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDekIsQ0FBQyxDQUFDLENBQUM7WUFHSCxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztnQkFBQyxHQUFHLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2pELENBQUM7UUFDTCw0QkFBQztJQUFELENBekhBLEFBeUhDLElBQUE7SUFFRCxJQUFNLFdBQVcsR0FBeUI7UUFDdEMsUUFBUSxFQUFFLG1CQUFtQjtRQUM3QixRQUFRLEVBQUUsNENBQTRDO1FBQ3RELFVBQVUsRUFBRSxxQkFBcUI7S0FDcEMsQ0FBQTtJQUVELE9BQU87U0FDRixNQUFNLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxDQUFDO1NBQzVCLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxXQUFXLENBQUMsQ0FBQztBQUNsRCxDQUFDOzs7QUNsS0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIGUodCxuLHIpe2Z1bmN0aW9uIHMobyx1KXtpZighbltvXSl7aWYoIXRbb10pe3ZhciBhPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7aWYoIXUmJmEpcmV0dXJuIGEobywhMCk7aWYoaSlyZXR1cm4gaShvLCEwKTt2YXIgZj1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK28rXCInXCIpO3Rocm93IGYuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixmfXZhciBsPW5bb109e2V4cG9ydHM6e319O3Rbb11bMF0uY2FsbChsLmV4cG9ydHMsZnVuY3Rpb24oZSl7dmFyIG49dFtvXVsxXVtlXTtyZXR1cm4gcyhuP246ZSl9LGwsbC5leHBvcnRzLGUsdCxuLHIpfXJldHVybiBuW29dLmV4cG9ydHN9dmFyIGk9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtmb3IodmFyIG89MDtvPHIubGVuZ3RoO28rKylzKHJbb10pO3JldHVybiBzfSkiLCJ7XG4gICAgZnVuY3Rpb24gdHJhbnNsYXRlRmlsdGVyKCRpbmplY3Rvcikge1xuICAgICAgICBsZXQgcGlwVHJhbnNsYXRlID0gJGluamVjdG9yLmhhcygncGlwVHJhbnNsYXRlJykgXG4gICAgICAgICAgICA/ICRpbmplY3Rvci5nZXQoJ3BpcFRyYW5zbGF0ZScpIDogbnVsbDtcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICAgICAgcmV0dXJuIHBpcFRyYW5zbGF0ZSAgPyBwaXBUcmFuc2xhdGUudHJhbnNsYXRlKGtleSkgfHwga2V5IDoga2V5O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYW5ndWxhclxuICAgICAgICAubW9kdWxlKCdwaXBMb2NhdGlvbnMuVHJhbnNsYXRlJywgW10pXG4gICAgICAgIC5maWx0ZXIoJ3RyYW5zbGF0ZScsIHRyYW5zbGF0ZUZpbHRlcik7XG59Iiwi77u/YW5ndWxhci5tb2R1bGUoJ3BpcExvY2F0aW9ucycsIFtcbiAgICAncGlwTG9jYXRpb24nLFxuICAgICdwaXBMb2NhdGlvbk1hcCcsXG4gICAgJ3BpcExvY2F0aW9uSXAnLFxuICAgICdwaXBMb2NhdGlvbkVkaXREaWFsb2cnLFxuICAgICdwaXBMb2NhdGlvbkVkaXQnLFxuICAgICdwaXBMb2NhdGlvbnMuVHJhbnNsYXRlJ1xuXSk7Iiwie1xuICAgIGludGVyZmFjZSBJTG9jYXRpb25CaW5kaW5ncyB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IGFueTtcblxuICAgICAgICBwaXBMb2NhdGlvbk5hbWU6IGFueTtcbiAgICAgICAgcGlwTG9jYXRpb25Qb3M6IGFueTtcbiAgICAgICAgcGlwU2hvd0xvY2F0aW9uSWNvbjogYW55O1xuICAgICAgICBwaXBDb2xsYXBzZTogYW55O1xuICAgICAgICBwaXBSZWJpbmQ6IGFueTtcbiAgICAgICAgcGlwRGlzYWJsZWQ6IGFueTtcbiAgICAgICAgcGlwTG9jYXRpb25SZXNpemU6IGFueTtcbiAgICB9XG5cbiAgICBjb25zdCBMb2NhdGlvbkJpbmRpbmdzOiBJTG9jYXRpb25CaW5kaW5ncyA9IHtcbiAgICAgICAgcGlwTG9jYXRpb25OYW1lOiAnPCcsXG4gICAgICAgIHBpcExvY2F0aW9uUG9zOiAnPCcsXG4gICAgICAgIHBpcFNob3dMb2NhdGlvbkljb246ICc8JyxcbiAgICAgICAgcGlwQ29sbGFwc2U6ICc8JyxcbiAgICAgICAgcGlwUmViaW5kOiAnPCcsXG4gICAgICAgIHBpcERpc2FibGVkOiAnPCcsXG4gICAgICAgIHBpcExvY2F0aW9uUmVzaXplOiAnJidcbiAgICB9XG5cbiAgICBjbGFzcyBMb2NhdGlvbkJpbmRpbmdzQ2hhbmdlcyBpbXBsZW1lbnRzIG5nLklPbkNoYW5nZXNPYmplY3QsIElMb2NhdGlvbkJpbmRpbmdzIHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuXG4gICAgICAgIHBpcExvY2F0aW9uTmFtZTogbmcuSUNoYW5nZXNPYmplY3QgPCBzdHJpbmcgPiA7XG4gICAgICAgIHBpcExvY2F0aW9uUG9zOiBuZy5JQ2hhbmdlc09iamVjdCA8IGFueSA+IDtcbiAgICAgICAgcGlwU2hvd0xvY2F0aW9uSWNvbjogbmcuSUNoYW5nZXNPYmplY3QgPCBib29sZWFuID4gO1xuICAgICAgICBwaXBDb2xsYXBzZTogbmcuSUNoYW5nZXNPYmplY3QgPCBib29sZWFuID4gO1xuICAgICAgICBwaXBSZWJpbmQ6IG5nLklDaGFuZ2VzT2JqZWN0IDwgYm9vbGVhbiA+IDtcbiAgICAgICAgcGlwRGlzYWJsZWQ6IG5nLklDaGFuZ2VzT2JqZWN0IDwgYm9vbGVhbiA+IDtcblxuICAgICAgICBwaXBMb2NhdGlvblJlc2l6ZTogYW55O1xuICAgIH1cblxuICAgIGNsYXNzIExvY2F0aW9uQ29udHJvbGxlciBpbXBsZW1lbnRzIG5nLklDb250cm9sbGVyLCBJTG9jYXRpb25CaW5kaW5ncyB7XG4gICAgICAgIHB1YmxpYyBwaXBMb2NhdGlvbk5hbWU6IHN0cmluZztcbiAgICAgICAgcHVibGljIHBpcExvY2F0aW9uUG9zOiBhbnk7XG4gICAgICAgIHB1YmxpYyBwaXBTaG93TG9jYXRpb25JY29uOiBib29sZWFuO1xuICAgICAgICBwdWJsaWMgcGlwQ29sbGFwc2U6IGJvb2xlYW47XG4gICAgICAgIHB1YmxpYyBwaXBSZWJpbmQ6IGJvb2xlYW47XG4gICAgICAgIHB1YmxpYyBwaXBEaXNhYmxlZDogYm9vbGVhbjtcbiAgICAgICAgcHVibGljIHNob3dNYXA6IGJvb2xlYW4gPSB0cnVlO1xuICAgICAgICBwdWJsaWMgcGlwTG9jYXRpb25SZXNpemU6IEZ1bmN0aW9uO1xuXG4gICAgICAgIHByaXZhdGUgbmFtZTogSlF1ZXJ5O1xuICAgICAgICBwcml2YXRlIG1hcENvbnRhaW5lcjogSlF1ZXJ5O1xuICAgICAgICBwcml2YXRlIG1hcENvbnRyb2w6IEpRdWVyeTtcblxuICAgICAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgICAgIHByaXZhdGUgJGVsZW1lbnQ6IEpRdWVyeSxcbiAgICAgICAgICAgIHByaXZhdGUgJHRpbWVvdXQ6IG5nLklUaW1lb3V0U2VydmljZSxcbiAgICAgICAgICAgIHByaXZhdGUgJHNjb3BlOiBuZy5JU2NvcGVcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBcIm5nSW5qZWN0XCI7XG4gICAgICAgICAgICAvLyBBZGQgY2xhc3NcbiAgICAgICAgICAgICRlbGVtZW50LmFkZENsYXNzKCdwaXAtbG9jYXRpb24nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyAkcG9zdExpbmsoKSB7XG4gICAgICAgICAgICB0aGlzLiR0aW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLm5hbWUgPSB0aGlzLiRlbGVtZW50LmZpbmQoJy5waXAtbG9jYXRpb24tbmFtZScpO1xuICAgICAgICAgICAgICAgIHRoaXMubWFwQ29udGFpbmVyID0gdGhpcy4kZWxlbWVudC5maW5kKCcucGlwLWxvY2F0aW9uLWNvbnRhaW5lcicpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucGlwQ29sbGFwc2UgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXIuaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dNYXAgPSBmYWxzZTtcblxuICAgICAgICAgICAgICAgICAgICAvLyBQcm9jZXNzIHVzZXIgY2xpY2tcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5uYW1lLmNsaWNrKChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5waXBEaXNhYmxlZCkgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93TWFwID0gIXRoaXMuc2hvd01hcDtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWFwQ29udGFpbmVyW3RoaXMuc2hvd01hcCA/ICdzaG93JyA6ICdoaWRlJ10oKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnNob3dNYXApIHRoaXMuZ2VuZXJhdGVNYXAoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy4kc2NvcGUuJCRwaGFzZSkgdGhpcy4kc2NvcGUuJGFwcGx5KCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMucmVkcmF3TWFwKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgcmVkcmF3TWFwKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLm1hcENvbnRhaW5lcikgcmV0dXJuO1xuXG4gICAgICAgICAgICAvLyBWaXN1YWxpemUgbWFwXG4gICAgICAgICAgICBpZiAodGhpcy5waXBMb2NhdGlvblBvcyAmJiB0aGlzLnNob3dNYXAgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTWFwKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJNYXAoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyAkb25DaGFuZ2VzKGNoYW5nZXM6IExvY2F0aW9uQmluZGluZ3NDaGFuZ2VzKSB7XG4gICAgICAgICAgICB0aGlzLnBpcFJlYmluZCA9IGNoYW5nZXMucGlwUmViaW5kIFxuICAgICAgICAgICAgICAgID8gY2hhbmdlcy5waXBSZWJpbmQuY3VycmVudFZhbHVlIHx8IGZhbHNlIDogZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnBpcFNob3dMb2NhdGlvbkljb24gPSBjaGFuZ2VzLnBpcFNob3dMb2NhdGlvbkljb24gXG4gICAgICAgICAgICAgICAgPyBjaGFuZ2VzLnBpcFNob3dMb2NhdGlvbkljb24uY3VycmVudFZhbHVlIHx8IGZhbHNlIDogZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnBpcENvbGxhcHNlID0gY2hhbmdlcy5waXBDb2xsYXBzZSBcbiAgICAgICAgICAgICAgICA/IGNoYW5nZXMucGlwQ29sbGFwc2UuY3VycmVudFZhbHVlIHx8IGZhbHNlIDogZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnBpcERpc2FibGVkID0gY2hhbmdlcy5waXBEaXNhYmxlZCBcbiAgICAgICAgICAgICAgICA/IGNoYW5nZXMucGlwRGlzYWJsZWQuY3VycmVudFZhbHVlIHx8IGZhbHNlIDogZmFsc2U7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnBpcFJlYmluZCkge1xuICAgICAgICAgICAgICAgIHRoaXMucGlwTG9jYXRpb25OYW1lID0gY2hhbmdlcy5waXBMb2NhdGlvbk5hbWUgXG4gICAgICAgICAgICAgICAgICAgID8gY2hhbmdlcy5waXBMb2NhdGlvbk5hbWUuY3VycmVudFZhbHVlIDogbnVsbDtcbiAgICAgICAgICAgICAgICB0aGlzLnBpcExvY2F0aW9uUG9zID0gY2hhbmdlcy5waXBMb2NhdGlvblBvcyBcbiAgICAgICAgICAgICAgICAgICAgPyBjaGFuZ2VzLnBpcExvY2F0aW9uUG9zLmN1cnJlbnRWYWx1ZSA6IG51bGw7XG4gICAgICAgICAgICAgICAgdGhpcy5yZWRyYXdNYXAoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgY2xlYXJNYXAoKSB7XG4gICAgICAgICAgICAvLyBSZW1vdmUgbWFwIGNvbnRyb2xcbiAgICAgICAgICAgIGlmICh0aGlzLm1hcENvbnRyb2wpIHRoaXMubWFwQ29udHJvbC5yZW1vdmUoKTtcbiAgICAgICAgICAgIHRoaXMubWFwQ29udHJvbCA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLm1hcENvbnRhaW5lci5oaWRlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGdlbmVyYXRlTWFwKCkge1xuICAgICAgICAgICAgY29uc3QgbG9jYXRpb24gPSB0aGlzLnBpcExvY2F0aW9uUG9zO1xuXG4gICAgICAgICAgICAvLyBTYWZlZ3VhcmQgZm9yIGJhZCBjb29yZGluYXRlc1xuICAgICAgICAgICAgaWYgKHRoaXMuc2hvd01hcCA9PT0gZmFsc2UgXG4gICAgICAgICAgICAgICAgfHwgbG9jYXRpb24gPT0gbnVsbCBcbiAgICAgICAgICAgICAgICB8fCBsb2NhdGlvbi5jb29yZGluYXRlcyA9PSBudWxsIFxuICAgICAgICAgICAgICAgIHx8IGxvY2F0aW9uLmNvb3JkaW5hdGVzLmxlbmd0aCA8IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsZWFyTWFwKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBEZXRlcm1pbmUgbWFwIGNvb3JkaW5hdGVzXG4gICAgICAgICAgICBjb25zdCBjb29yZGluYXRlcyA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmcoXG4gICAgICAgICAgICAgICAgbG9jYXRpb24uY29vcmRpbmF0ZXNbMF0sXG4gICAgICAgICAgICAgICAgbG9jYXRpb24uY29vcmRpbmF0ZXNbMV1cbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIC8vIENsZWFuIHVwIHRoZSBjb250cm9sXG4gICAgICAgICAgICBpZiAodGhpcy5tYXBDb250cm9sKSB0aGlzLm1hcENvbnRyb2wucmVtb3ZlKCk7XG4gICAgICAgICAgICB0aGlzLm1hcENvbnRyb2wgPSAkKCc8ZGl2PjwvZGl2PicpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXIuc2hvdygpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250cm9sLmFwcGVuZFRvKHRoaXMubWFwQ29udGFpbmVyKTtcblxuICAgICAgICAgICAgLy8gQ3JlYXRlIHRoZSBtYXAgd2l0aCBwb2ludCBtYXJrZXJcbiAgICAgICAgICAgIGNvbnN0XG4gICAgICAgICAgICAgICAgbWFwT3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgY2VudGVyOiBjb29yZGluYXRlcyxcbiAgICAgICAgICAgICAgICAgICAgem9vbTogMTIsXG4gICAgICAgICAgICAgICAgICAgIG1hcFR5cGVJZDogZ29vZ2xlLm1hcHMuTWFwVHlwZUlkLlJPQURNQVAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVEZWZhdWx0VUk6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVEb3VibGVDbGlja1pvb206IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbHdoZWVsOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcCh0aGlzLm1hcENvbnRyb2xbMF0sIG1hcE9wdGlvbnMpO1xuXG4gICAgICAgICAgICBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogY29vcmRpbmF0ZXMsXG4gICAgICAgICAgICAgICAgbWFwOiBtYXBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGNvbnN0IExvY2F0aW9uQ29tcG9uZW50OiBuZy5JQ29tcG9uZW50T3B0aW9ucyA9IHtcbiAgICAgICAgYmluZGluZ3M6IExvY2F0aW9uQmluZGluZ3MsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAnbG9jYXRpb24vTG9jYXRpb24uaHRtbCcsXG4gICAgICAgIGNvbnRyb2xsZXI6IExvY2F0aW9uQ29udHJvbGxlclxuICAgIH1cblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZShcInBpcExvY2F0aW9uXCIsIFtdKVxuICAgICAgICAuY29tcG9uZW50KCdwaXBMb2NhdGlvbicsIExvY2F0aW9uQ29tcG9uZW50KTtcbn0iLCJpbXBvcnQgeyBJTG9jYXRpb25EaWFsb2dTZXJ2aWNlIH0gZnJvbSAnLi9JTG9jYXRpb25EaWFsb2dTZXJ2aWNlJztcbmltcG9ydCB7IExvY2F0aW9uRGlhbG9nUGFyYW1zIH0gZnJvbSAnLi9Mb2NhdGlvbkRpYWxvZ1BhcmFtcyc7XG5cbntcbiAgICBjbGFzcyBMb2NhdGlvbkVkaXREaWFsb2dDb250cm9sbGVyIHtcbiAgICAgICAgcHJpdmF0ZSBfbWFwID0gbnVsbDtcbiAgICAgICAgcHJpdmF0ZSBfbWFya2VyID0gbnVsbDtcblxuICAgICAgICBwdWJsaWMgdGhlbWU6IHN0cmluZztcbiAgICAgICAgcHVibGljIGxvY2F0aW9uUG9zO1xuICAgICAgICBwdWJsaWMgbG9jYXRpb25OYW1lO1xuICAgICAgICBwdWJsaWMgc3VwcG9ydFNldDogYm9vbGVhbjtcblxuICAgICAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgICAgIHByaXZhdGUgJHNjb3BlOiBuZy5JU2NvcGUsXG4gICAgICAgICAgICAkcm9vdFNjb3BlOiBuZy5JUm9vdFNjb3BlU2VydmljZSxcbiAgICAgICAgICAgICR0aW1lb3V0OiBhbmd1bGFyLklUaW1lb3V0U2VydmljZSxcbiAgICAgICAgICAgIHByaXZhdGUgJG1kRGlhbG9nOiBhbmd1bGFyLm1hdGVyaWFsLklEaWFsb2dTZXJ2aWNlLFxuICAgICAgICAgICAgbG9jYXRpb25Qb3M6IGFueSxcbiAgICAgICAgICAgIGxvY2F0aW9uTmFtZTogc3RyaW5nXG4gICAgICAgICkge1xuICAgICAgICAgICAgdGhpcy50aGVtZSA9ICRyb290U2NvcGVbJyR0aGVtZSddO1xuICAgICAgICAgICAgdGhpcy5sb2NhdGlvblBvcyA9IGxvY2F0aW9uUG9zICYmIGxvY2F0aW9uUG9zLnR5cGUgPT0gJ1BvaW50JyAmJlxuICAgICAgICAgICAgICAgIGxvY2F0aW9uUG9zLmNvb3JkaW5hdGVzICYmIGxvY2F0aW9uUG9zLmNvb3JkaW5hdGVzLmxlbmd0aCA9PSAyID9cbiAgICAgICAgICAgICAgICBsb2NhdGlvblBvcyA6IG51bGw7XG4gICAgICAgICAgICB0aGlzLmxvY2F0aW9uTmFtZSA9IGxvY2F0aW9uTmFtZTtcbiAgICAgICAgICAgIHRoaXMuc3VwcG9ydFNldCA9IG5hdmlnYXRvci5nZW9sb2NhdGlvbiAhPSBudWxsO1xuXG4gICAgICAgICAgICAvLyBXYWl0IHVudGlsIGRpYWxvZyBpcyBpbml0aWFsaXplZFxuICAgICAgICAgICAgJHRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBtYXBDb250YWluZXIgPSAkKCcucGlwLWxvY2F0aW9uLWVkaXQtZGlhbG9nIC5waXAtbG9jYXRpb24tY29udGFpbmVyJyk7XG4gICAgICAgICAgICAgICAgLy8gQ2FsY3VsYXRlIGNvb3JkaW5hdGUgb2YgdGhlIGNlbnRlclxuICAgICAgICAgICAgICAgIGxldCBjb29yZGluYXRlcyA9IHRoaXMubG9jYXRpb25Qb3MgP1xuICAgICAgICAgICAgICAgICAgICBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2NhdGlvblBvcy5jb29yZGluYXRlc1swXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubG9jYXRpb25Qb3MuY29vcmRpbmF0ZXNbMV1cbiAgICAgICAgICAgICAgICAgICAgKSA6IG51bGw7XG5cbiAgICAgICAgICAgICAgICAvLyBDcmVhdGUgdGhlIG1hcCB3aXRoIHBvaW50IG1hcmtlclxuICAgICAgICAgICAgICAgIGNvbnN0IG1hcE9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgIGNlbnRlcjogbmV3IGdvb2dsZS5tYXBzLkxhdExuZygwLCAwKSxcbiAgICAgICAgICAgICAgICAgICAgem9vbTogMSxcbiAgICAgICAgICAgICAgICAgICAgbWFwVHlwZUlkOiBnb29nbGUubWFwcy5NYXBUeXBlSWQuUk9BRE1BUCxcbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZURlZmF1bHRVSTogdHJ1ZVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoY29vcmRpbmF0ZXMgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBtYXBPcHRpb25zLmNlbnRlciA9IGNvb3JkaW5hdGVzO1xuICAgICAgICAgICAgICAgICAgICBtYXBPcHRpb25zLnpvb20gPSAxMjtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICB0aGlzLl9tYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKG1hcENvbnRhaW5lclswXSwgbWFwT3B0aW9ucyk7XG4gICAgICAgICAgICAgICAgdGhpcy5fbWFya2VyID0gdGhpcy5jcmVhdGVNYXJrZXIoY29vcmRpbmF0ZXMpO1xuXG4gICAgICAgICAgICAgICAgLy8gRml4IHJlc2l6aW5nIGlzc3VlXG4gICAgICAgICAgICAgICAgJHRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBnb29nbGUubWFwcy5ldmVudC50cmlnZ2VyKHRoaXMuX21hcCwgJ3Jlc2l6ZScpO1xuICAgICAgICAgICAgICAgIH0sIDEwMDApO1xuICAgICAgICAgICAgfSwgMCk7XG5cbiAgICAgICAgICAgICRzY29wZS4kb24oJ3BpcExheW91dFJlc2l6ZWQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX21hcCA9PSBudWxsKSByZXR1cm47XG4gICAgICAgICAgICAgICAgZ29vZ2xlLm1hcHMuZXZlbnQudHJpZ2dlcih0aGlzLl9tYXAsICdyZXNpemUnKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGNyZWF0ZU1hcmtlcihjb29yZGluYXRlcykge1xuICAgICAgICAgICAgaWYgKHRoaXMuX21hcmtlcikgdGhpcy5fbWFya2VyLnNldE1hcChudWxsKTtcbiAgICAgICAgICAgIGlmIChjb29yZGluYXRlcykge1xuICAgICAgICAgICAgICAgIHRoaXMuX21hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogY29vcmRpbmF0ZXMsXG4gICAgICAgICAgICAgICAgICAgIG1hcDogdGhpcy5fbWFwLFxuICAgICAgICAgICAgICAgICAgICBkcmFnZ2FibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogZ29vZ2xlLm1hcHMuQW5pbWF0aW9uLkRST1BcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIGxldCB0aGlzTWFya2VyID0gdGhpcy5fbWFya2VyO1xuICAgICAgICAgICAgICAgIGdvb2dsZS5tYXBzLmV2ZW50LmFkZExpc3RlbmVyKHRoaXNNYXJrZXIsICdkcmFnZW5kJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBsZXQgY29vcmRpbmF0ZXMgPSB0aGlzTWFya2VyLmdldFBvc2l0aW9uKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlTG9jYXRpb24oY29vcmRpbmF0ZXMsIG51bGwpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9tYXJrZXIgPSBudWxsO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbWFya2VyO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBjaGFuZ2VMb2NhdGlvbihjb29yZGluYXRlcywgdGlkKSB7XG4gICAgICAgICAgICB0aGlzLmxvY2F0aW9uUG9zID0ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdQb2ludCcsXG4gICAgICAgICAgICAgICAgY29vcmRpbmF0ZXM6IFtjb29yZGluYXRlcy5sYXQoKSwgY29vcmRpbmF0ZXMubG5nKCldXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgdGhpcy5sb2NhdGlvbk5hbWUgPSBudWxsO1xuICAgICAgICAgICAgLy8gUmVhZCBhZGRyZXNzXG4gICAgICAgICAgICBjb25zdCBnZW9jb2RlciA9IG5ldyBnb29nbGUubWFwcy5HZW9jb2RlcigpO1xuICAgICAgICAgICAgZ2VvY29kZXIuZ2VvY29kZSh7XG4gICAgICAgICAgICAgICAgbGF0TG5nOiBjb29yZGluYXRlc1xuICAgICAgICAgICAgfSwgKHJlc3VsdHMsIHN0YXR1cykgPT4ge1xuICAgICAgICAgICAgICAgIC8vIFByb2Nlc3MgcG9zaXRpdmUgcmVzcG9uc2VcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0cyAmJiByZXN1bHRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5sb2NhdGlvbk5hbWUgPSByZXN1bHRzWzBdLmZvcm1hdHRlZF9hZGRyZXNzO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRoaXMuJHNjb3BlLiRhcHBseSgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICAvLyBEZXNjcmliZSB1c2VyIGFjdGlvbnNcbiAgICAgICAgcHVibGljIG9uQWRkUGluKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX21hcCA9PT0gbnVsbCkgcmV0dXJuO1xuXG4gICAgICAgICAgICBjb25zdCBjb29yZGluYXRlcyA9IHRoaXMuX21hcC5nZXRDZW50ZXIoKTtcbiAgICAgICAgICAgIHRoaXMuX21hcmtlciA9IHRoaXMuY3JlYXRlTWFya2VyKGNvb3JkaW5hdGVzKTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlTG9jYXRpb24oY29vcmRpbmF0ZXMsIG51bGwpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIG9uUmVtb3ZlUGluKCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX21hcCA9PT0gbnVsbCkgcmV0dXJuO1xuICAgICAgICAgICAgdGhpcy5fbWFya2VyID0gdGhpcy5jcmVhdGVNYXJrZXIobnVsbCk7XG4gICAgICAgICAgICB0aGlzLmxvY2F0aW9uUG9zID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMubG9jYXRpb25OYW1lID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyBvblpvb21JbigpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9tYXAgPT09IG51bGwpIHJldHVybjtcbiAgICAgICAgICAgIGNvbnN0IHpvb20gPSB0aGlzLl9tYXAuZ2V0Wm9vbSgpO1xuICAgICAgICAgICAgdGhpcy5fbWFwLnNldFpvb20oem9vbSArIDEpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIG9uWm9vbU91dCgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLl9tYXAgPT09IG51bGwpIHJldHVybjtcbiAgICAgICAgICAgIGNvbnN0IHpvb20gPSB0aGlzLl9tYXAuZ2V0Wm9vbSgpO1xuICAgICAgICAgICAgdGhpcy5fbWFwLnNldFpvb20oem9vbSA+IDEgPyB6b29tIC0gMSA6IHpvb20pO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIG9uU2V0TG9jYXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fbWFwID09PSBudWxsKSByZXR1cm47XG5cbiAgICAgICAgICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oXG4gICAgICAgICAgICAgICAgKHBvc2l0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvb3JkaW5hdGVzID0gbmV3IGdvb2dsZS5tYXBzLkxhdExuZyhwb3NpdGlvbi5jb29yZHMubGF0aXR1ZGUsIHBvc2l0aW9uLmNvb3Jkcy5sb25naXR1ZGUpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXJrZXIgPSB0aGlzLmNyZWF0ZU1hcmtlcihjb29yZGluYXRlcyk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX21hcC5zZXRDZW50ZXIoY29vcmRpbmF0ZXMpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXAuc2V0Wm9vbSgxMik7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlTG9jYXRpb24oY29vcmRpbmF0ZXMsIG51bGwpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLiRzY29wZS4kYXBwbHkoKTtcbiAgICAgICAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAgICAgICAgIG1heGltdW1BZ2U6IDAsXG4gICAgICAgICAgICAgICAgICAgIGVuYWJsZUhpZ2hBY2N1cmFjeTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgdGltZW91dDogNTAwMFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljIG9uQ2FuY2VsKCk6IHZvaWQge1xuICAgICAgICAgICAgdGhpcy4kbWREaWFsb2cuY2FuY2VsKCk7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgb25BcHBseSgpOiB2b2lkIHtcbiAgICAgICAgICAgIHRoaXMuJG1kRGlhbG9nLmhpZGUoe1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uOiB0aGlzLmxvY2F0aW9uUG9zLFxuICAgICAgICAgICAgICAgIGxvY2F0aW9uUG9zOiB0aGlzLmxvY2F0aW9uUG9zLFxuICAgICAgICAgICAgICAgIGxvY2F0aW9uTmFtZTogdGhpcy5sb2NhdGlvbk5hbWVcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgY2xhc3MgTG9jYXRpb25EaWFsb2dTZXJ2aWNlIGltcGxlbWVudHMgSUxvY2F0aW9uRGlhbG9nU2VydmljZSB7XG4gICAgICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICAgICAgcHJpdmF0ZSAkbWREaWFsb2c6IGFuZ3VsYXIubWF0ZXJpYWwuSURpYWxvZ1NlcnZpY2VcbiAgICAgICAgKSB7fVxuXG4gICAgICAgIHB1YmxpYyBzaG93KHBhcmFtczogTG9jYXRpb25EaWFsb2dQYXJhbXMsIHN1Y2Nlc3NDYWxsYmFjaz8sIGNhbmNlbENhbGxiYWNrPykge1xuICAgICAgICAgICAgdGhpcy4kbWREaWFsb2cuc2hvdyh7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6IExvY2F0aW9uRWRpdERpYWxvZ0NvbnRyb2xsZXIsXG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJyRjdHJsJyxcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdsb2NhdGlvbl9kaWFsb2cvTG9jYXRpb25EaWFsb2cuaHRtbCcsXG4gICAgICAgICAgICAgICAgICAgIGxvY2Fsczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb25OYW1lOiBwYXJhbXMubG9jYXRpb25OYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb25Qb3M6IHBhcmFtcy5sb2NhdGlvblBvc1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBjbGlja091dHNpZGVUb0Nsb3NlOiB0cnVlXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdWNjZXNzQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3NDYWxsYmFjayhyZXN1bHQpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY2FuY2VsQ2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNlbENhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IExvY2F0aW9uRGlhbG9nUnVuID0gZnVuY3Rpb24oJGluamVjdG9yOiBuZy5hdXRvLklJbmplY3RvclNlcnZpY2UpIHtcbiAgICAgICAgbGV0IHBpcFRyYW5zbGF0ZSA9ICRpbmplY3Rvci5oYXMoJ3BpcFRyYW5zbGF0ZScpID8gJGluamVjdG9yLmdldCgncGlwVHJhbnNsYXRlJykgOiBudWxsO1xuXG4gICAgICAgIGlmIChwaXBUcmFuc2xhdGUpIHtcbiAgICAgICAgICAgICggPCBhbnkgPiBwaXBUcmFuc2xhdGUpLnNldFRyYW5zbGF0aW9ucygnZW4nLCB7XG4gICAgICAgICAgICAgICAgJ0xPQ0FUSU9OX0FERF9MT0NBVElPTic6ICdBZGQgbG9jYXRpb24nLFxuICAgICAgICAgICAgICAgICdMT0NBVElPTl9TRVRfTE9DQVRJT04nOiAnU2V0IGxvY2F0aW9uJyxcbiAgICAgICAgICAgICAgICAnTE9DQVRJT05fQUREX1BJTic6ICdBZGQgcGluJyxcbiAgICAgICAgICAgICAgICAnTE9DQVRJT05fUkVNT1ZFX1BJTic6ICdSZW1vdmUgcGluJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAoIDwgYW55ID4gcGlwVHJhbnNsYXRlKS5zZXRUcmFuc2xhdGlvbnMoJ3J1Jywge1xuICAgICAgICAgICAgICAgICdMT0NBVElPTl9BRERfTE9DQVRJT04nOiAn0JTQvtCx0LDQstC40YLRjCDQvNC10YHRgtC+0L/QvtC70L7QttC10L3QuNC1JyxcbiAgICAgICAgICAgICAgICAnTE9DQVRJT05fU0VUX0xPQ0FUSU9OJzogJ9Ce0L/RgNC10LTQtdC70LjRgtGMINC/0L7Qu9C+0LbQtdC90LjQtScsXG4gICAgICAgICAgICAgICAgJ0xPQ0FUSU9OX0FERF9QSU4nOiAn0JTQvtCx0LDQstC40YLRjCDRgtC+0YfQutGDJyxcbiAgICAgICAgICAgICAgICAnTE9DQVRJT05fUkVNT1ZFX1BJTic6ICfQo9Cx0YDQsNGC0Ywg0YLQvtGH0LrRgydcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG5cbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoJ3BpcExvY2F0aW9uRWRpdERpYWxvZycpXG4gICAgICAgIC5ydW4oTG9jYXRpb25EaWFsb2dSdW4pXG4gICAgICAgIC5zZXJ2aWNlKCdwaXBMb2NhdGlvbkVkaXREaWFsb2cnLCBMb2NhdGlvbkRpYWxvZ1NlcnZpY2UpO1xufSIsImV4cG9ydCBjbGFzcyBMb2NhdGlvbkRpYWxvZ1BhcmFtcyB7XG4gICAgLy8gTG9jYXRpb25zIHBvc2l0aW9uXG4gICAgbG9jYXRpb25Qb3M6IGFueTtcbiAgICAvLyBMb2NhdGlvbiBuYW1lXG4gICAgbG9jYXRpb25OYW1lOiBzdHJpbmc7XG59IiwiYW5ndWxhci5tb2R1bGUoJ3BpcExvY2F0aW9uRWRpdERpYWxvZycsIFsnbmdNYXRlcmlhbCcsICdwaXBMb2NhdGlvbnMuVGVtcGxhdGVzJ10pO1xuXG5pbXBvcnQgJy4vTG9jYXRpb25EaWFsb2cnIiwiaW1wb3J0IHsgSUxvY2F0aW9uRGlhbG9nU2VydmljZSB9IGZyb20gJy4uL2xvY2F0aW9uX2RpYWxvZy9JTG9jYXRpb25EaWFsb2dTZXJ2aWNlJztcblxue1xuICAgIGludGVyZmFjZSBJTG9jYXRpb25FZGl0QmluZGluZ3Mge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG5cbiAgICAgICAgcGlwTG9jYXRpb25OYW1lOiBhbnk7XG4gICAgICAgIHBpcExvY2F0aW9uUG9zOiBhbnk7XG4gICAgICAgIHBpcExvY2F0aW9uSG9sZGVyOiBhbnk7XG4gICAgICAgIG5nRGlzYWJsZWQ6IGFueTtcbiAgICAgICAgcGlwQ2hhbmdlZDogYW55O1xuICAgIH1cblxuICAgIGNvbnN0IExvY2F0aW9uRWRpdEJpbmRpbmdzOiBJTG9jYXRpb25FZGl0QmluZGluZ3MgPSB7XG4gICAgICAgIHBpcExvY2F0aW9uTmFtZTogJz0nLFxuICAgICAgICBwaXBMb2NhdGlvblBvczogJz0nLFxuICAgICAgICBwaXBMb2NhdGlvbkhvbGRlcjogJz0nLFxuICAgICAgICBuZ0Rpc2FibGVkOiAnPCcsXG4gICAgICAgIHBpcENoYW5nZWQ6ICcmJ1xuICAgIH1cblxuICAgIGNsYXNzIExvY2F0aW9uRWRpdEJpbmRpbmdzQ2hhbmdlcyBpbXBsZW1lbnRzIG5nLklPbkNoYW5nZXNPYmplY3QsIElMb2NhdGlvbkVkaXRCaW5kaW5ncyB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IGFueTtcblxuICAgICAgICBwaXBMb2NhdGlvbk5hbWU6IGFueTtcbiAgICAgICAgcGlwTG9jYXRpb25Qb3M6IGFueTtcbiAgICAgICAgcGlwTG9jYXRpb25Ib2xkZXI6IGFueTtcbiAgICAgICAgcGlwQ2hhbmdlZDogYW55O1xuXG4gICAgICAgIG5nRGlzYWJsZWQ6IG5nLklDaGFuZ2VzT2JqZWN0PGJvb2xlYW4+O1xuICAgIH1cblxuICAgIGNsYXNzIExvY2F0aW9uRWRpdENvbnRyb2xsZXIgaW1wbGVtZW50cyBuZy5JQ29udHJvbGxlciwgSUxvY2F0aW9uRWRpdEJpbmRpbmdzIHtcbiAgICAgICAgcHVibGljIHBpcExvY2F0aW9uTmFtZTogc3RyaW5nO1xuICAgICAgICBwdWJsaWMgcGlwTG9jYXRpb25Qb3M6IGFueTtcbiAgICAgICAgcHVibGljIHBpcExvY2F0aW9uSG9sZGVyOiBib29sZWFuO1xuICAgICAgICBwdWJsaWMgbmdEaXNhYmxlZDogYm9vbGVhbjtcbiAgICAgICAgcHVibGljIHBpcENoYW5nZWQ6IEZ1bmN0aW9uO1xuXG4gICAgICAgIHByaXZhdGUgZW1wdHk6IEpRdWVyeTtcbiAgICAgICAgcHJpdmF0ZSBtYXBDb250YWluZXI6IEpRdWVyeTtcbiAgICAgICAgcHJpdmF0ZSBtYXBDb250cm9sOiBhbnk7XG4gICAgICAgIHByaXZhdGUgZGVmaW5lQ29vcmRpbmF0ZXNEZWJvdW5jZWQ6IEZ1bmN0aW9uO1xuXG4gICAgICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICAgICAgcHJpdmF0ZSAkZWxlbWVudDogSlF1ZXJ5LFxuICAgICAgICAgICAgcHJpdmF0ZSAkc2NvcGU6IG5nLklTY29wZSxcbiAgICAgICAgICAgIHByaXZhdGUgcGlwTG9jYXRpb25FZGl0RGlhbG9nOiBJTG9jYXRpb25EaWFsb2dTZXJ2aWNlXG4gICAgICAgICkge1xuICAgICAgICAgICAgdGhpcy5kZWZpbmVDb29yZGluYXRlc0RlYm91bmNlZCA9IF8uZGVib3VuY2UoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuZGVmaW5lQ29vcmRpbmF0ZXNcbiAgICAgICAgICAgIH0sIDIwMDApO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljICRwb3N0TGluaygpIHtcbiAgICAgICAgICAgIHRoaXMuJGVsZW1lbnQuZmluZCgnbWQtaW5wdXQtY29udGFpbmVyJykuYXR0cignbWQtbm8tZmxvYXQnLCAoISF0aGlzLnBpcExvY2F0aW9uSG9sZGVyKS50b1N0cmluZygpKTtcbiAgICAgICAgICAgIC8vIFNldCBjb250YWluZXJzXG4gICAgICAgICAgICB0aGlzLmVtcHR5ID0gdGhpcy4kZWxlbWVudC5jaGlsZHJlbignLnBpcC1sb2NhdGlvbi1lbXB0eScpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXIgPSB0aGlzLiRlbGVtZW50LmNoaWxkcmVuKCcucGlwLWxvY2F0aW9uLWNvbnRhaW5lcicpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250cm9sID0gbnVsbDtcblxuICAgICAgICAgICAgLy8gQWRkIHdhdGNoZXJzXG4gICAgICAgICAgICB0aGlzLiRzY29wZS4kd2F0Y2goJyRjdHJsLnBpcExvY2F0aW9uTmFtZScsXG4gICAgICAgICAgICAgICAgKG5ld1ZhbHVlLCBvbGRWYWx1ZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV3VmFsdWUgIT09IG9sZFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRlZmluZUNvb3JkaW5hdGVzRGVib3VuY2VkKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgdGhpcy4kc2NvcGUuJHdhdGNoKCckY3RybC5waXBMb2NhdGlvblBvcycsXG4gICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTWFwKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgLy8gQWRkIGNsYXNzXG4gICAgICAgICAgICB0aGlzLiRlbGVtZW50LmFkZENsYXNzKCdwaXAtbG9jYXRpb24tZWRpdCcpO1xuXG4gICAgICAgICAgICAvLyBWaXN1YWxpemUgbWFwXG4gICAgICAgICAgICBpZiAodGhpcy5waXBMb2NhdGlvblBvcykge1xuICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVNYXAoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhck1hcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljICRvbkNoYW5nZXMoY2hhbmdlczogTG9jYXRpb25FZGl0QmluZGluZ3NDaGFuZ2VzKSB7XG4gICAgICAgICAgICB0aGlzLm5nRGlzYWJsZWQgPSBjaGFuZ2VzLm5nRGlzYWJsZWQgPyBjaGFuZ2VzLm5nRGlzYWJsZWQuY3VycmVudFZhbHVlIDogZmFsc2U7IFxuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBjbGVhck1hcCgpIHtcbiAgICAgICAgICAgIC8vIFJlbW92ZSBtYXAgY29udHJvbFxuICAgICAgICAgICAgaWYgKHRoaXMubWFwQ29udHJvbCkgdGhpcy5tYXBDb250cm9sLnJlbW92ZSgpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250cm9sID0gbnVsbDtcblxuICAgICAgICAgICAgLy8gVG9nZ2xlIGNvbnRyb2wgdmlzaWJpbGl0eVxuICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXIuaGlkZSgpO1xuICAgICAgICAgICAgdGhpcy5lbXB0eS5zaG93KCk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGdlbmVyYXRlTWFwKCkge1xuICAgICAgICAgICAgLy8gU2FmZWd1YXJkIGZvciBiYWQgY29vcmRpbmF0ZXNcbiAgICAgICAgICAgIGNvbnN0IGxvY2F0aW9uID0gdGhpcy5waXBMb2NhdGlvblBvcztcbiAgICAgICAgICAgIGlmIChsb2NhdGlvbiA9PSBudWxsIHx8IGxvY2F0aW9uLmNvb3JkaW5hdGVzID09IG51bGwgfHwgbG9jYXRpb24uY29vcmRpbmF0ZXMubGVuZ3RoIDwgMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJNYXAoKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIERldGVybWluZSBtYXAgY29vcmRpbmF0ZXNcbiAgICAgICAgICAgIGNvbnN0IGNvb3JkaW5hdGVzID0gbmV3IGdvb2dsZS5tYXBzLkxhdExuZyhcbiAgICAgICAgICAgICAgICBsb2NhdGlvbi5jb29yZGluYXRlc1swXSxcbiAgICAgICAgICAgICAgICBsb2NhdGlvbi5jb29yZGluYXRlc1sxXVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgLy8gQ2xlYW4gdXAgdGhlIGNvbnRyb2xcbiAgICAgICAgICAgIGlmICh0aGlzLm1hcENvbnRyb2wpIHRoaXMubWFwQ29udHJvbC5yZW1vdmUoKTtcblxuICAgICAgICAgICAgLy8gVG9nZ2xlIGNvbnRyb2wgdmlzaWJpbGl0eVxuICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXIuc2hvdygpO1xuICAgICAgICAgICAgdGhpcy5lbXB0eS5oaWRlKCk7XG5cbiAgICAgICAgICAgIC8vIEFkZCBhIG5ldyBtYXBcbiAgICAgICAgICAgIHRoaXMubWFwQ29udHJvbCA9ICQoJzxkaXY+PC9kaXY+Jyk7XG4gICAgICAgICAgICB0aGlzLm1hcENvbnRyb2wuYXBwZW5kVG8odGhpcy5tYXBDb250YWluZXIpO1xuXG4gICAgICAgICAgICAvLyBDcmVhdGUgdGhlIG1hcCB3aXRoIHBvaW50IG1hcmtlclxuICAgICAgICAgICAgY29uc3QgbWFwT3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgY2VudGVyOiBjb29yZGluYXRlcyxcbiAgICAgICAgICAgICAgICAgICAgem9vbTogMTIsXG4gICAgICAgICAgICAgICAgICAgIG1hcFR5cGVJZDogZ29vZ2xlLm1hcHMuTWFwVHlwZUlkLlJPQURNQVAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVEZWZhdWx0VUk6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVEb3VibGVDbGlja1pvb206IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbHdoZWVsOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcCh0aGlzLm1hcENvbnRyb2xbMF0sIG1hcE9wdGlvbnMpLFxuICAgICAgICAgICAgICAgIG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogY29vcmRpbmF0ZXMsXG4gICAgICAgICAgICAgICAgICAgIG1hcDogbWFwXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGRlZmluZUNvb3JkaW5hdGVzKCkge1xuICAgICAgICAgICAgY29uc3QgbG9jYXRpb25OYW1lID0gdGhpcy5waXBMb2NhdGlvbk5hbWU7XG5cbiAgICAgICAgICAgIGlmIChsb2NhdGlvbk5hbWUgPT0gJycpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBpcExvY2F0aW9uUG9zID0gbnVsbDtcbiAgICAgICAgICAgICAgICB0aGlzLmNsZWFyTWFwKCk7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuJGFwcGx5KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBnZW9jb2RlciA9IG5ldyBnb29nbGUubWFwcy5HZW9jb2RlcigpO1xuICAgICAgICAgICAgZ2VvY29kZXIuZ2VvY29kZSh7XG4gICAgICAgICAgICAgICAgYWRkcmVzczogbG9jYXRpb25OYW1lXG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAocmVzdWx0cywgc3RhdHVzKSB7XG4gICAgICAgICAgICAgICAgdGhpcy4kc2NvcGUuJGFwcGx5KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gUHJvY2VzcyByZXNwb25zZVxuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdHVzID09PSBnb29nbGUubWFwcy5HZW9jb2RlclN0YXR1cy5PSykge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ2hlY2sgZm9yIGVtcHR5IHJlc3VsdHNcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHRzID09PSBudWxsIHx8IHJlc3VsdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5waXBMb2NhdGlvblBvcyA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhck1hcCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZ2VvbWV0cnkgPSByZXN1bHRzWzBdLmdlb21ldHJ5IHx8IHt9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uID0gZ2VvbWV0cnkubG9jYXRpb24gfHwge307XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIENoZWNrIGZvciBlbXB0eSByZXN1bHRzIGFnYWluXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobG9jYXRpb24ubGF0ID09PSBudWxsIHx8IGxvY2F0aW9uLmxuZyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGlwTG9jYXRpb25Qb3MgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJNYXAoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGlwTG9jYXRpb25Qb3MgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ1BvaW50JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb29yZGluYXRlczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXRpdHVkZTogbG9jYXRpb24ubGF0KCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvbmd0aXR1ZGU6IGxvY2F0aW9uLmxuZygpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVNYXAoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGlwTG9jYXRpb25Qb3MgPSBudWxsO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhck1hcCgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICBwdWJsaWMgb25TZXRMb2NhdGlvbigpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm5nRGlzYWJsZWQpIHJldHVybjtcblxuICAgICAgICAgICAgdGhpcy5waXBMb2NhdGlvbkVkaXREaWFsb2cuc2hvdyh7XG4gICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uTmFtZTogdGhpcy5waXBMb2NhdGlvbk5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uUG9zOiB0aGlzLnBpcExvY2F0aW9uUG9zXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbiA9IHJlc3VsdC5sb2NhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uTmFtZSA9IHJlc3VsdC5sb2NhdGlvbk5hbWU7XG5cbiAgICAgICAgICAgICAgICAgICAgLy8gRG8gbm90IGNoYW5nZSBhbnl0aGluZyBpZiBsb2NhdGlvbiBpcyBhYm91dCB0aGUgc2FtZVxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5waXBMb2NhdGlvblBvcyAmJiB0aGlzLnBpcExvY2F0aW9uUG9zLnR5cGUgPT0gJ1BvaW50JyAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5waXBMb2NhdGlvblBvcy5jb29yZGluYXRlcy5sZW5ndGggPT0gMiAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgbG9jYXRpb24gJiYgbG9jYXRpb24uY29vcmRpbmF0ZXMubGVuZ3RoID09IDIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICh0aGlzLnBpcExvY2F0aW9uUG9zLmNvb3JkaW5hdGVzWzBdIC0gbG9jYXRpb24uY29vcmRpbmF0ZXNbMF0pIDwgMC4wMDAxICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAodGhpcy5waXBMb2NhdGlvblBvcy5jb29yZGluYXRlc1sxXSAtIGxvY2F0aW9uLmNvb3JkaW5hdGVzWzFdKSA8IDAuMDAwMSAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgKGxvY2F0aW9uTmFtZSA9PT0gdGhpcy5waXBMb2NhdGlvbk5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBpcExvY2F0aW9uUG9zID0gbG9jYXRpb247XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGlwTG9jYXRpb25OYW1lID0gbG9jYXRpb25OYW1lO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChsb2NhdGlvbk5hbWUgPT09IG51bGwgJiYgbG9jYXRpb24gIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGlwTG9jYXRpb25OYW1lID1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnKCcgKyByZXN1bHQubG9jYXRpb24uY29vcmRpbmF0ZXNbMF0gK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcsJyArIHJlc3VsdC5sb2NhdGlvbi5jb29yZGluYXRlc1sxXSArICcpJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBpcENoYW5nZWQoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXJbMF0uZm9jdXMoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApO1xuICAgICAgICB9O1xuXG4gICAgICAgIHB1YmxpYyBvbk1hcENsaWNrKCRldmVudCkge1xuICAgICAgICAgICAgaWYgKHRoaXMubmdEaXNhYmxlZCkgcmV0dXJuO1xuXG4gICAgICAgICAgICB0aGlzLm1hcENvbnRhaW5lclswXS5mb2N1cygpO1xuICAgICAgICAgICAgdGhpcy5vblNldExvY2F0aW9uKCk7XG4gICAgICAgICAgICAvLyRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgfTtcblxuICAgICAgICBwdWJsaWMgb25NYXBLZXlQcmVzcygkZXZlbnQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm5nRGlzYWJsZWQpIHJldHVybjtcblxuICAgICAgICAgICAgaWYgKCRldmVudC5rZXlDb2RlID09IDEzIHx8ICRldmVudC5rZXlDb2RlID09IDMyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vblNldExvY2F0aW9uKCk7XG4gICAgICAgICAgICAgICAgLy8kZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgY29uc3QgTG9jYXRpb25FZGl0OiBuZy5JQ29tcG9uZW50T3B0aW9ucyA9IHtcbiAgICAgICAgYmluZGluZ3M6IExvY2F0aW9uRWRpdEJpbmRpbmdzLFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ2xvY2F0aW9uX2VkaXQvTG9jYXRpb25FZGl0Lmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiBMb2NhdGlvbkVkaXRDb250cm9sbGVyXG4gICAgfVxuXG4gICAgYW5ndWxhclxuICAgICAgICAubW9kdWxlKFwicGlwTG9jYXRpb25FZGl0XCIsIFsncGlwTG9jYXRpb25FZGl0RGlhbG9nJ10pXG4gICAgICAgIC5jb21wb25lbnQoJ3BpcExvY2F0aW9uRWRpdCcsIExvY2F0aW9uRWRpdCk7XG5cbn0iLCJkZWNsYXJlIGxldCBnb29nbGU6IGFueTtcblxue1xuICAgIGludGVyZmFjZSBJTG9jYXRpb25JcEJpbmRpbmdzIHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogYW55O1xuXG4gICAgICAgIHBpcElwYWRkcmVzczogYW55O1xuICAgICAgICBwaXBFeHRyYUluZm86IGFueTtcbiAgICAgICAgcGlwUmViaW5kOiBhbnk7XG4gICAgfVxuXG4gICAgY29uc3QgTG9jYXRpb25JcEJpbmRpbmdzOiBJTG9jYXRpb25JcEJpbmRpbmdzID0ge1xuICAgICAgICBwaXBJcGFkZHJlc3M6ICc8JyxcbiAgICAgICAgcGlwRXh0cmFJbmZvOiAnJicsXG4gICAgICAgIHBpcFJlYmluZDogJzwnXG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIElJcFJlc3BvbnNlSW5mbyB7XG4gICAgICAgIGNpdHk6IHN0cmluZztcbiAgICAgICAgcmVnaW9uQ29kZTogc3RyaW5nIHwgbnVtYmVyO1xuICAgICAgICByZWdpb25OYW1lOiBzdHJpbmc7XG4gICAgICAgIHppcENvZGU6IHN0cmluZyB8IG51bWJlcjtcbiAgICAgICAgY291bnRyeUNvZGU6IHN0cmluZyB8IG51bWJlcjtcbiAgICAgICAgY291bnRyeU5hbWU6IHN0cmluZztcbiAgICAgICAgbGF0aXR1ZGU6IHN0cmluZyB8IG51bWJlcjtcbiAgICAgICAgbG9uZ2l0dWRlOiBzdHJpbmcgfCBudW1iZXI7XG4gICAgfVxuXG4gICAgY2xhc3MgTG9jYXRpb25JcEJpbmRpbmdzQ2hhbmdlcyBpbXBsZW1lbnRzIG5nLklPbkNoYW5nZXNPYmplY3QsIElMb2NhdGlvbklwQmluZGluZ3Mge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG5cbiAgICAgICAgcGlwRXh0cmFJbmZvOiBhbnk7XG5cbiAgICAgICAgcGlwSXBhZGRyZXNzOiBuZy5JQ2hhbmdlc09iamVjdCA8IHN0cmluZyA+IDtcbiAgICAgICAgcGlwUmViaW5kOiBuZy5JQ2hhbmdlc09iamVjdCA8IGJvb2xlYW4gPlxuICAgIH1cblxuICAgIGNsYXNzIExvY2F0aW9uSXBDb250cm9sbGVyIGltcGxlbWVudHMgbmcuSUNvbnRyb2xsZXIsIElMb2NhdGlvbklwQmluZGluZ3Mge1xuICAgICAgICBwcml2YXRlIG1hcENvbnRhaW5lcjogSlF1ZXJ5O1xuICAgICAgICBwcml2YXRlIG1hcENvbnRyb2w6IGFueTtcblxuICAgICAgICBwdWJsaWMgcGlwRXh0cmFJbmZvOiBhbnk7XG4gICAgICAgIHB1YmxpYyBwaXBJcGFkZHJlc3M6IHN0cmluZztcbiAgICAgICAgcHVibGljIHBpcFJlYmluZDogYm9vbGVhbjtcblxuICAgICAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgICAgICRlbGVtZW50OiBKUXVlcnksXG4gICAgICAgICAgICBwcml2YXRlICRodHRwOiBuZy5JSHR0cFNlcnZpY2VcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0aGlzLm1hcENvbnRhaW5lciA9ICRlbGVtZW50LmNoaWxkcmVuKCcucGlwLWxvY2F0aW9uLWNvbnRhaW5lcicpO1xuICAgICAgICAgICAgJGVsZW1lbnQuYWRkQ2xhc3MoJ3BpcC1sb2NhdGlvbi1pcCcpO1xuICAgICAgICAgICAgdGhpcy5kZWZpbmVDb29yZGluYXRlcygpO1xuICAgICAgICB9XG5cbiAgICAgICAgcHVibGljICRvbkNoYW5nZXMoY2hhbmdlczogTG9jYXRpb25JcEJpbmRpbmdzQ2hhbmdlcykge1xuICAgICAgICAgICAgdGhpcy5waXBSZWJpbmQgPSBjaGFuZ2VzLnBpcFJlYmluZCA/IGNoYW5nZXMucGlwUmViaW5kLmN1cnJlbnRWYWx1ZSB8fCBmYWxzZSA6IGZhbHNlO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5waXBSZWJpbmQgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBpcElwYWRkcmVzcyA9IGNoYW5nZXMucGlwSXBhZGRyZXNzID8gY2hhbmdlcy5waXBJcGFkZHJlc3MuY3VycmVudFZhbHVlIDogdGhpcy5waXBJcGFkZHJlc3M7XG4gICAgICAgICAgICAgICAgdGhpcy5kZWZpbmVDb29yZGluYXRlcygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBjbGVhck1hcCgpIHtcbiAgICAgICAgICAgIC8vIFJlbW92ZSBtYXAgY29udHJvbFxuICAgICAgICAgICAgaWYgKHRoaXMubWFwQ29udHJvbCkgdGhpcy5tYXBDb250cm9sLnJlbW92ZSgpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250cm9sID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgZ2VuZXJhdGVNYXAobGF0aXR1ZGUsIGxvbmdpdHVkZSkge1xuICAgICAgICAgICAgLy8gU2FmZWd1YXJkIGZvciBiYWQgY29vcmRpbmF0ZXNcbiAgICAgICAgICAgIGlmIChsYXRpdHVkZSA9PSBudWxsIHx8IGxvbmdpdHVkZSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhck1hcCgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gRGV0ZXJtaW5lIG1hcCBjb29yZGluYXRlc1xuICAgICAgICAgICAgdmFyIGNvb3JkaW5hdGVzID0gbmV3IGdvb2dsZS5tYXBzLkxhdExuZyhcbiAgICAgICAgICAgICAgICBsYXRpdHVkZSxcbiAgICAgICAgICAgICAgICBsb25naXR1ZGVcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIC8vIENsZWFuIHVwIHRoZSBjb250cm9sXG4gICAgICAgICAgICBpZiAodGhpcy5tYXBDb250cm9sKSB0aGlzLm1hcENvbnRyb2wucmVtb3ZlKCk7XG4gICAgICAgICAgICB0aGlzLm1hcENvbnRyb2wgPSAkKCc8ZGl2PjwvZGl2PicpO1xuICAgICAgICAgICAgdGhpcy5tYXBDb250cm9sLmFwcGVuZFRvKHRoaXMubWFwQ29udGFpbmVyKTtcblxuICAgICAgICAgICAgLy8gQ3JlYXRlIHRoZSBtYXAgd2l0aCBwb2ludCBtYXJrZXJcbiAgICAgICAgICAgIGNvbnN0XG4gICAgICAgICAgICAgICAgbWFwT3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgY2VudGVyOiBjb29yZGluYXRlcyxcbiAgICAgICAgICAgICAgICAgICAgem9vbTogMTIsXG4gICAgICAgICAgICAgICAgICAgIG1hcFR5cGVJZDogZ29vZ2xlLm1hcHMuTWFwVHlwZUlkLlJPQURNQVAsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVEZWZhdWx0VUk6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVEb3VibGVDbGlja1pvb206IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIHNjcm9sbHdoZWVsOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcCh0aGlzLm1hcENvbnRyb2xbMF0sIG1hcE9wdGlvbnMpO1xuXG4gICAgICAgICAgICBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogY29vcmRpbmF0ZXMsXG4gICAgICAgICAgICAgICAgbWFwOiBtYXBcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBkZWZpbmVDb29yZGluYXRlcygpIHtcbiAgICAgICAgICAgIGNvbnN0IGlwQWRkcmVzcyA9IHRoaXMucGlwSXBhZGRyZXNzO1xuXG4gICAgICAgICAgICBpZiAoaXBBZGRyZXNzID09ICcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhck1hcCgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy4kaHR0cC5nZXQoJ2h0dHBzOi8vZnJlZWdlb2lwLm5ldC9qc29uLycgKyBpcEFkZHJlc3MpXG4gICAgICAgICAgICAgICAgLnN1Y2Nlc3MoKHJlc3BvbnNlOiBJSXBSZXNwb25zZUluZm8pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLmxhdGl0dWRlICE9IG51bGwgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLmxvbmdpdHVkZSAhPSBudWxsKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZ2VuZXJhdGVNYXAocmVzcG9uc2UubGF0aXR1ZGUsIHJlc3BvbnNlLmxvbmdpdHVkZSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLnBpcEV4dHJhSW5mbykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4dHJhSW5mbyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2l0eTogcmVzcG9uc2UuY2l0eSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVnaW9uQ29kZTogcmVzcG9uc2UucmVnaW9uQ29kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVnaW9uOiByZXNwb25zZS5yZWdpb25OYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB6aXBDb2RlOiByZXNwb25zZS56aXBDb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudHJ5Q29kZTogcmVzcG9uc2UuY291bnRyeUNvZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50cnk6IHJlc3BvbnNlLmNvdW50cnlOYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBpcEV4dHJhSW5mbyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dHJhSW5mbzogZXh0cmFJbmZvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNsZWFyTWFwKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5lcnJvcigocmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhck1hcCgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgTG9jYXRpb25JcDogbmcuSUNvbXBvbmVudE9wdGlvbnMgPSB7XG4gICAgICAgIGJpbmRpbmdzOiBMb2NhdGlvbklwQmluZGluZ3MsXG4gICAgICAgIHRlbXBsYXRlOiAnPGRpdiBjbGFzcz1cInBpcC1sb2NhdGlvbi1jb250YWluZXJcIj48L2Rpdj4nLFxuICAgICAgICBjb250cm9sbGVyOiBMb2NhdGlvbklwQ29udHJvbGxlclxuICAgIH1cblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZShcInBpcExvY2F0aW9uSXBcIiwgW10pXG4gICAgICAgIC5jb21wb25lbnQoJ3BpcExvY2F0aW9uSXAnLCBMb2NhdGlvbklwKTtcbn0iLCJ7XG5cbiAgICBpbnRlcmZhY2UgSUxvY2F0aW9uTWFwQmluZGluZ3Mge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG5cbiAgICAgICAgcGlwTG9jYXRpb25Qb3M6IGFueTtcbiAgICAgICAgcGlwSWNvblBhdGg6IGFueTtcbiAgICAgICAgcGlwSW50ZXJhY3RpdmU6IGFueTtcbiAgICAgICAgcGlwU3RyZXRjaDogYW55O1xuICAgICAgICBwaXBSZWJpbmQ6IGFueTtcbiAgICB9XG5cbiAgICBjb25zdCBMb2NhdGlvbk1hcEJpbmRpbmdzOiBJTG9jYXRpb25NYXBCaW5kaW5ncyA9IHtcbiAgICAgICAgcGlwTG9jYXRpb25Qb3M6ICc8JyxcbiAgICAgICAgcGlwSWNvblBhdGg6ICc8JyxcbiAgICAgICAgcGlwSW50ZXJhY3RpdmU6ICc8JyxcbiAgICAgICAgcGlwU3RyZXRjaDogJzwnLFxuICAgICAgICBwaXBSZWJpbmQ6ICc8J1xuICAgIH1cblxuICAgIGNsYXNzIExvY2F0aW9uTWFwQmluZGluZ3NDaGFuZ2VzIGltcGxlbWVudHMgbmcuSU9uQ2hhbmdlc09iamVjdCwgSUxvY2F0aW9uTWFwQmluZGluZ3Mge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG5cbiAgICAgICAgcGlwTG9jYXRpb25Qb3M6IG5nLklDaGFuZ2VzT2JqZWN0PGFueT47XG4gICAgICAgIHBpcEljb25QYXRoOiBuZy5JQ2hhbmdlc09iamVjdDxzdHJpbmc+O1xuICAgICAgICBwaXBJbnRlcmFjdGl2ZTogbmcuSUNoYW5nZXNPYmplY3Q8Ym9vbGVhbj47XG4gICAgICAgIHBpcFN0cmV0Y2g6IG5nLklDaGFuZ2VzT2JqZWN0PGJvb2xlYW4+O1xuICAgICAgICBwaXBSZWJpbmQ6IG5nLklDaGFuZ2VzT2JqZWN0PGJvb2xlYW4+O1xuICAgIH1cblxuICAgIGNsYXNzIExvY2F0aW9uTWFwQ29udHJvbGxlciBpbXBsZW1lbnRzIG5nLklDb250cm9sbGVyLCBJTG9jYXRpb25NYXBCaW5kaW5ncyB7XG4gICAgICAgIHB1YmxpYyBwaXBMb2NhdGlvblBvczogYW55O1xuICAgICAgICBwdWJsaWMgcGlwSWNvblBhdGg6IHN0cmluZztcbiAgICAgICAgcHVibGljIHBpcEludGVyYWN0aXZlOiBib29sZWFuO1xuICAgICAgICBwdWJsaWMgcGlwU3RyZXRjaDogYm9vbGVhbjtcbiAgICAgICAgcHVibGljIHBpcFJlYmluZDogYm9vbGVhbjtcblxuICAgICAgICBwcml2YXRlIG1hcENvbnRhaW5lcjogSlF1ZXJ5O1xuICAgICAgICBwcml2YXRlIG1hcENvbnRyb2w6IGFueSA9IG51bGw7XG5cbiAgICAgICAgY29uc3RydWN0b3IoXG4gICAgICAgICAgICBwcml2YXRlICRlbGVtZW50OiBKUXVlcnlcbiAgICAgICAgKSB7XG4gICAgICAgICAgICB0aGlzLm1hcENvbnRhaW5lciA9ICRlbGVtZW50LmNoaWxkcmVuKCcucGlwLWxvY2F0aW9uLWNvbnRhaW5lcicpO1xuICAgICAgICAgICAgJGVsZW1lbnQuYWRkQ2xhc3MoJ3BpcC1sb2NhdGlvbi1tYXAnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHB1YmxpYyAkb25DaGFuZ2VzKGNoYW5nZXM6IExvY2F0aW9uTWFwQmluZGluZ3NDaGFuZ2VzKSB7XG4gICAgICAgICAgICB0aGlzLnBpcFJlYmluZCA9IGNoYW5nZXMucGlwUmViaW5kID8gY2hhbmdlcy5waXBSZWJpbmQuY3VycmVudFZhbHVlIHx8IGZhbHNlIDogZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnBpcEludGVyYWN0aXZlID0gY2hhbmdlcy5waXBJbnRlcmFjdGl2ZSA/IGNoYW5nZXMucGlwSW50ZXJhY3RpdmUuY3VycmVudFZhbHVlIHx8IGZhbHNlIDogZmFsc2U7XG4gICAgICAgICAgICB0aGlzLnBpcFN0cmV0Y2ggPSBjaGFuZ2VzLnBpcFN0cmV0Y2ggPyBjaGFuZ2VzLnBpcFN0cmV0Y2guY3VycmVudFZhbHVlIHx8IGZhbHNlIDogZmFsc2U7XG5cbiAgICAgICAgICAgIGlmICh0aGlzLnBpcFN0cmV0Y2ggPT09IHRydWUpICB7XG4gICAgICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXIuYWRkQ2xhc3MoJ3N0cmV0Y2gnKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5tYXBDb250YWluZXIucmVtb3ZlQ2xhc3MoJ3N0cmV0Y2gnKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMucGlwUmViaW5kID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5waXBMb2NhdGlvblBvcyA9IGNoYW5nZXMucGlwTG9jYXRpb25Qb3MgPyBjaGFuZ2VzLnBpcExvY2F0aW9uUG9zLmN1cnJlbnRWYWx1ZSA6IHRoaXMucGlwTG9jYXRpb25Qb3M7XG4gICAgICAgICAgICAgICAgdGhpcy5waXBJY29uUGF0aCA9IGNoYW5nZXMucGlwSWNvblBhdGggPyBjaGFuZ2VzLnBpcEljb25QYXRoLmN1cnJlbnRWYWx1ZSA6IHRoaXMucGlwSWNvblBhdGg7XG5cbiAgICAgICAgICAgICAgICB0aGlzLmdlbmVyYXRlTWFwKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGNsZWFyTWFwKCkge1xuICAgICAgICAgICAgLy8gUmVtb3ZlIG1hcCBjb250cm9sXG4gICAgICAgICAgICBpZiAodGhpcy5tYXBDb250cm9sKSB0aGlzLm1hcENvbnRyb2wucmVtb3ZlKCk7XG4gICAgICAgICAgICB0aGlzLm1hcENvbnRyb2wgPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBjaGVja0xvY2F0aW9uKGxvYykge1xuICAgICAgICAgICAgcmV0dXJuICEobG9jID09IG51bGwgfHwgbG9jLmNvb3JkaW5hdGVzID09IG51bGwgfHwgbG9jLmNvb3JkaW5hdGVzLmxlbmd0aCA8IDApO1xuICAgICAgICB9XG5cbiAgICAgICAgcHJpdmF0ZSBkZXRlcm1pbmVDb29yZGluYXRlcyhsb2MpIHtcbiAgICAgICAgICAgIGNvbnN0IHBvaW50ID0gbmV3IGdvb2dsZS5tYXBzLkxhdExuZyhcbiAgICAgICAgICAgICAgICBsb2MuY29vcmRpbmF0ZXNbMF0sXG4gICAgICAgICAgICAgICAgbG9jLmNvb3JkaW5hdGVzWzFdXG4gICAgICAgICAgICApO1xuXG4gICAgICAgICAgICBwb2ludC5maWxsID0gbG9jLmZpbGw7XG4gICAgICAgICAgICBwb2ludC5zdHJva2UgPSBsb2Muc3Ryb2tlO1xuXG4gICAgICAgICAgICByZXR1cm4gcG9pbnQ7XG4gICAgICAgIH1cblxuICAgICAgICBwcml2YXRlIGdlbmVyYXRlTWFwKCkge1xuICAgICAgICAgICAgY29uc3QgbG9jYXRpb25zID0gdGhpcy5waXBMb2NhdGlvblBvcyxcbiAgICAgICAgICAgICAgICBwb2ludHMgPSBbXSxcbiAgICAgICAgICAgICAgICBpbnRlcmFjdGl2ZSA9IHRoaXMucGlwSW50ZXJhY3RpdmUgfHwgZmFsc2U7XG5cbiAgICAgICAgICAgIC8vIFNhZmVndWFyZCBmb3IgYmFkIGNvb3JkaW5hdGVzXG4gICAgICAgICAgICBpZiAodGhpcy5jaGVja0xvY2F0aW9uKGxvY2F0aW9ucykgJiYgIV8uaXNBcnJheShsb2NhdGlvbnMpKSB7XG4gICAgICAgICAgICAgICAgcG9pbnRzLnB1c2godGhpcy5kZXRlcm1pbmVDb29yZGluYXRlcyhsb2NhdGlvbnMpKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKGxvY2F0aW9ucyAmJiBfLmlzQXJyYXkobG9jYXRpb25zKSAmJiBsb2NhdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBfLmVhY2gobG9jYXRpb25zLCAobG9jKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5jaGVja0xvY2F0aW9uKGxvYykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludHMucHVzaCh0aGlzLmRldGVybWluZUNvb3JkaW5hdGVzKGxvYykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwb2ludHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jbGVhck1hcCgpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gQ2xlYW4gdXAgdGhlIGNvbnRyb2xcbiAgICAgICAgICAgIGlmICh0aGlzLm1hcENvbnRyb2wpIHRoaXMubWFwQ29udHJvbC5yZW1vdmUoKTtcbiAgICAgICAgICAgIHRoaXMubWFwQ29udHJvbCA9ICQoJzxkaXY+PC9kaXY+Jyk7XG4gICAgICAgICAgICB0aGlzLm1hcENvbnRyb2wuYXBwZW5kVG8odGhpcy5tYXBDb250YWluZXIpO1xuXG4gICAgICAgICAgICAvLyBDcmVhdGUgdGhlIG1hcFxuICAgICAgICAgICAgY29uc3QgbWFwT3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgY2VudGVyOiBwb2ludHNbMF0sXG4gICAgICAgICAgICAgICAgICAgIHpvb206IDEyLFxuICAgICAgICAgICAgICAgICAgICBtYXBUeXBlSWQ6IGdvb2dsZS5tYXBzLk1hcFR5cGVJZC5ST0FETUFQLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlRGVmYXVsdFVJOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBkaXNhYmxlRG91YmxlQ2xpY2tab29tOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBzY3JvbGx3aGVlbDogaW50ZXJhY3RpdmUsXG4gICAgICAgICAgICAgICAgICAgIGRyYWdnYWJsZTogaW50ZXJhY3RpdmVcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAodGhpcy5tYXBDb250cm9sWzBdLCBtYXBPcHRpb25zKSxcbiAgICAgICAgICAgICAgICBib3VuZHMgPSBuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nQm91bmRzKCk7XG5cbiAgICAgICAgICAgIC8vIENyZWF0ZSBtYXJrZXJzXG4gICAgICAgICAgICBfLmVhY2gocG9pbnRzLCAocG9pbnQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpY29uID0ge1xuICAgICAgICAgICAgICAgICAgICBwYXRoOiB0aGlzLnBpcEljb25QYXRoLFxuICAgICAgICAgICAgICAgICAgICBmaWxsQ29sb3I6IHBvaW50LmZpbGwgfHwgJyNFRjUzNTAnLFxuICAgICAgICAgICAgICAgICAgICBmaWxsT3BhY2l0eTogMSxcbiAgICAgICAgICAgICAgICAgICAgc2NhbGU6IDEsXG4gICAgICAgICAgICAgICAgICAgIHN0cm9rZUNvbG9yOiBwb2ludC5zdHJva2UgfHwgJ3doaXRlJyxcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2VpZ2h0OiA1XG4gICAgICAgICAgICAgICAgfTtcblxuICAgICAgICAgICAgICAgIG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcG9pbnQsXG4gICAgICAgICAgICAgICAgICAgIG1hcDogbWFwLFxuICAgICAgICAgICAgICAgICAgICBpY29uOiB0aGlzLnBpcEljb25QYXRoID8gaWNvbiA6IG51bGxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBib3VuZHMuZXh0ZW5kKHBvaW50KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvLyBBdXRvLWNvbmZpZyBvZiB6b29tIGFuZCBjZW50ZXJcbiAgICAgICAgICAgIGlmIChwb2ludHMubGVuZ3RoID4gMSkgbWFwLmZpdEJvdW5kcyhib3VuZHMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgTG9jYXRpb25NYXA6IG5nLklDb21wb25lbnRPcHRpb25zID0ge1xuICAgICAgICBiaW5kaW5nczogTG9jYXRpb25NYXBCaW5kaW5ncyxcbiAgICAgICAgdGVtcGxhdGU6ICc8ZGl2IGNsYXNzPVwicGlwLWxvY2F0aW9uLWNvbnRhaW5lclwiPjwvZGl2PicsXG4gICAgICAgIGNvbnRyb2xsZXI6IExvY2F0aW9uTWFwQ29udHJvbGxlclxuICAgIH1cblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZShcInBpcExvY2F0aW9uTWFwXCIsIFtdKVxuICAgICAgICAuY29tcG9uZW50KCdwaXBMb2NhdGlvbk1hcCcsIExvY2F0aW9uTWFwKTtcbn0iLCIoZnVuY3Rpb24obW9kdWxlKSB7XG50cnkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTG9jYXRpb25zLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTG9jYXRpb25zLlRlbXBsYXRlcycsIFtdKTtcbn1cbm1vZHVsZS5ydW4oWyckdGVtcGxhdGVDYWNoZScsIGZ1bmN0aW9uKCR0ZW1wbGF0ZUNhY2hlKSB7XG4gICR0ZW1wbGF0ZUNhY2hlLnB1dCgnbG9jYXRpb24vTG9jYXRpb24uaHRtbCcsXG4gICAgJzxkaXYgY2xhc3M9XCJwaXAtbG9jYXRpb24tbmFtZSBsb2NhdGlvbi1jb2xsYXBzZVwiIG5nLWNsaWNrPVwiJGN0cmwucGlwTG9jYXRpb25SZXNpemUoKVwiIG5nLWlmPVwiISRjdHJsLnBpcENvbGxhcHNlXCJcXG4nICtcbiAgICAnICAgIG5nLWNsYXNzPVwiJGN0cmwucGlwU2hvd0xvY2F0aW9uSWNvbiA/IFxcJ3BpcC1sb2NhdGlvbi1pY29uLXNwYWNlXFwnIDogXFwnXFwnXCI+XFxuJyArXG4gICAgJyAgICA8bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOmxvY2F0aW9uXCIgY2xhc3M9XCJmbGV4LWZpeGVkIHBpcC1pY29uXCIgbmctaWY9XCIkY3RybC5waXBTaG93TG9jYXRpb25JY29uXCI+PC9tZC1pY29uPlxcbicgK1xuICAgICcgICAgPHNwYW4gY2xhc3M9XCJwaXAtbG9jYXRpb24tdGV4dFwiPnt7JGN0cmwucGlwTG9jYXRpb25OYW1lfX08L3NwYW4+XFxuJyArXG4gICAgJzwvZGl2PlxcbicgK1xuICAgICdcXG4nICtcbiAgICAnPG1kLWJ1dHRvbiBjbGFzcz1cInBpcC1sb2NhdGlvbi1uYW1lXCIgbmctY2xpY2s9XCIkY3RybC5waXBMb2NhdGlvblJlc2l6ZSgpXCIgbmctaWY9XCIkY3RybC5waXBDb2xsYXBzZVwiXFxuJyArXG4gICAgJyAgICBuZy1jbGFzcz1cIiRjdHJsLnBpcFNob3dMb2NhdGlvbkljb24gPyBcXCdwaXAtbG9jYXRpb24taWNvbi1zcGFjZVxcJyA6IFxcJ1xcJ1wiPlxcbicgK1xuICAgICcgICAgPGRpdiBjbGFzcz1cImxheW91dC1hbGlnbi1zdGFydC1jZW50ZXIgbGF5b3V0LXJvdyB3LXN0cmV0Y2hcIj5cXG4nICtcbiAgICAnICAgICAgICA8bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOmxvY2F0aW9uXCIgY2xhc3M9XCJmbGV4LWZpeGVkIHBpcC1pY29uXCIgbmctaWY9XCIkY3RybC5waXBTaG93TG9jYXRpb25JY29uXCI+PC9tZC1pY29uPlxcbicgK1xuICAgICcgICAgICAgIDxzcGFuIGNsYXNzPVwicGlwLWxvY2F0aW9uLXRleHQgZmxleFwiPnt7JGN0cmwucGlwTG9jYXRpb25OYW1lfX08L3NwYW4+XFxuJyArXG4gICAgJyAgICAgICAgPG1kLWljb24gbWQtc3ZnLWljb249XCJpY29uczp0cmlhbmdsZS1kb3duXCIgY2xhc3M9XCJmbGV4LWZpeGVkXCIgbmctc2hvdz1cIiEkY3RybC5zaG93TWFwXCI+PC9tZC1pY29uPlxcbicgK1xuICAgICcgICAgICAgIDxtZC1pY29uIG1kLXN2Zy1pY29uPVwiaWNvbnM6dHJpYW5nbGUtdXBcIiBjbGFzcz1cImZsZXgtZml4ZWRcIiBuZy1zaG93PVwiJGN0cmwuc2hvd01hcFwiPjwvbWQtaWNvbj5cXG4nICtcbiAgICAnICAgIDwvZGl2PlxcbicgK1xuICAgICc8L21kLWJ1dHRvbj5cXG4nICtcbiAgICAnXFxuJyArXG4gICAgJzxkaXYgY2xhc3M9XCJwaXAtbG9jYXRpb24tY29udGFpbmVyXCI+XFxuJyArXG4gICAgJzwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcExvY2F0aW9ucy5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcExvY2F0aW9ucy5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2xvY2F0aW9uX2VkaXQvTG9jYXRpb25FZGl0Lmh0bWwnLFxuICAgICc8bWQtaW5wdXQtY29udGFpbmVyIGNsYXNzPVwibWQtYmxvY2tcIj5cXG4nICtcbiAgICAnICAgIDxsYWJlbD57eyBcXCdMT0NBVElPTlxcJyB8IHRyYW5zbGF0ZSB9fTwvbGFiZWw+XFxuJyArXG4gICAgJyAgICA8aW5wdXQgbmctbW9kZWw9XCIkY3RybC5waXBMb2NhdGlvbk5hbWVcIiBuZy1kaXNhYmxlZD1cIiRjdHJsLm5nRGlzYWJsZWRcIi8+XFxuJyArXG4gICAgJzwvbWQtaW5wdXQtY29udGFpbmVyPlxcbicgK1xuICAgICc8ZGl2IGNsYXNzPVwicGlwLWxvY2F0aW9uLWVtcHR5XCIgbGF5b3V0PVwiY29sdW1uXCIgbGF5b3V0LWFsaWduPVwiY2VudGVyIGNlbnRlclwiPlxcbicgK1xuICAgICcgICAgPG1kLWJ1dHRvbiBjbGFzcz1cIm1kLXJhaXNlZFwiIG5nLWRpc2FibGVkPVwiJGN0cmwubmdEaXNhYmxlZFwiIG5nLWNsaWNrPVwiJGN0cmwub25TZXRMb2NhdGlvbigpXCJcXG4nICtcbiAgICAnICAgICAgICAgICAgYXJpYS1sYWJlbD1cIkxPQ0FUSU9OX0FERF9MT0NBVElPTlwiPlxcbicgK1xuICAgICcgICAgICAgICAgICA8c3BhbiBjbGFzcz1cImljb24tbG9jYXRpb25cIj48L3NwYW4+IHt7XFwnTE9DQVRJT05fQUREX0xPQ0FUSU9OXFwnIHwgdHJhbnNsYXRlIH19XFxuJyArXG4gICAgJyAgICA8L21kLWJ1dHRvbj5cXG4nICtcbiAgICAnPC9kaXY+XFxuJyArXG4gICAgJzxkaXYgY2xhc3M9XCJwaXAtbG9jYXRpb24tY29udGFpbmVyXCIgdGFiaW5kZXg9XCJ7eyAkY3RybC5uZ0Rpc2FibGVkID8gLTEgOiAwIH19XCIgXFxuJyArXG4gICAgJyAgICBuZy1jbGljaz1cIiRjdHJsLm9uTWFwQ2xpY2soJGV2ZW50KVwiIG5nLWtleXByZXNzPVwiJGN0cmwub25NYXBLZXlQcmVzcygkZXZlbnQpXCI+XFxuJyArXG4gICAgJzwvZGl2PicpO1xufV0pO1xufSkoKTtcblxuKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcExvY2F0aW9ucy5UZW1wbGF0ZXMnKTtcbn0gY2F0Y2ggKGUpIHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcExvY2F0aW9ucy5UZW1wbGF0ZXMnLCBbXSk7XG59XG5tb2R1bGUucnVuKFsnJHRlbXBsYXRlQ2FjaGUnLCBmdW5jdGlvbigkdGVtcGxhdGVDYWNoZSkge1xuICAkdGVtcGxhdGVDYWNoZS5wdXQoJ2xvY2F0aW9uX2RpYWxvZy9Mb2NhdGlvbkRpYWxvZy5odG1sJyxcbiAgICAnPG1kLWRpYWxvZyBjbGFzcz1cInBpcC1kaWFsb2cgcGlwLWxvY2F0aW9uLWVkaXQtZGlhbG9nIGxheW91dC1jb2x1bW5cIiBtZC10aGVtZT1cInt7JGN0cmwudGhlbWV9fVwiPlxcbicgK1xuICAgICdcXG4nICtcbiAgICAnICAgIDxkaXYgY2xhc3M9XCJwaXAtaGVhZGVyIGxheW91dC1jb2x1bW4gbGF5b3V0LWFsaWduLXN0YXJ0LXN0YXJ0XCI+XFxuJyArXG4gICAgJyAgICAgICAgPG1kLXByb2dyZXNzLWxpbmVhciBuZy1zaG93PVwiJGN0cmwudHJhbnNhY3Rpb24uYnVzeSgpXCIgbWQtbW9kZT1cImluZGV0ZXJtaW5hdGVcIiBjbGFzcz1cInBpcC1wcm9ncmVzcy10b3BcIj5cXG4nICtcbiAgICAnICAgICAgICA8L21kLXByb2dyZXNzLWxpbmVhcj5cXG4nICtcbiAgICAnICAgICAgICA8aDMgY2xhc3M9XCJmbGV4XCI+e3sgXFwnTE9DQVRJT05fU0VUX0xPQ0FUSU9OXFwnIHwgdHJhbnNsYXRlIH19PC9oMz5cXG4nICtcbiAgICAnICAgIDwvZGl2PlxcbicgK1xuICAgICcgICAgPGRpdiBjbGFzcz1cInBpcC1mb290ZXJcIj5cXG4nICtcbiAgICAnICAgICAgICA8ZGl2IGNsYXNzPVwibGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tc3RhcnQtY2VudGVyXCI+XFxuJyArXG4gICAgJyAgICAgICAgICAgIDxtZC1idXR0b24gY2xhc3M9XCJtZC1hY2NlbnRcIiBuZy1jbGljaz1cIiRjdHJsLm9uQWRkUGluKClcIiBuZy1zaG93PVwiJGN0cmwubG9jYXRpb25Qb3MgPT0gbnVsbFwiXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICBuZy1kaXNhYmxlZD1cIiRjdHJsLnRyYW5zYWN0aW9uLmJ1c3koKVwiIGFyaWEtbGFiZWw9XCJ7eyA6OlxcJ0xPQ0FUSU9OX0FERF9QSU5cXCcgIH19XCI+XFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICB7eyA6OlxcJ0xPQ0FUSU9OX0FERF9QSU5cXCcgfCB0cmFuc2xhdGUgfX1cXG4nICtcbiAgICAnICAgICAgICAgICAgPC9tZC1idXR0b24+XFxuJyArXG4gICAgJyAgICAgICAgICAgIDxtZC1idXR0b24gY2xhc3M9XCJtZC1hY2NlbnRcIiBuZy1jbGljaz1cIiRjdHJsLm9uUmVtb3ZlUGluKClcIiBuZy1zaG93PVwiJGN0cmwubG9jYXRpb25Qb3MgIT0gbnVsbFwiXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICBuZy1kaXNhYmxlZD1cIiRjdHJsLnRyYW5zYWN0aW9uLmJ1c3koKVwiIGFyaWEtbGFiZWw9XCJ7eyA6OlxcJ0xPQ0FUSU9OX1JFTU9WRV9QSU5cXCcgIH19XCI+XFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICB7eyA6OlxcJ0xPQ0FUSU9OX1JFTU9WRV9QSU5cXCcgfCB0cmFuc2xhdGUgfX1cXG4nICtcbiAgICAnICAgICAgICAgICAgPC9tZC1idXR0b24+XFxuJyArXG4gICAgJyAgICAgICAgPC9kaXY+XFxuJyArXG4gICAgJyAgICAgICAgPGRpdiBjbGFzcz1cImZsZXhcIj48L2Rpdj5cXG4nICtcbiAgICAnICAgICAgICA8ZGl2IGNsYXNzPVwibGF5b3V0LXJvdyBsYXlvdXQtYWxpZ24tZW5kLWNlbnRlclwiPlxcbicgK1xuICAgICcgICAgICAgICAgICA8bWQtYnV0dG9uIG5nLWNsaWNrPVwiJGN0cmwub25DYW5jZWwoKVwiIGFyaWEtbGFiZWw9XCJ7eyA6OlxcJ0NBTkNFTFxcJyAgfX1cIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgIHt7IDo6XFwnQ0FOQ0VMXFwnIHwgdHJhbnNsYXRlIH19XFxuJyArXG4gICAgJyAgICAgICAgICAgIDwvbWQtYnV0dG9uPlxcbicgK1xuICAgICcgICAgICAgICAgICA8bWQtYnV0dG9uIGNsYXNzPVwibWQtYWNjZW50XCIgbmctY2xpY2s9XCIkY3RybC5vbkFwcGx5KClcIiBuZy1kaXNhYmxlZD1cIiRjdHJsLnRyYW5zYWN0aW9uLmJ1c3koKVwiXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwie3sgOjpcXCdBUFBMWVxcJyAgfX1cIj5cXG4nICtcbiAgICAnICAgICAgICAgICAgICAgIHt7IDo6XFwnQVBQTFlcXCcgfCB0cmFuc2xhdGUgfX1cXG4nICtcbiAgICAnICAgICAgICAgICAgPC9tZC1idXR0b24+XFxuJyArXG4gICAgJyAgICAgICAgPC9kaXY+XFxuJyArXG4gICAgJyAgICA8L2Rpdj5cXG4nICtcbiAgICAnICAgIDxkaXYgY2xhc3M9XCJwaXAtYm9keVwiPlxcbicgK1xuICAgICcgICAgICAgIDxkaXYgY2xhc3M9XCJwaXAtbG9jYXRpb24tY29udGFpbmVyXCI+PC9kaXY+XFxuJyArXG4gICAgJyAgICAgICAgPG1kLWJ1dHRvbiBjbGFzcz1cIm1kLWljb24tYnV0dG9uIG1kLWZhYiBwaXAtem9vbS1pblwiIG5nLWNsaWNrPVwiJGN0cmwub25ab29tSW4oKVwiXFxuJyArXG4gICAgJyAgICAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwie3sgOjpcXCdMT0NBVElPTl9aT09NX0lOXFwnICB9fVwiPlxcbicgK1xuICAgICcgICAgICAgICAgICA8bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOnBsdXNcIj48L21kLWljb24+XFxuJyArXG4gICAgJyAgICAgICAgPC9tZC1idXR0b24+XFxuJyArXG4gICAgJyAgICAgICAgPG1kLWJ1dHRvbiBjbGFzcz1cIm1kLWljb24tYnV0dG9uIG1kLWZhYiBwaXAtem9vbS1vdXRcIiBuZy1jbGljaz1cIiRjdHJsLm9uWm9vbU91dCgpXCJcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJ7eyA6OlxcJ0xPQ0FUSU9OX1pPT01fT1VUXFwnICB9fVwiPlxcbicgK1xuICAgICcgICAgICAgICAgICA8bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOm1pbnVzXCI+PC9tZC1pY29uPlxcbicgK1xuICAgICcgICAgICAgIDwvbWQtYnV0dG9uPlxcbicgK1xuICAgICcgICAgICAgIDxtZC1idXR0b24gY2xhc3M9XCJtZC1pY29uLWJ1dHRvbiBtZC1mYWIgcGlwLXNldC1sb2NhdGlvblwiIG5nLWNsaWNrPVwiJGN0cmwub25TZXRMb2NhdGlvbigpXCJcXG4nICtcbiAgICAnICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJ7eyA6OlxcJ0xPQ0FUSU9OX1NFVF9MT0NBVElPTlxcJyAgfX1cIlxcbicgK1xuICAgICcgICAgICAgICAgICAgICAgICAgbmctc2hvdz1cInN1cHBvcnRTZXRcIiBuZy1kaXNhYmxlZD1cInRyYW5zYWN0aW9uLmJ1c3koKVwiPlxcbicgK1xuICAgICcgICAgICAgICAgICA8bWQtaWNvbiBtZC1zdmctaWNvbj1cImljb25zOnRhcmdldFwiPjwvbWQtaWNvbj5cXG4nICtcbiAgICAnICAgICAgICA8L21kLWJ1dHRvbj5cXG4nICtcbiAgICAnICAgIDwvZGl2PlxcbicgK1xuICAgICc8L21kLWRpYWxvZz5cXG4nICtcbiAgICAnJyk7XG59XSk7XG59KSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1waXAtd2VidWktbG9jYXRpb25zLWh0bWwuanMubWFwXG4iXX0="}