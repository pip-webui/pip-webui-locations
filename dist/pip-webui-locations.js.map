{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/TranslateFilter.ts","src/index.ts","src/location/Location.ts","src/location_dialog/LocationDialog.ts","src/location_dialog/LocationDialogParams.ts","src/location_dialog/index.ts","src/location_edit/LocationEdit.ts","src/location_ip/LocationIp.ts","src/location_map/LocationMap.ts","temp/pip-webui-locations-html.js"],"names":[],"mappings":"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YAAY,EAAE,CAAC;iBAClB,CAAC;gBAEF,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;oBACnB,QAAQ,EAAE,KAAK;oBACf,GAAG,EAAE,GAAG;oBACR,IAAI,EAAE,KAAI,CAAC,WAAW,GAAG,IAAI,GAAG,IAAI;iBACvC,CAAC,CAAC;gBACH,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACzB,CAAC,CAAC,CAAC;YAGH,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;gBAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACjD,CAAC;QACL,4BAAC;IAAD,CAzHA,AAyHC,IAAA;IAED,IAAM,WAAW,GAAyB;QACtC,QAAQ,EAAE,mBAAmB;QAC7B,QAAQ,EAAE,4CAA4C;QACtD,UAAU,EAAE,qBAAqB;KACpC,CAAA;IAED,OAAO;SACF,MAAM,CAAC,gBAAgB,EAAE,EAAE,CAAC;SAC5B,SAAS,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;AAClD,CAAC;;AClKD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-locations.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\n    function translateFilter($injector) {\n        let pipTranslate = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return function (key) {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    }\n\n    angular\n        .module('pipLocations.Translate', [])\n        .filter('translate', translateFilter);\n}","﻿angular.module('pipLocations', [\n    'pipLocation',\n    'pipLocationMap',\n    'pipLocationIp',\n    'pipLocationEditDialog',\n    'pipLocationEdit',\n    'pipLocations.Translate'\n]);","{\n    interface ILocationBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipShowLocationIcon: any;\n        pipCollapse: any;\n        pipRebind: any;\n        pipDisabled: any;\n        pipLocationResize: any;\n    }\n\n    const LocationBindings: ILocationBindings = {\n        pipLocationName: '<',\n        pipLocationPos: '<',\n        pipShowLocationIcon: '<',\n        pipCollapse: '<',\n        pipRebind: '<',\n        pipDisabled: '<',\n        pipLocationResize: '&'\n    }\n\n    class LocationBindingsChanges implements ng.IOnChangesObject, ILocationBindings {\n        [key: string]: any;\n\n        pipLocationName: ng.IChangesObject < string > ;\n        pipLocationPos: ng.IChangesObject < any > ;\n        pipShowLocationIcon: ng.IChangesObject < boolean > ;\n        pipCollapse: ng.IChangesObject < boolean > ;\n        pipRebind: ng.IChangesObject < boolean > ;\n        pipDisabled: ng.IChangesObject < boolean > ;\n\n        pipLocationResize: any;\n    }\n\n    class LocationController implements ng.IController, ILocationBindings {\n        public pipLocationName: string;\n        public pipLocationPos: any;\n        public pipShowLocationIcon: boolean;\n        public pipCollapse: boolean;\n        public pipRebind: boolean;\n        public pipDisabled: boolean;\n        public showMap: boolean = true;\n        public pipLocationResize: Function;\n\n        private name: JQuery;\n        private mapContainer: JQuery;\n        private mapControl: JQuery;\n\n        constructor(\n            private $element: JQuery,\n            private $timeout: ng.ITimeoutService,\n            private $scope: ng.IScope\n        ) {\n            \"ngInject\";\n            // Add class\n            $element.addClass('pip-location');\n        }\n\n        public $postLink() {\n            this.$timeout(() => {\n                this.name = this.$element.find('.pip-location-name');\n                this.mapContainer = this.$element.find('.pip-location-container');\n\n                if (this.pipCollapse === true) {\n                    this.mapContainer.hide();\n                    this.showMap = false;\n\n                    // Process user click\n                    this.name.click((event) => {\n                        event.stopPropagation();\n                        if (this.pipDisabled) return;\n                        this.showMap = !this.showMap;\n                        this.mapContainer[this.showMap ? 'show' : 'hide']();\n                        if (this.showMap) this.generateMap();\n                        if (!this.$scope.$$phase) this.$scope.$apply();\n                    });\n                }\n\n                this.redrawMap();\n            });\n        }\n\n        private redrawMap() {\n            if (!this.mapContainer) return;\n\n            // Visualize map\n            if (this.pipLocationPos && this.showMap === true) {\n                this.generateMap();\n            } else {\n                this.clearMap();\n            }\n        }\n\n        public $onChanges(changes: LocationBindingsChanges) {\n            this.pipRebind = changes.pipRebind \n                ? changes.pipRebind.currentValue || false : false;\n            this.pipShowLocationIcon = changes.pipShowLocationIcon \n                ? changes.pipShowLocationIcon.currentValue || false : false;\n            this.pipCollapse = changes.pipCollapse \n                ? changes.pipCollapse.currentValue || false : false;\n            this.pipDisabled = changes.pipDisabled \n                ? changes.pipDisabled.currentValue || false : false;\n\n            if (this.pipRebind) {\n                this.pipLocationName = changes.pipLocationName \n                    ? changes.pipLocationName.currentValue : null;\n                this.pipLocationPos = changes.pipLocationPos \n                    ? changes.pipLocationPos.currentValue : null;\n                this.redrawMap();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n            this.mapContainer.hide();\n        }\n\n        private generateMap() {\n            const location = this.pipLocationPos;\n\n            // Safeguard for bad coordinates\n            if (this.showMap === false \n                || location == null \n                || location.coordinates == null \n                || location.coordinates.length < 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            const coordinates = new google.maps.LatLng(\n                location.coordinates[0],\n                location.coordinates[1]\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapContainer.show();\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const\n                mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\n\n            new google.maps.Marker({\n                position: coordinates,\n                map: map\n            });\n        };\n    }\n\n    const LocationComponent: ng.IComponentOptions = {\n        bindings: LocationBindings,\n        templateUrl: 'location/Location.html',\n        controller: LocationController\n    }\n\n    angular\n        .module(\"pipLocation\", [])\n        .component('pipLocation', LocationComponent);\n}","import { ILocationDialogService } from './ILocationDialogService';\nimport { LocationDialogParams } from './LocationDialogParams';\n\n{\n    class LocationEditDialogController {\n        private _map = null;\n        private _marker = null;\n\n        public theme: string;\n        public locationPos;\n        public locationName;\n        public supportSet: boolean;\n\n        constructor(\n            private $scope: ng.IScope,\n            $rootScope: ng.IRootScopeService,\n            $timeout: angular.ITimeoutService,\n            private $mdDialog: angular.material.IDialogService,\n            locationPos: any,\n            locationName: string\n        ) {\n            this.theme = $rootScope['$theme'];\n            this.locationPos = locationPos && locationPos.type == 'Point' &&\n                locationPos.coordinates && locationPos.coordinates.length == 2 ?\n                locationPos : null;\n            this.locationName = locationName;\n            this.supportSet = navigator.geolocation != null;\n\n            // Wait until dialog is initialized\n            $timeout(() => {\n                let mapContainer = $('.pip-location-edit-dialog .pip-location-container');\n                // Calculate coordinate of the center\n                let coordinates = this.locationPos ?\n                    new google.maps.LatLng(\n                        this.locationPos.coordinates[0],\n                        this.locationPos.coordinates[1]\n                    ) : null;\n\n                // Create the map with point marker\n                const mapOptions = {\n                    center: new google.maps.LatLng(0, 0),\n                    zoom: 1,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true\n                }\n                if (coordinates != null) {\n                    mapOptions.center = coordinates;\n                    mapOptions.zoom = 12;\n                }\n\n                this._map = new google.maps.Map(mapContainer[0], mapOptions);\n                this._marker = this.createMarker(coordinates);\n\n                // Fix resizing issue\n                $timeout(() => {\n                    google.maps.event.trigger(this._map, 'resize');\n                }, 1000);\n            }, 0);\n\n            $scope.$on('pipLayoutResized', () => {\n                if (this._map == null) return;\n                google.maps.event.trigger(this._map, 'resize');\n            });\n\n        }\n\n        private createMarker(coordinates) {\n            if (this._marker) this._marker.setMap(null);\n            if (coordinates) {\n                this._marker = new google.maps.Marker({\n                    position: coordinates,\n                    map: this._map,\n                    draggable: true,\n                    animation: google.maps.Animation.DROP\n                });\n\n                let thisMarker = this._marker;\n                google.maps.event.addListener(thisMarker, 'dragend', () => {\n                    let coordinates = thisMarker.getPosition();\n                    this.changeLocation(coordinates, null);\n                });\n            } else {\n                this._marker = null;\n            }\n\n            return this._marker;\n        }\n\n        private changeLocation(coordinates, tid) {\n            this.locationPos = {\n                type: 'Point',\n                coordinates: [coordinates.lat(), coordinates.lng()]\n            };\n            this.locationName = null;\n            // Read address\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode({\n                latLng: coordinates\n            }, (results, status) => {\n                // Process positive response\n                if (results && results.length > 0) {\n                    this.locationName = results[0].formatted_address;\n                }\n\n                this.$scope.$apply();\n            })\n        }\n        // Describe user actions\n        public onAddPin() {\n            if (this._map === null) return;\n\n            const coordinates = this._map.getCenter();\n            this._marker = this.createMarker(coordinates);\n            this.changeLocation(coordinates, null);\n        }\n\n        public onRemovePin() {\n            if (this._map === null) return;\n            this._marker = this.createMarker(null);\n            this.locationPos = null;\n            this.locationName = null;\n        }\n\n        public onZoomIn() {\n            if (this._map === null) return;\n            const zoom = this._map.getZoom();\n            this._map.setZoom(zoom + 1);\n        }\n\n        public onZoomOut() {\n            if (this._map === null) return;\n            const zoom = this._map.getZoom();\n            this._map.setZoom(zoom > 1 ? zoom - 1 : zoom);\n        }\n\n        public onSetLocation = function () {\n            if (this._map === null) return;\n\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const coordinates = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                    this._marker = this.createMarker(coordinates);\n                    this._map.setCenter(coordinates);\n                    this._map.setZoom(12);\n                    this.changeLocation(coordinates, null);\n                },\n                () => {\n                    this.$scope.$apply();\n                }, {\n                    maximumAge: 0,\n                    enableHighAccuracy: true,\n                    timeout: 5000\n                });\n        }\n\n        public onCancel(): void {\n            this.$mdDialog.cancel();\n        }\n\n        public onApply(): void {\n            this.$mdDialog.hide({\n                location: this.locationPos,\n                locationPos: this.locationPos,\n                locationName: this.locationName\n            })\n        }\n    }\n    \n    class LocationDialogService implements ILocationDialogService {\n        constructor(\n            private $mdDialog: angular.material.IDialogService\n        ) {}\n\n        public show(params: LocationDialogParams, successCallback?, cancelCallback?) {\n            this.$mdDialog.show({\n                    controller: LocationEditDialogController,\n                    controllerAs: '$ctrl',\n                    templateUrl: 'location_dialog/LocationDialog.html',\n                    locals: {\n                        locationName: params.locationName,\n                        locationPos: params.locationPos\n                    },\n                    clickOutsideToClose: true\n                })\n                .then((result) => {\n                    if (successCallback) {\n                        successCallback(result);\n                    }\n                }, () => {\n                    if (cancelCallback) {\n                        cancelCallback();\n                    }\n                });\n        }\n    }\n\n    const LocationDialogRun = function($injector: ng.auto.IInjectorService) {\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            ( < any > pipTranslate).setTranslations('en', {\n                'LOCATION_ADD_LOCATION': 'Add location',\n                'LOCATION_SET_LOCATION': 'Set location',\n                'LOCATION_ADD_PIN': 'Add pin',\n                'LOCATION_REMOVE_PIN': 'Remove pin'\n            });\n            ( < any > pipTranslate).setTranslations('ru', {\n                'LOCATION_ADD_LOCATION': 'Добавить местоположение',\n                'LOCATION_SET_LOCATION': 'Определить положение',\n                'LOCATION_ADD_PIN': 'Добавить точку',\n                'LOCATION_REMOVE_PIN': 'Убрать точку'\n            });\n        }\n    }\n\n\n    angular\n        .module('pipLocationEditDialog')\n        .run(LocationDialogRun)\n        .service('pipLocationEditDialog', LocationDialogService);\n}","export class LocationDialogParams {\n    // Locations position\n    locationPos: any;\n    // Location name\n    locationName: string;\n}","angular.module('pipLocationEditDialog', ['ngMaterial', 'pipLocations.Templates']);\n\nimport './LocationDialog'","import { ILocationDialogService } from '../location_dialog/ILocationDialogService';\n\n{\n    interface ILocationEditBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipLocationHolder: any;\n        ngDisabled: any;\n        pipChanged: any;\n    }\n\n    const LocationEditBindings: ILocationEditBindings = {\n        pipLocationName: '=',\n        pipLocationPos: '=',\n        pipLocationHolder: '=',\n        ngDisabled: '<',\n        pipChanged: '&'\n    }\n\n    class LocationEditBindingsChanges implements ng.IOnChangesObject, ILocationEditBindings {\n        [key: string]: any;\n\n        pipLocationName: any;\n        pipLocationPos: any;\n        pipLocationHolder: any;\n        pipChanged: any;\n\n        ngDisabled: ng.IChangesObject<boolean>;\n    }\n\n    class LocationEditController implements ng.IController, ILocationEditBindings {\n        public pipLocationName: string;\n        public pipLocationPos: any;\n        public pipLocationHolder: boolean;\n        public ngDisabled: boolean;\n        public pipChanged: Function;\n\n        private empty: JQuery;\n        private mapContainer: JQuery;\n        private mapControl: any;\n        private defineCoordinatesDebounced: Function;\n\n        constructor(\n            private $element: JQuery,\n            private $scope: ng.IScope,\n            private pipLocationEditDialog: ILocationDialogService\n        ) {\n            this.defineCoordinatesDebounced = _.debounce(() => {\n                this.defineCoordinates\n            }, 2000);\n        }\n\n        public $postLink() {\n            this.$element.find('md-input-container').attr('md-no-float', (!!this.pipLocationHolder).toString());\n            // Set containers\n            this.empty = this.$element.children('.pip-location-empty');\n            this.mapContainer = this.$element.children('.pip-location-container');\n            this.mapControl = null;\n\n            // Add watchers\n            this.$scope.$watch('$ctrl.pipLocationName',\n                (newValue, oldValue) => {\n                    if (newValue !== oldValue) {\n                        this.defineCoordinatesDebounced();\n                    }\n                }\n            );\n            this.$scope.$watch('$ctrl.pipLocationPos',\n                () => {\n                    this.generateMap();\n                }\n            );\n\n            // Add class\n            this.$element.addClass('pip-location-edit');\n\n            // Visualize map\n            if (this.pipLocationPos) {\n                this.generateMap();\n            } else {\n                this.clearMap();\n            }\n        }\n\n        public $onChanges(changes: LocationEditBindingsChanges) {\n            this.ngDisabled = changes.ngDisabled ? changes.ngDisabled.currentValue : false; \n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n\n            // Toggle control visibility\n            this.mapContainer.hide();\n            this.empty.show();\n        }\n\n        private generateMap() {\n            // Safeguard for bad coordinates\n            const location = this.pipLocationPos;\n            if (location == null || location.coordinates == null || location.coordinates.length < 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            const coordinates = new google.maps.LatLng(\n                location.coordinates[0],\n                location.coordinates[1]\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n\n            // Toggle control visibility\n            this.mapContainer.show();\n            this.empty.hide();\n\n            // Add a new map\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\n                marker = new google.maps.Marker({\n                    position: coordinates,\n                    map: map\n                });\n        }\n\n        private defineCoordinates() {\n            const locationName = this.pipLocationName;\n\n            if (locationName == '') {\n                this.pipLocationPos = null;\n                this.clearMap();\n                this.$scope.$apply();\n                return;\n            }\n\n            const geocoder = new google.maps.Geocoder();\n            geocoder.geocode({\n                address: locationName\n            }, function (results, status) {\n                this.$scope.$apply(function () {\n                    // Process response\n                    if (status === google.maps.GeocoderStatus.OK) {\n                        // Check for empty results\n                        if (results === null || results.length === 0) {\n                            this.pipLocationPos = null;\n                            this.clearMap();\n                            return;\n                        }\n\n                        const geometry = results[0].geometry || {},\n                            location = geometry.location || {};\n\n                        // Check for empty results again\n                        if (location.lat === null || location.lng === null) {\n                            this.pipLocationPos = null;\n                            this.clearMap();\n                            return;\n                        }\n\n                        this.pipLocationPos = {\n                            type: 'Point',\n                            coordinates: {\n                                latitude: location.lat(),\n                                longtitude: location.lng()\n                            }\n                        };\n                        this.generateMap();\n                    }\n                    else {\n                        this.pipLocationPos = null;\n                        this.clearMap();\n                    }\n                });\n            });\n        };\n\n        public onSetLocation() {\n            if (this.ngDisabled) return;\n\n            this.pipLocationEditDialog.show({\n                    locationName: this.pipLocationName,\n                    locationPos: this.pipLocationPos\n                },\n                (result) => {\n                    const\n                        location = result.location,\n                        locationName = result.locationName;\n\n                    // Do not change anything if location is about the same\n                    if (this.pipLocationPos && this.pipLocationPos.type == 'Point' &&\n                        this.pipLocationPos.coordinates.length == 2 &&\n                        location && location.coordinates.length == 2 &&\n                        (this.pipLocationPos.coordinates[0] - location.coordinates[0]) < 0.0001 &&\n                        (this.pipLocationPos.coordinates[1] - location.coordinates[1]) < 0.0001 &&\n                        (locationName === this.pipLocationName)) {\n                        return;\n                    }\n\n                    this.pipLocationPos = location;\n                    this.pipLocationName = locationName;\n\n                    if (locationName === null && location !== null) {\n                        this.pipLocationName =\n                            '(' + result.location.coordinates[0] +\n                            ',' + result.location.coordinates[1] + ')';\n                    }\n                    this.pipChanged();\n                    this.mapContainer[0].focus();\n                }\n            );\n        };\n\n        public onMapClick($event) {\n            if (this.ngDisabled) return;\n\n            this.mapContainer[0].focus();\n            this.onSetLocation();\n            //$event.stopPropagation();\n        };\n\n        public onMapKeyPress($event) {\n            if (this.ngDisabled) return;\n\n            if ($event.keyCode == 13 || $event.keyCode == 32) {\n                this.onSetLocation();\n                //$event.stopPropagation();\n            }\n        };\n    }\n\n    const LocationEdit: ng.IComponentOptions = {\n        bindings: LocationEditBindings,\n        templateUrl: 'location_edit/LocationEdit.html',\n        controller: LocationEditController\n    }\n\n    angular\n        .module(\"pipLocationEdit\", ['pipLocationEditDialog'])\n        .component('pipLocationEdit', LocationEdit);\n\n}","declare let google: any;\n\n{\n    interface ILocationIpBindings {\n        [key: string]: any;\n\n        pipIpaddress: any;\n        pipExtraInfo: any;\n        pipRebind: any;\n    }\n\n    const LocationIpBindings: ILocationIpBindings = {\n        pipIpaddress: '<',\n        pipExtraInfo: '&',\n        pipRebind: '<'\n    }\n\n    interface IIpResponseInfo {\n        city: string;\n        regionCode: string | number;\n        regionName: string;\n        zipCode: string | number;\n        countryCode: string | number;\n        countryName: string;\n        latitude: string | number;\n        longitude: string | number;\n    }\n\n    class LocationIpBindingsChanges implements ng.IOnChangesObject, ILocationIpBindings {\n        [key: string]: any;\n\n        pipExtraInfo: any;\n\n        pipIpaddress: ng.IChangesObject < string > ;\n        pipRebind: ng.IChangesObject < boolean >\n    }\n\n    class LocationIpController implements ng.IController, ILocationIpBindings {\n        private mapContainer: JQuery;\n        private mapControl: any;\n\n        public pipExtraInfo: any;\n        public pipIpaddress: string;\n        public pipRebind: boolean;\n\n        constructor(\n            $element: JQuery,\n            private $http: ng.IHttpService\n        ) {\n            this.mapContainer = $element.children('.pip-location-container');\n            $element.addClass('pip-location-ip');\n            this.defineCoordinates();\n        }\n\n        public $onChanges(changes: LocationIpBindingsChanges) {\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\n\n            if (this.pipRebind === true) {\n                this.pipIpaddress = changes.pipIpaddress ? changes.pipIpaddress.currentValue : this.pipIpaddress;\n                this.defineCoordinates();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n        }\n\n        private generateMap(latitude, longitude) {\n            // Safeguard for bad coordinates\n            if (latitude == null || longitude == null) {\n                this.clearMap();\n                return;\n            }\n\n            // Determine map coordinates\n            var coordinates = new google.maps.LatLng(\n                latitude,\n                longitude\n            );\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map with point marker\n            const\n                mapOptions = {\n                    center: coordinates,\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: false,\n                    draggable: false\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions);\n\n            new google.maps.Marker({\n                position: coordinates,\n                map: map\n            });\n        }\n\n        private defineCoordinates() {\n            const ipAddress = this.pipIpaddress;\n\n            if (ipAddress == '') {\n                this.clearMap();\n                return;\n            }\n\n            this.$http.get('https://freegeoip.net/json/' + ipAddress)\n                .success((response: IIpResponseInfo) => {\n                    if (response != null &&\n                        response.latitude != null &&\n                        response.longitude != null) {\n\n                        this.generateMap(response.latitude, response.longitude);\n\n                        if (this.pipExtraInfo) {\n                            const extraInfo = {\n                                city: response.city,\n                                regionCode: response.regionCode,\n                                region: response.regionName,\n                                zipCode: response.zipCode,\n                                countryCode: response.countryCode,\n                                country: response.countryName\n                            };\n                            this.pipExtraInfo({\n                                extraInfo: extraInfo\n                            });\n                        }\n                    } else {\n                        this.clearMap();\n                    }\n                })\n                .error((response) => {\n                    this.clearMap();\n                });\n        }\n    }\n\n    const LocationIp: ng.IComponentOptions = {\n        bindings: LocationIpBindings,\n        template: '<div class=\"pip-location-container\"></div>',\n        controller: LocationIpController\n    }\n\n    angular\n        .module(\"pipLocationIp\", [])\n        .component('pipLocationIp', LocationIp);\n}","{\n\n    interface ILocationMapBindings {\n        [key: string]: any;\n\n        pipLocationPos: any;\n        pipIconPath: any;\n        pipInteractive: any;\n        pipStretch: any;\n        pipRebind: any;\n    }\n\n    const LocationMapBindings: ILocationMapBindings = {\n        pipLocationPos: '<',\n        pipIconPath: '<',\n        pipInteractive: '<',\n        pipStretch: '<',\n        pipRebind: '<'\n    }\n\n    class LocationMapBindingsChanges implements ng.IOnChangesObject, ILocationMapBindings {\n        [key: string]: any;\n\n        pipLocationPos: ng.IChangesObject<any>;\n        pipIconPath: ng.IChangesObject<string>;\n        pipInteractive: ng.IChangesObject<boolean>;\n        pipStretch: ng.IChangesObject<boolean>;\n        pipRebind: ng.IChangesObject<boolean>;\n    }\n\n    class LocationMapController implements ng.IController, ILocationMapBindings {\n        public pipLocationPos: any;\n        public pipIconPath: string;\n        public pipInteractive: boolean;\n        public pipStretch: boolean;\n        public pipRebind: boolean;\n\n        private mapContainer: JQuery;\n        private mapControl: any = null;\n\n        constructor(\n            private $element: JQuery\n        ) {\n            this.mapContainer = $element.children('.pip-location-container');\n            $element.addClass('pip-location-map');\n        }\n\n        public $onChanges(changes: LocationMapBindingsChanges) {\n            this.pipRebind = changes.pipRebind ? changes.pipRebind.currentValue || false : false;\n            this.pipInteractive = changes.pipInteractive ? changes.pipInteractive.currentValue || false : false;\n            this.pipStretch = changes.pipStretch ? changes.pipStretch.currentValue || false : false;\n\n            if (this.pipStretch === true)  {\n                this.mapContainer.addClass('stretch');\n            } else {\n                this.mapContainer.removeClass('stretch');\n            }\n\n            if (this.pipRebind === true) {\n                this.pipLocationPos = changes.pipLocationPos ? changes.pipLocationPos.currentValue : this.pipLocationPos;\n                this.pipIconPath = changes.pipIconPath ? changes.pipIconPath.currentValue : this.pipIconPath;\n\n                this.generateMap();\n            }\n        }\n\n        private clearMap() {\n            // Remove map control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = null;\n        }\n\n        private checkLocation(loc) {\n            return !(loc == null || loc.coordinates == null || loc.coordinates.length < 0);\n        }\n\n        private determineCoordinates(loc) {\n            const point = new google.maps.LatLng(\n                loc.coordinates[0],\n                loc.coordinates[1]\n            );\n\n            point.fill = loc.fill;\n            point.stroke = loc.stroke;\n\n            return point;\n        }\n\n        private generateMap() {\n            const locations = this.pipLocationPos,\n                points = [],\n                interactive = this.pipInteractive || false;\n\n            // Safeguard for bad coordinates\n            if (this.checkLocation(locations) && !_.isArray(locations)) {\n                points.push(this.determineCoordinates(locations));\n            } else {\n                if (locations && _.isArray(locations) && locations.length > 0) {\n                    _.each(locations, (loc) => {\n                        if (this.checkLocation(loc)) {\n                            points.push(this.determineCoordinates(loc));\n                        }\n                    });\n                }\n            }\n\n            if (points.length === 0) {\n                this.clearMap();\n                return;\n            }\n\n            // Clean up the control\n            if (this.mapControl) this.mapControl.remove();\n            this.mapControl = $('<div></div>');\n            this.mapControl.appendTo(this.mapContainer);\n\n            // Create the map\n            const mapOptions = {\n                    center: points[0],\n                    zoom: 12,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true,\n                    disableDoubleClickZoom: true,\n                    scrollwheel: interactive,\n                    draggable: interactive\n                },\n                map = new google.maps.Map(this.mapControl[0], mapOptions),\n                bounds = new google.maps.LatLngBounds();\n\n            // Create markers\n            _.each(points, (point) => {\n                const icon = {\n                    path: this.pipIconPath,\n                    fillColor: point.fill || '#EF5350',\n                    fillOpacity: 1,\n                    scale: 1,\n                    strokeColor: point.stroke || 'white',\n                    strokeWeight: 5\n                };\n\n                new google.maps.Marker({\n                    position: point,\n                    map: map,\n                    icon: this.pipIconPath ? icon : null\n                });\n                bounds.extend(point);\n            });\n\n            // Auto-config of zoom and center\n            if (points.length > 1) map.fitBounds(bounds);\n        }\n    }\n\n    const LocationMap: ng.IComponentOptions = {\n        bindings: LocationMapBindings,\n        template: '<div class=\"pip-location-container\"></div>',\n        controller: LocationMapController\n    }\n\n    angular\n        .module(\"pipLocationMap\", [])\n        .component('pipLocationMap', LocationMap);\n}","(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_dialog/LocationDialog.html',\n    '<md-dialog class=\"pip-dialog pip-location-edit-dialog layout-column\" md-theme=\"{{$ctrl.theme}}\">\\n' +\n    '\\n' +\n    '    <div class=\"pip-header layout-column layout-align-start-start\">\\n' +\n    '        <md-progress-linear ng-show=\"$ctrl.transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\">\\n' +\n    '        </md-progress-linear>\\n' +\n    '        <h3 class=\"flex\">{{ \\'LOCATION_SET_LOCATION\\' | translate }}</h3>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-footer\">\\n' +\n    '        <div class=\"layout-row layout-align-start-center\">\\n' +\n    '            <md-button class=\"md-accent\" ng-click=\"$ctrl.onAddPin()\" ng-show=\"$ctrl.locationPos == null\"\\n' +\n    '                ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_ADD_PIN\\'  }}\">\\n' +\n    '                {{ ::\\'LOCATION_ADD_PIN\\' | translate }}\\n' +\n    '            </md-button>\\n' +\n    '            <md-button class=\"md-accent\" ng-click=\"$ctrl.onRemovePin()\" ng-show=\"$ctrl.locationPos != null\"\\n' +\n    '                ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_REMOVE_PIN\\'  }}\">\\n' +\n    '                {{ ::\\'LOCATION_REMOVE_PIN\\' | translate }}\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '        <div class=\"flex\"></div>\\n' +\n    '        <div class=\"layout-row layout-align-end-center\">\\n' +\n    '            <md-button ng-click=\"$ctrl.onCancel()\" aria-label=\"{{ ::\\'CANCEL\\'  }}\">\\n' +\n    '                {{ ::\\'CANCEL\\' | translate }}\\n' +\n    '            </md-button>\\n' +\n    '            <md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\" ng-disabled=\"$ctrl.transaction.busy()\"\\n' +\n    '                aria-label=\"{{ ::\\'APPLY\\'  }}\">\\n' +\n    '                {{ ::\\'APPLY\\' | translate }}\\n' +\n    '            </md-button>\\n' +\n    '        </div>\\n' +\n    '    </div>\\n' +\n    '    <div class=\"pip-body\">\\n' +\n    '        <div class=\"pip-location-container\"></div>\\n' +\n    '        <md-button class=\"md-icon-button md-fab pip-zoom-in\" ng-click=\"$ctrl.onZoomIn()\"\\n' +\n    '                   aria-label=\"{{ ::\\'LOCATION_ZOOM_IN\\'  }}\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:plus\"></md-icon>\\n' +\n    '        </md-button>\\n' +\n    '        <md-button class=\"md-icon-button md-fab pip-zoom-out\" ng-click=\"$ctrl.onZoomOut()\"\\n' +\n    '                   aria-label=\"{{ ::\\'LOCATION_ZOOM_OUT\\'  }}\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:minus\"></md-icon>\\n' +\n    '        </md-button>\\n' +\n    '        <md-button class=\"md-icon-button md-fab pip-set-location\" ng-click=\"$ctrl.onSetLocation()\"\\n' +\n    '                   aria-label=\"{{ ::\\'LOCATION_SET_LOCATION\\'  }}\"\\n' +\n    '                   ng-show=\"supportSet\" ng-disabled=\"transaction.busy()\">\\n' +\n    '            <md-icon md-svg-icon=\"icons:target\"></md-icon>\\n' +\n    '        </md-button>\\n' +\n    '    </div>\\n' +\n    '</md-dialog>\\n' +\n    '');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location/Location.html',\n    '<div class=\"pip-location-name location-collapse\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"!$ctrl.pipCollapse\"\\n' +\n    '    ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\">\\n' +\n    '    <md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon>\\n' +\n    '    <span class=\"pip-location-text\">{{$ctrl.pipLocationName}}</span>\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<md-button class=\"pip-location-name\" ng-click=\"$ctrl.pipLocationResize()\" ng-if=\"$ctrl.pipCollapse\"\\n' +\n    '    ng-class=\"$ctrl.pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\">\\n' +\n    '    <div class=\"layout-align-start-center layout-row w-stretch\">\\n' +\n    '        <md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"$ctrl.pipShowLocationIcon\"></md-icon>\\n' +\n    '        <span class=\"pip-location-text flex\">{{$ctrl.pipLocationName}}</span>\\n' +\n    '        <md-icon md-svg-icon=\"icons:triangle-down\" class=\"flex-fixed\" ng-show=\"!$ctrl.showMap\"></md-icon>\\n' +\n    '        <md-icon md-svg-icon=\"icons:triangle-up\" class=\"flex-fixed\" ng-show=\"$ctrl.showMap\"></md-icon>\\n' +\n    '    </div>\\n' +\n    '</md-button>\\n' +\n    '\\n' +\n    '<div class=\"pip-location-container\">\\n' +\n    '</div>');\n}]);\n})();\n\n(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_edit/LocationEdit.html',\n    '<md-input-container class=\"md-block\">\\n' +\n    '    <label>{{ \\'LOCATION\\' | translate }}</label>\\n' +\n    '    <input ng-model=\"$ctrl.pipLocationName\" ng-disabled=\"$ctrl.ngDisabled\"/>\\n' +\n    '</md-input-container>\\n' +\n    '<div class=\"pip-location-empty\" layout=\"column\" layout-align=\"center center\">\\n' +\n    '    <md-button class=\"md-raised\" ng-disabled=\"$ctrl.ngDisabled\" ng-click=\"$ctrl.onSetLocation()\"\\n' +\n    '            aria-label=\"LOCATION_ADD_LOCATION\">\\n' +\n    '            <span class=\"icon-location\"></span> {{\\'LOCATION_ADD_LOCATION\\' | translate }}\\n' +\n    '    </md-button>\\n' +\n    '</div>\\n' +\n    '<div class=\"pip-location-container\" tabindex=\"{{ $ctrl.ngDisabled ? -1 : 0 }}\" \\n' +\n    '    ng-click=\"$ctrl.onMapClick($event)\" ng-keypress=\"$ctrl.onMapKeyPress($event)\">\\n' +\n    '</div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-locations-html.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}