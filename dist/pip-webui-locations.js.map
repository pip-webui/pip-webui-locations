{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/translate.ts","src/location/location.ts","src/location_dialog/location_dialog.ts","src/location_edit/location_edit.ts","src/location_ip/location_ip.ts","src/location_map/location_map.ts","src/locations.ts","temp/pip-webui-locations-html.min.js"],"names":[],"mappings":"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","file":"pip-webui-locations.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/// <reference path=\"../../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipLocations.Translate', []);\n\n    thisModule.filter('translate', function ($injector) {\n        var pipTranslate = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return function (key) {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    });\n\n})();\n\n","/**\n * @file Location control\n * @copyright Digital Living Software Corp. 2014-2016\n * @todo\n * - Improve samples in sampler app\n */\n\n/* global angular, google */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipLocation\", []);\n\n    thisModule.directive('pipLocation', \n        function () {\n            return {\n                restrict: 'EA',\n                scope: {\n                    pipLocationName: '&',\n                    pipLocationPos: '&',\n                    pipLocationResize: '&',\n                    pipShowLocationIcon: '='\n                },\n                template: \n                    function($element, $attrs: any) {\n                        function toBoolean(value) {\n                            if (value == null) return false;\n                            if (!value) return false;\n                            value = value.toString().toLowerCase();\n                            return value == '1' || value == 'true';\n                        }\n\n                        if (toBoolean($attrs.pipCollapse)) {\n                            return String()\n                                + '<div class=\"pip-location-name location-collapse\" ng-click=\"pipLocationResize()\" ng-hide=\"!pipLocationName()\"'\n                                + 'ng-class=\"pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\">'\n                                + '<md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"pipShowLocationIcon\"></md-icon>'\n                                + '<span class=\"pip-location-text\">{{pipLocationName()}}</span> '\n                                + '</div>'\n                                + '<div class=\"pip-location-container\" ng-hide=\"!pipLocationPos()\"></div>';\n                        } else {\n                            return String()\n                                + '<md-button class=\"pip-location-name\" ng-click=\"pipLocationResize()\" '\n                                + 'ng-class=\"pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\">'\n                                + '<div class=\"layout-align-start-center layout-row w-stretch\">'\n                                + '<md-icon md-svg-icon=\"icons:location\" class=\"flex-fixed pip-icon\" ng-if=\"pipShowLocationIcon\"></md-icon>'\n                                + '<span class=\"pip-location-text flex\">{{pipLocationName()}}</span>'\n                                + '<md-icon md-svg-icon=\"icons:triangle-down\" class=\"flex-fixed\" ng-if=\"!showMap\"></md-icon>'\n                                + '<md-icon md-svg-icon=\"icons:triangle-up\" class=\"flex-fixed\" ng-if=\"showMap\"></md-icon>'\n                                + '</div></md-button>'\n                                + '<div class=\"pip-location-container\"'\n                                + 'ng-class=\"pipShowLocationIcon ? \\'pip-location-icon-space\\' : \\'\\'\"></div>';\n                        }\n                    },\n                controller: 'pipLocationController'\n            }\n        }\n    );\n\n    thisModule.controller('pipLocationController',\n        function ($scope, $element, $attrs) {\n\n            function toBoolean(value) {\n                if (value == null) return false;\n                if (!value) return false;\n                value = value.toString().toLowerCase();\n                return value == '1' || value == 'true';\n            }\n\n            var \n                $name = $element.children('.pip-location-name'),\n                $mapContainer = $element.children('.pip-location-container'),\n                $mapControl = null,\n                $up = $element.find('.icon-up'),\n                $down = $element.find('.icon-down'),\n                collapsable = toBoolean($attrs.pipCollapse);\n\n            function clearMap() {\n                // Remove map control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = null;\n                $mapContainer.hide();\n            };\n\n            function generateMap() {\n                var location = $scope.pipLocationPos();\n                \n                // Safeguard for bad coordinates\n                if ($scope.showMap == false || location == null\n                    || location.coordinates == null\n                    || location.coordinates.length < 0) {\n                    clearMap();\n                    return;\n                }\n\n                // Determine map coordinates\n                var coordinates = new google.maps.LatLng(\n                    location.coordinates[0],\n                    location.coordinates[1]\n                );\n\n                // Clean up the control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = $('<div></div>');\n                $mapContainer.show();\n                $mapControl.appendTo($mapContainer);\n\n                // Create the map with point marker\n                var \n                    mapOptions = {\n                        center: coordinates,\n                        zoom: 12,\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\n                        disableDefaultUI: true,\n                        disableDoubleClickZoom: true,\n                        scrollwheel: false,\n                        draggable: false\n                    },\n                    map = new google.maps.Map($mapControl[0], mapOptions);\n                    \n                new google.maps.Marker({\n                    position: coordinates,\n                    map: map\n                });\n            };\n\n            // Process user actions\n            if (!collapsable) {\n                $scope.showMap = false;\n                $up.hide();\n                $mapContainer.hide();\n\n                $name.click(function (event) {\n                    event.stopPropagation();\n                    if ($attrs.disabled) return;\n                    $scope.showMap = !$scope.showMap;\n                    $up[$scope.showMap ? 'show' : 'hide']();\n                    $down[!$scope.showMap ? 'show' : 'hide']();\n                    generateMap();\n                });\n            }\n\n            // Watch for location changes\n            if (toBoolean($attrs.pipRebind)) {\n                $scope.$watch($scope.pipLocationPos,\n                    function (newValue) {\n                        generateMap();\n                    }\n                );\n            }\n\n            // Add class\n            $element.addClass('pip-location');\n\n            // Visualize map\n            if ($scope.pipLocationPos()) generateMap();\n            else clearMap();\n        }    \n    );\n\n})();\n","/**\n * @file Location edit dialog\n * @copyright Digital Living Software Corp. 2014-2016\n * @todo\n * - Improve sample in sampler app\n */\n \n/* global angular, google */\n\nclass LocationDialogService {\n    private _$mdDialog: angular.material.IDialogService;\n\n    constructor($mdDialog: angular.material.IDialogService) {\n        this._$mdDialog = $mdDialog;\n    }\n\n    public show (params, successCallback, cancelCallback) {\n        this._$mdDialog.show({\n            controller: 'pipLocationEditDialogController',\n            controllerAs: '$ctrl',\n            templateUrl: 'location_dialog/location_dialog.html',\n            locals: {\n                locationName: params.locationName,\n                locationPos: params.locationPos\n            },\n            clickOutsideToClose: true\n        })\n        .then((result) => {\n            if (successCallback) {\n                successCallback(result);\n            }\n        }, () => {\n            if (cancelCallback) {\n                cancelCallback();\n            }\n        });\n    }\n}\n\nclass LocationEditDialogController {\n    private _map = null;\n    private _marker = null;\n    private _$scope: ng.IScope;\n    private _$mdDialog: angular.material.IDialogService;\n\n    public theme: string;\n    public locationPos;\n    public locationName;\n    public supportSet: boolean;\n\n    constructor(\n        $scope: ng.IScope, \n        $rootScope: ng.IRootScopeService, \n        $timeout: angular.ITimeoutService, \n        $mdDialog: angular.material.IDialogService,\n        locationPos, \n        locationName) {\n\n        this._$mdDialog = $mdDialog;\n        this._$scope = $scope;\n        this.theme = $rootScope['$theme'];\n        this.locationPos = locationPos && locationPos.type == 'Point'\n                && locationPos.coordinates && locationPos.coordinates.length == 2\n                ? locationPos : null;\n        this.locationName = locationName;\n        this.supportSet = navigator.geolocation != null;\n\n         // Wait until dialog is initialized\n        $timeout(() => {\n            let mapContainer = $('.pip-location-edit-dialog .pip-location-container');\n            // Calculate coordinate of the center\n            let coordinates = this.locationPos ?\n                new google.maps.LatLng(\n                    this.locationPos.coordinates[0],\n                    this.locationPos.coordinates[1]\n                ) : null;\n\n                // Create the map with point marker\n            let mapOptions = {\n                center: new google.maps.LatLng(0, 0),\n                zoom: 1,\n                mapTypeId: google.maps.MapTypeId.ROADMAP,\n                disableDefaultUI: true\n            }\n            if (coordinates != null) {\n                mapOptions.center = coordinates;\n                mapOptions.zoom = 12;\n            }\n\n            this._map = new google.maps.Map(mapContainer[0], mapOptions);\n            this._marker = this.createMarker(coordinates);\n\n                // Fix resizing issue\n            setTimeout(() => {\n                google.maps.event.trigger(this._map, 'resize');\n            }, 1000);\n        }, 0);\n\n        $scope.$on('pipLayoutResized', () => {\n            if (this._map == null) return;\n            google.maps.event.trigger(this._map, 'resize');\n        });\n\n    }\n\n    public createMarker (coordinates) {\n        if (this._marker) this._marker.setMap(null);\n        if (coordinates) {\n            this._marker = new google.maps.Marker({ \n                position: coordinates, \n                map: this._map,\n                draggable: true,\n                animation: google.maps.Animation.DROP\n            });\n\n            let thisMarker = this._marker;\n            google.maps.event.addListener(thisMarker, 'dragend', () => {\n                let coordinates = thisMarker.getPosition(); \n                    this.changeLocation(coordinates, null);\n            });\n        } else {\n            this._marker = null;\n        }\n\n        return this._marker;\n    }\n\n    public changeLocation(coordinates, tid) {\n        this.locationPos = {\n            type: 'Point',\n            coordinates: [coordinates.lat(), coordinates.lng()]\n        };\n        this.locationName = null;\n\n        if (tid == null) {\n            // tid = $scope.transaction.begin();\n            if (tid == null) return;\n        }\n\n        // Read address\n        let geocoder = new google.maps.Geocoder();\n        geocoder.geocode({ location: coordinates }, (results, status) => {\n            // if ($scope.transaction.aborted(tid)) return;\n\n            // Process positive response\n            if (status == google.maps.GeocoderStatus.OK && results && results.length > 0) {\n                this.locationName = results[0].formatted_address;\n            }\n\n                    // $scope.transaction.end();\n            this._$scope.$apply();\n        })\n    }\n    public onAddPin() {\n        if (this._map == null) return;\n\n        let coordinates = this._map.getCenter();\n            this._marker = this.createMarker(coordinates);\n            this.changeLocation(coordinates, null);\n    }\n\n    public onRemovePin() {\n        if (this._map == null) return;\n        this._marker = this.createMarker(null);\n        this.locationPos = null;\n        this.locationName = null;\n    }\n\n    public onZoomIn() {\n        if (this._map == null) return;\n        let zoom = this._map.getZoom();\n        this._map.setZoom(zoom + 1);\n    }\n\n    public onZoomOut() {\n        if (this._map == null) return;\n        let zoom = this._map.getZoom();\n        this._map.setZoom(zoom > 1 ? zoom - 1 : zoom);\n    }\n\n    public onSetLocation = function () {\n        if (this._map == null) return;\n\n                // var tid = $scope.transaction.begin();\n                // if (tid == null) return;\n\n        navigator.geolocation.getCurrentPosition(\n            (position) => {\n                        // if ($scope.transaction.aborted(tid)) return;\n\n                let coordinates = new google.maps.LatLng(\n                    position.coords.latitude, position.coords.longitude);\n                this._marker = this.createMarker(coordinates);\n                this._map.setCenter(coordinates);\n                this._map.setZoom(12);\n                this.changeLocation(coordinates, null);\n            },\n            () => {\n                        // $scope.transaction.end();\n                this.$scope.$apply();\n            },\n        {\n            maximumAge: 0,\n            enableHighAccuracy: true,\n            timeout: 5000\n        });\n    }\n\n    public onCancel(): void {\n        this._$mdDialog.cancel();\n    }\n\n    public onApply(): void {\n        this._$mdDialog.hide({\n            location: this.locationPos,\n            locationPos: this.locationPos,\n            locationName: this.locationName   \n        })\n    }\n\n    \n\n}\n\n(() => {\n    'use strict';\n    function LocationDialogRun ($injector) {\n        let pipTranslate = $injector.has('pipTranslate') ? $injector.get('pipTranslate') : null;\n\n        if (pipTranslate) {\n            pipTranslate.setTranslations('en', {\n                'LOCATION_ADD_LOCATION': 'Add location',\n                'LOCATION_SET_LOCATION': 'Set location',\n                'LOCATION_ADD_PIN': 'Add pin',\n                'LOCATION_REMOVE_PIN': 'Remove pin'\n            });\n            pipTranslate.setTranslations('ru', {\n                'LOCATION_ADD_LOCATION': 'Добавить местоположение',\n                'LOCATION_SET_LOCATION': 'Определить положение',\n                'LOCATION_ADD_PIN': 'Добавить точку',\n                'LOCATION_REMOVE_PIN': 'Убрать точку'\n            });\n        }\n    }\n\n\n    angular.module('pipLocationEditDialog', ['ngMaterial',  'pipLocations.Templates'])\n           .run(LocationDialogRun)\n           .service('pipLocationEditDialog', LocationDialogService)\n           .controller('pipLocationEditDialogController', LocationEditDialogController \n        /*function ($scope, $rootScope, $timeout, $mdDialog,  locationPos, locationName) {\n\n            $scope.theme = $rootScope.$theme;\n            $scope.locationPos = locationPos && locationPos.type == 'Point'\n                && locationPos.coordinates && locationPos.coordinates.length == 2\n                ? locationPos : null;\n            $scope.locationName = locationName;\n            $scope.supportSet = navigator.geolocation != null;\n\n            // $scope.transaction = pipTransaction('location_edit_dialog', $scope);\n\n            var map = null, marker = null;\n\n            function createMarker (coordinates) {\n                if (marker) marker.setMap(null);\n                \n                if (coordinates) {\n                    marker = new google.maps.Marker({ \n                        position: coordinates, \n                        map: map,\n                        draggable: true,\n                        animation: google.maps.Animation.DROP\n                    });\n\n                    var thisMarker = marker;\n                    google.maps.event.addListener(thisMarker, 'dragend', function() {\n                       var coordinates = thisMarker.getPosition(); \n                       changeLocation(coordinates, null);\n                    });\n                } else {\n                    marker = null;\n                }\n\n                return marker;\n            };\n\n            function changeLocation(coordinates, tid) {\n                $scope.locationPos = {\n                    type: 'Point',\n                    coordinates: [coordinates.lat(), coordinates.lng()]\n                };\n                $scope.locationName = null;\n\n                if (tid == null) {\n                    // tid = $scope.transaction.begin();\n                    if (tid == null) return;\n                }\n\n                // Read address\n                var geocoder = new google.maps.Geocoder();\n                geocoder.geocode({ location: coordinates }, function(results, status) {\n                    // if ($scope.transaction.aborted(tid)) return;\n\n                    // Process positive response\n                    if (status == google.maps.GeocoderStatus.OK\n                        && results && results.length > 0) {\n                        $scope.locationName = results[0].formatted_address;\n                    }\n\n                    // $scope.transaction.end();\n                    $scope.$apply();\n                });\n            };\n\n            // Wait until dialog is initialized\n            $timeout(function () {\n                var mapContainer = $('.pip-location-edit-dialog .pip-location-container');\n\n                // Calculate coordinate of the center\n                var coordinates = $scope.locationPos ?\n                    new google.maps.LatLng(\n                        $scope.locationPos.coordinates[0],\n                        $scope.locationPos.coordinates[1]\n                    ) : null;\n\n                // Create the map with point marker\n                var mapOptions = {\n                    center: new google.maps.LatLng(0, 0),\n                    zoom: 1,\n                    mapTypeId: google.maps.MapTypeId.ROADMAP,\n                    disableDefaultUI: true\n                };\n                if (coordinates != null) {\n                    mapOptions.center = coordinates;\n                    mapOptions.zoom = 12;\n                }\n\n                map = new google.maps.Map(mapContainer[0], mapOptions);\n                marker = createMarker(coordinates);\n\n                // Fix resizing issue\n                setTimeout(function () {\n                    google.maps.event.trigger(map, 'resize');\n                }, 1000);\n            }, 0);\n\n            $scope.$on('pipLayoutResized', function (event) {\n                if (map == null) return;\n                google.maps.event.trigger(map, 'resize');\n            });\n\n            $scope.onAddPin = function () {\n                if (map == null) return;\n\n                var coordinates = map.getCenter();\n                marker = createMarker(coordinates);\n                changeLocation(coordinates, null);\n            };\n\n            $scope.onRemovePin = function () {\n                if (map == null) return;\n                marker = createMarker(null);\n                $scope.locationPos = null;\n                $scope.locationName = null;\n            };\n\n            $scope.onZoomIn = function () {\n                if (map == null) return;\n                var zoom = map.getZoom();\n                map.setZoom(zoom + 1);\n            };\n\n            $scope.onZoomOut = function () {\n                if (map == null) return;\n                var zoom = map.getZoom();\n                map.setZoom(zoom > 1 ? zoom - 1 : zoom);\n            };\n\n            $scope.onSetLocation = function () {\n                if (map == null) return;\n\n                // var tid = $scope.transaction.begin();\n                // if (tid == null) return;\n\n                navigator.geolocation.getCurrentPosition(\n                    function (position) {\n                        // if ($scope.transaction.aborted(tid)) return;\n\n                        var coordinates = new google.maps.LatLng(\n                            position.coords.latitude, position.coords.longitude);\n\n                        marker = createMarker(coordinates);\n                        map.setCenter(coordinates);\n                        map.setZoom(12);\n\n                        changeLocation(coordinates, null);\n                    },\n                    function () {\n                        // $scope.transaction.end();\n                        $scope.$apply();\n                    },\n                    {\n                        maximumAge: 0,\n                        enableHighAccuracy: true,\n                        timeout: 5000\n                    }\n                );\n            };\n\n            $scope.onCancel = function () {\n                $mdDialog.cancel();\n            };\n\n            $scope.onApply = function () {\n                $mdDialog.hide({\n                    location: $scope.locationPos,\n                    locationPos: $scope.locationPos,\n                    locationName: $scope.locationName   \n                });\n            };\n        }*/\n    );\n})();\n","/**\n * @file Location edit control\n * @copyright Digital Living Software Corp. 2014-2016\n * @todo\n * - Improve samples in sampler app\n */\n \n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipLocationEdit\", ['pipLocationEditDialog']);\n\n    thisModule.directive('pipLocationEdit',\n        function ($parse, $http, pipLocationEditDialog) {\n            return {\n                restrict: 'EAC',\n                scope: {\n                    pipLocationName: '=',\n                    pipLocationPos: '=',\n                    pipLocationHolder: '=',\n                    ngDisabled: '&',\n                    pipChanged: '&'\n                },\n                template: String()\n                    + '<md-input-container class=\"md-block\">'\n                    + '<label>{{ \\'LOCATION\\' | translate }}</label>'\n                    + '<input ng-model=\"pipLocationName\"'\n                    + 'ng-disabled=\"ngDisabled()\"/></md-input-container>'\n                    + '<div class=\"pip-location-empty\" layout=\"column\" layout-align=\"center center\">'\n                    + '<md-button class=\"md-raised\" ng-disabled=\"ngDisabled()\" ng-click=\"onSetLocation()\"'\n                    + 'aria-label=\"LOCATION_ADD_LOCATION\">'\n                    + '<span class=\"icon-location\"></span> {{::\\'LOCATION_ADD_LOCATION\\' | translate }}'\n                    + '</md-button></div>'\n                    + '<div class=\"pip-location-container\" tabindex=\"{{ ngDisabled() ? -1 : 0 }}\"'\n                    + ' ng-click=\"onMapClick($event)\" ng-keypress=\"\"onMapKeyPress($event)\"></div>',\n                controller: function ($scope, $element) {\n                    $element.find('md-input-container').attr('md-no-float', !!$scope.pipLocationHolder);\n                },\n                link: function ($scope: any, $element) {\n\n                    var \n                        $empty = $element.children('.pip-location-empty'),\n                        $mapContainer = $element.children('.pip-location-container'),\n                        $mapControl = null;\n\n                    function clearMap() {\n                        // Remove map control\n                        if ($mapControl) $mapControl.remove();\n                        $mapControl = null;\n\n                        // Toggle control visibility\n                        $mapContainer.hide();\n                        $empty.show();\n                    };\n\n                    function generateMap() {\n                        // Safeguard for bad coordinates\n                        var location = $scope.pipLocationPos;\n                        if (location == null || location.coordinates == null || location.coordinates.length < 0) {\n                            clearMap();\n                            return;\n                        }\n\n                        // Determine map coordinates\n                        var coordinates = new google.maps.LatLng(\n                            location.coordinates[0],\n                            location.coordinates[1]\n                        );\n\n                        // Clean up the control\n                        if ($mapControl) $mapControl.remove();\n\n                        // Toggle control visibility\n                        $mapContainer.show();\n                        $empty.hide();\n\n                        // Add a new map\n                        $mapControl = $('<div></div>');\n                        $mapControl.appendTo($mapContainer);\n\n                        // Create the map with point marker\n                        var mapOptions = {\n                            center: coordinates,\n                            zoom: 12,\n                            mapTypeId: google.maps.MapTypeId.ROADMAP,\n                            disableDefaultUI: true,\n                            disableDoubleClickZoom: true,\n                            scrollwheel: false,\n                            draggable: false\n                        };\n                        var map = new google.maps.Map($mapControl[0], mapOptions);\n                        var marker = new google.maps.Marker({\n                            position: coordinates,\n                            map: map\n                        });\n                    };\n\n                    function defineCoordinates() {\n                        var locationName = $scope.pipLocationName;\n\n                        if (locationName == '') {\n                            $scope.pipLocationPos = null;\n                            clearMap();\n                            $scope.$apply();\n                            return;\n                        }\n\n                    //    $http.get('http://maps.googleapis.com/maps/api/geocode/json?address=' + locationName)\n                    //    .success(function (response) { ... })\n                    //    .error(function (response) {... });\n\n                        var geocoder = new google.maps.Geocoder();\n                        geocoder.geocode({ address: locationName }, function(results, status) {\n                            $scope.$apply(function() {\n                                // Process response\n                                if (status == google.maps.GeocoderStatus.OK) {\n                                    // Check for empty results\n                                    if (results == null || results.length == 0) {\n                                        $scope.pipLocationPos = null;\n                                        clearMap();\n                                        return;\n                                    }\n\n                                    var \n                                        geometry = results[0].geometry || {},\n                                        location = geometry.location || {};\n\n                                    // Check for empty results again\n                                    if (location.lat == null || location.lng == null) {\n                                        $scope.pipLocationPos = null;\n                                        clearMap();\n                                        return;\n                                    }\n\n                                    $scope.pipLocationPos = {\n                                        type: 'Point',\n                                        coordinates: [\n                                            location.lat(),\n                                            location.lng()\n                                        ]\n                                    };\n\n                                    //generateMap();                                \n                                } \n                                // Process error...\n                                else {\n                                    $scope.pipLocationPos = null;\n                                    //clearMap();                                \n                                }\n                            });\n                        });\n\n                    };\n                    var defineCoordinatesDebounced = _.debounce(defineCoordinates, 2000);\n\n                    // Process user actions\n                    \n                    $scope.onSetLocation = function() {\n                        if ($scope.ngDisabled()) return;\n                          \n                        pipLocationEditDialog.show(\n                            {\n                                locationName: $scope.pipLocationName,\n                                locationPos: $scope.pipLocationPos\n                            },\n                            function (result) {\n                                var \n                                    location = result.location,\n                                    locationName = result.locationName;\n\n                                // Do not change anything if location is about the same\n                                if ($scope.pipLocationPos && $scope.pipLocationPos.type == 'Point'\n                                    && $scope.pipLocationPos.coordinates.length == 2\n                                    && location && location.coordinates.length == 2\n                                    && ($scope.pipLocationPos.coordinates[0] - location.coordinates[0]) < 0.0001\n                                    && ($scope.pipLocationPos.coordinates[1] - location.coordinates[1]) < 0.0001\n                                    && (locationName == $scope.pipLocationName)) {\n                                    return;        \n                                }\n\n                                $scope.pipLocationPos = location;\n                                $scope.pipLocationName = locationName;\n\n                                if (locationName == null && location != null) {\n                                    $scope.pipLocationName = \n                                        '(' + result.location.coordinates[0]\n                                        + ',' + result.location.coordinates[1] + ')';\n                                }\n                                $scope.pipChanged();\n                                $mapContainer[0].focus();\n                            }\n                        );\n                    };\n\n                    $scope.onMapClick = function ($event) {\n                        if ($scope.ngDisabled()) return;\n\n                        $mapContainer[0].focus();\n                        $scope.onSetLocation();\n                        //$event.stopPropagation();\n                    };\n\n                    $scope.onMapKeyPress = function($event) {\n                        if ($scope.ngDisabled()) return;\n\n                        if ($event.keyCode == 13 || $event.keyCode == 32) {\n                            $scope.onSetLocation();\n                            //$event.stopPropagation();\n                        }  \n                    };\n\n                    // Watch for location name changes\n                    $scope.$watch(\n                        function () {\n                            return $scope.pipLocationName\n                        },\n                        function (newValue, oldValue) {\n                            if (newValue != oldValue)\n                                defineCoordinatesDebounced();\n                        }\n                    );\n\n                    $scope.$watch(\n                        function () {\n                            return $scope.pipLocationPos\n                        },\n                        function () {\n                            generateMap();\n                        }\n                    );\n\n                    // Add class\n                    $element.addClass('pip-location-edit');\n\n                    // Visualize map\n                    if ($scope.pipLocationPos) generateMap();\n                    else clearMap();\n                }\n            }\n        }\n    );\n\n})();\n","/**\n * @file Location IP control\n * @copyright Digital Living Software Corp. 2014-2016\n * @todo\n * - Improve samples in sampler app\n */\n \n/* global angular, google */\n\ndeclare let google: any;\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipLocationIp\", []);\n\n    thisModule.directive('pipLocationIp',\n        function () {\n            return {\n                restrict: 'EA',\n                scope: {\n                    pipIpaddress: '&',\n                    pipExtraInfo: '&'\n                },\n                template: '<div class=\"pip-location-container\"></div>',\n                controller: 'pipLocationIpController'\n            }\n        }\n    );\n\n    thisModule.controller('pipLocationIpController',\n        function ($scope, $element, $attrs, $http) {\n\n            var \n                $mapContainer = $element.children('.pip-location-container'),\n                $mapControl = null;\n\n            function clearMap() {\n                // Remove map control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = null;\n            }\n\n            function generateMap(latitude, longitude) {\n                // Safeguard for bad coordinates\n                if (latitude == null || longitude == null) {\n                    clearMap();\n                    return;\n                }\n\n                // Determine map coordinates\n                var coordinates = new google.maps.LatLng(\n                    latitude,\n                    longitude\n                );\n\n                // Clean up the control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = $('<div></div>');\n                $mapControl.appendTo($mapContainer);\n\n                // Create the map with point marker\n                var \n                    mapOptions = {\n                        center: coordinates,\n                        zoom: 12,\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\n                        disableDefaultUI: true,\n                        disableDoubleClickZoom: true,\n                        scrollwheel: false,\n                        draggable: false\n                    },\n                    map = new google.maps.Map($mapControl[0], mapOptions);\n                    \n                new google.maps.Marker({\n                    position: coordinates,\n                    map: map\n                });\n            }\n\n            function toBoolean(value) {\n                if (value == null) return false;\n                if (!value) return false;\n                value = value.toString().toLowerCase();\n                return value == '1' || value == 'true';\n            }\n\n            function defineCoordinates() {\n                var ipAddress = $scope.pipIpaddress();\n\n                if (ipAddress == '') {\n                    clearMap();\n                    return;\n                }\n\n                // Todo: Find more reliable geocoding service to locate ip addresses\n                $http.jsonp('https://www.geoplugin.net/json.gp?ip=' + ipAddress + '&jsoncallback=JSON_CALLBACK')\n                .success(function (response) {\n                    if (response != null \n                        && response.geoplugin_latitude != null\n                        && response.geoplugin_longitude != null) {\n                        \n                        generateMap(response.geoplugin_latitude, response.geoplugin_longitude);\n\n                        if ($scope.pipExtraInfo) {\n                            var extraInfo = {\n                                city: response.geoplugin_city,  \n                                regionCode: response.geoplugin_regionCode,  \n                                region: response.geoplugin_regionName,  \n                                areaCode: response.geoplugin_areaCode,  \n                                countryCode: response.geoplugin_countryCode,  \n                                country: response.geoplugin_countryName,  \n                                continentCode: response.geoplugin_continentCode\n                            };\n                            $scope.pipExtraInfo({ extraInfo: extraInfo });\n                        }\n                    } else {\n                        clearMap();\n                    }\n                })\n                .error(function (response) {\n                    console.error(response);\n                    clearMap();\n                });\n            }\n\n            // Watch for location changes\n            if (toBoolean($attrs.pipRebind)) {\n                $scope.$watch(\n                    function () {\n                        return $scope.pipIpaddress()\n                    },\n                    function (newValue) {\n                        defineCoordinates();\n                    }\n                );\n            }\n\n            // Add class\n            $element.addClass('pip-location-ip');\n\n            // Visualize map\n            defineCoordinates();\n        }        \n    );\n\n})();\n\n","/**\n * @file Location map control\n * @copyright Digital Living Software Corp. 2014-2016\n */\n \n/* global angular, google */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module(\"pipLocationMap\", []);\n\n    thisModule.directive('pipLocationMap',\n        function () {\n            return {\n                restrict: 'EA',\n                scope: {\n                    pipLocationPos: '&',\n                    pipLocationPositions: '&',\n                    pipIconPath: '&',\n                    pipDraggable: '&',\n                    pipStretch: '&'\n                },\n                template: '<div class=\"pip-location-container\"></div>',\n                controller: 'pipLocationMapController'\n            }\n        }\n    );\n\n    thisModule.controller('pipLocationMapController',\n        ['$scope', '$element', '$attrs', '$parse', '$timeout', function ($scope, $element, $attrs, $parse, $timeout) {\n            var\n                $mapContainer = $element.children('.pip-location-container'),\n                $mapControl = null,\n                stretchMap = $scope.pipStretch() || false,\n                iconPath = $scope.pipIconPath();\n\n            function clearMap() {\n                // Remove map control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = null;\n            }\n\n            function checkLocation (loc) {\n                return !(loc == null\n                || loc.coordinates == null\n                || loc.coordinates.length < 0);\n            }\n\n            function determineCoordinates(loc) {\n                var point = new google.maps.LatLng(\n                    loc.coordinates[0],\n                    loc.coordinates[1]\n                );\n\n                point.fill = loc.fill;\n                point.stroke = loc.stroke;\n\n                return point;\n            }\n\n            function toBoolean(value) {\n                if (value == null) return false;\n                if (!value) return false;\n                value = value.toString().toLowerCase();\n                return value == '1' || value == 'true';\n            }\n\n            function generateMap() {\n                var location = $scope.pipLocationPos(),\n                    locations = $scope.pipLocationPositions(),\n                    points = [],\n                    draggable = $scope.pipDraggable() || false;\n\n                // Safeguard for bad coordinates\n                if (checkLocation(location)) {\n                    points.push(determineCoordinates(location));\n                } else {\n                    if (locations && locations.length && locations.length > 0) {\n                        locations.forEach(function (loc) {\n                            if (checkLocation(loc)) {\n                                points.push(determineCoordinates(loc));\n                            }\n                        });\n                    }\n                }\n\n                if (points.length === 0) {\n                    clearMap();\n                    return;\n                }\n\n                // Clean up the control\n                if ($mapControl) $mapControl.remove();\n                $mapControl = $('<div></div>');\n                $mapControl.appendTo($mapContainer);\n\n                // Create the map\n                var\n                    mapOptions = {\n                        center: points[0],\n                        zoom: 12,\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\n                        disableDefaultUI: true,\n                        disableDoubleClickZoom: true,\n                        scrollwheel: draggable,\n                        draggable: draggable\n                    },\n                    map = new google.maps.Map($mapControl[0], mapOptions),\n                    bounds = new google.maps.LatLngBounds();\n\n                // Create markers\n                points.forEach(function(point) {\n                    var icon = {\n                        path: iconPath,\n                        fillColor: point.fill || '#EF5350',\n                        fillOpacity: 1,\n                        scale: 1,\n                        strokeColor: point.stroke || 'white',\n                        strokeWeight: 5\n                    };\n\n                    new google.maps.Marker({\n                        position: point,\n                        map: map,\n                        icon: iconPath ? icon : null\n                    });\n                    bounds.extend(point);\n                });\n\n                // Auto-config of zoom and center\n                if (points.length > 1) map.fitBounds(bounds);\n            }\n\n            // Watch for location changes\n            if (toBoolean($attrs.pipRebind)) {\n                $scope.$watch(\n                    function () {\n                        return $scope.pipLocationPos()\n                    },\n                    function () {\n                        generateMap();\n                    }\n                );\n            }\n\n            // Add class\n            $element.addClass('pip-location-map');\n            if (stretchMap) $mapContainer.addClass('stretch');\n\n            // Visualize map\n            if ($scope.pipLocationPos() || $scope.pipLocationPositions()) $timeout(generateMap, 200);\n            else clearMap();\n        }]\n    );\n\n})();\n\n","﻿/// <reference path=\"../typings/tsd.d.ts\" />\n\n(function () {\n    'use strict';\n\n    angular.module('pipLocations', [        \n        'pipLocation',\n        'pipLocationMap',\n        'pipLocationIp',\n        'pipLocationEditDialog',\n        'pipLocationEdit',\n        'pipLocations.Translate'\n    ]);\n    \n})();\n\n\n","(function(module) {\ntry {\n  module = angular.module('pipLocations.Templates');\n} catch (e) {\n  module = angular.module('pipLocations.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('location_dialog/location_dialog.html',\n    '<md-dialog class=\"pip-dialog pip-location-edit-dialog layout-column\" md-theme=\"{{$ctrl.theme}}\"><div class=\"pip-header layout-column layout-align-start-start\"><md-progress-linear ng-show=\"$ctrl.transaction.busy()\" md-mode=\"indeterminate\" class=\"pip-progress-top\"></md-progress-linear><h3 class=\"flex\">{{ \\'LOCATION_SET_LOCATION\\' | translate }}</h3></div><div class=\"pip-footer\"><div class=\"layout-row layout-align-start-center\"><md-button class=\"md-accent\" ng-click=\"$ctrl.onAddPin()\" ng-show=\"$ctrl.locationPos == null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_ADD_PIN\\' }}\">{{ ::\\'LOCATION_ADD_PIN\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onRemovePin()\" ng-show=\"$ctrl.locationPos != null\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'LOCATION_REMOVE_PIN\\' }}\">{{ ::\\'LOCATION_REMOVE_PIN\\' | translate }}</md-button></div><div class=\"flex\"></div><div class=\"layout-row layout-align-end-center\"><md-button ng-click=\"$ctrl.onCancel()\" aria-label=\"{{ ::\\'CANCEL\\' }}\">{{ ::\\'CANCEL\\' | translate }}</md-button><md-button class=\"md-accent\" ng-click=\"$ctrl.onApply()\" ng-disabled=\"$ctrl.transaction.busy()\" aria-label=\"{{ ::\\'APPLY\\' }}\">{{ ::\\'APPLY\\' | translate }}</md-button></div></div><div class=\"pip-body\"><div class=\"pip-location-container\"></div><md-button class=\"md-icon-button md-fab pip-zoom-in\" ng-click=\"$ctrl.onZoomIn()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_IN\\' }}\"><md-icon md-svg-icon=\"icons:plus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-zoom-out\" ng-click=\"$ctrl.onZoomOut()\" aria-label=\"{{ ::\\'LOCATION_ZOOM_OUT\\' }}\"><md-icon md-svg-icon=\"icons:minus\"></md-icon></md-button><md-button class=\"md-icon-button md-fab pip-set-location\" ng-click=\"$ctrl.onSetLocation()\" aria-label=\"{{ ::\\'LOCATION_SET_LOCATION\\' }}\" ng-show=\"supportSet\" ng-disabled=\"transaction.busy()\"><md-icon md-svg-icon=\"icons:target\"></md-icon></md-button></div></md-dialog>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-locations-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}